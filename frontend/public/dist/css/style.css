/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */

html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove default margin.
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */

a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari.
 */

figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */

pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
  margin: 0; /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"], /* 1 */
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button; /* 2 */
  cursor: pointer; /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */

input[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  box-sizing: content-box; /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*
   * Default settings:
   */
/*
   * Breakpoint setup:
   */
.hero {
  position: relative;
  z-index: 1;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 500px;
  width: 100%;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  text-align: center;
}
.hero-sticky-header,
.hero__header {
  z-index: 100;
  padding: 1em;
  color: #fff;
  background-color: transparent;
}
.hero-sticky-header h3,
.hero__header h3 {
  font-size: 1.125rem;
  opacity: 0.7;
  margin: 0;
}
.hero-sticky-header {
  visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
}
.hero-sticky-header > * {
  visibility: hidden;
}
.hero.-effect-darken::before,
.hero.-effect-lighten::before {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 0;
  content: " ";
  opacity: 0.2;
}
.hero.-effect-darken::before {
  background-color: #000;
}
.hero.-effect-lighten::before {
  background-color: #fff;
}
.hero__header {
  -ms-flex-item-align: start;
  align-self: flex-start;
}
.hero code {
  font-size: 3em;
}
.hero p {
  font-size: 1.5em;
}
.hero__container {
  z-index: 99;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  color: #e0e0e0;
}
.content {
  padding: 1em;
}
.content--collapse {
  min-height: initial;
}
.content__container,
.content__container--expand {
  border: 1px solid #e0e0e0;
  border-radius: 3px;
}
.content__container--expand {
  min-height: 496px;
}
/* iPhone [portrait + landscape] */
@media only screen and (min-width: 30em) {
  .hero-sticky-header {
    visibility: visible;
  }
  .hero-sticky-header > * {
    visibility: visible;
  }
}
/* iPad [portrait + landscape] */
@media only screen and (min-width: 48em) and (max-width: 64em) {
  .hero {
    background-attachment: scroll;
  }
  .hero-sticky-header {
    visibility: visible;
    background-position: 50% 100%;
    background-attachment: scroll;
  }
}



/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */

html {
  font-family: sans-serif; /* 1 */
  line-height: 1.15; /* 2 */
  -ms-text-size-adjust: 100%; /* 3 */
  -webkit-text-size-adjust: 100%; /* 3 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */

article,
aside,
details, /* 1 */
figcaption,
figure,
footer,
header,
main, /* 2 */
menu,
nav,
section,
summary { /* 1 */
  display: block;
}

/**
 * Add the correct display in IE 9-.
 */

audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */

template, /* 1 */
[hidden] {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */

a {
  background-color: transparent; /* 1 */
  -webkit-text-decoration-skip: objects; /* 2 */
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */

a:active,
a:hover {
  outline-width: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */

b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */

dfn {
  font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Add the correct background and color in IE 9-.
 */

mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10-.
 */

img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */

figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/* Forms
   ========================================================================== */

/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font: inherit; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Restore the font weight unset by the previous rule.
 */

optgroup {
  font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select { /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */

button,
html [type="button"], /* 1 */
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */

::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
 * Style setup for redsift-ui based sifts.
 *
 * - Provides:
 *   . ready-to-use UI components
 *   . responsive type system
 *   . breakpoint setup (via 'rupture')
 *   . common functionality like reset, patterns and fonts
 *
 * - Used by:
 *   . redsift-light
 *   . redsift-dark
 *
 * - Folder structure:
 *
 *   ./lib        -> mixin and function library
 *   ./common     -> CSS setup and common classes
 *   ./components -> UI components
 */
/*
 * Configuration via object '$ui-rs-core'
 */
/*
 * Mixin/functions library
 *
 * Common mixins and functions used by redsift-ui.
 */
/*
 * Base configuration and common classes:
 *
 * CSS base setup and common CSS classes.
 */
body {
  margin: 0;
  padding: 0;
  min-height: 100%;
}
.-pattern-down-arrow-green {
  background-image: url("/icons/down-arrow-green.svg");
  background-repeat: repeat;
  background-size: 12px 7px;
}
.-pattern-redsift-logo {
  background-image: url("/icons/redsift-logo-red-8.1.svg");
  background-repeat: repeat;
  background-size: 7px 7px;
}
.animate-opacity {
  transition: opacity ease-in 400ms;
}
.fade-in {
  animation: fadein 400ms ease-in 0s 1 normal both;
}
.delay {
  animation-delay: 400ms;
}
@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.hidden {
  opacity: 0;
}
.hash {
  background-image: repeating-linear-gradient(125deg, transparent, transparent 2px, rgba(0,0,0,0.2) 2px, rgba(0,0,0,0.2) 3px, transparent 3px, transparent 5px, rgba(0,0,0,0.2) 5px);
}
.-rs-icon-redsift-red {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-redsift-red.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-redsift-cloud {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-redsift-cloud.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-redsift-white {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-redsift-white.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-github {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/images/icon-github.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-github-white {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-icon-github-white.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-google {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/images/icon-google.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-linkedin {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-icon-linkedin.svg");
  background-position: 50% 50%;
  background-size: 25px;
  background-repeat: no-repeat;
}
.-rs-icon-slack {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/images/icon-slack.png");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-twitter {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/images/icon-twitter.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-settings {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/images/icon-settings.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-down-arrow-green {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/images/icon-down-arrow-green.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-logout {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-logout.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-profile {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-profile.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-dashboard {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-dashboard.svg");
  background-position: 50% 50%;
  background-size: 24px;
  background-repeat: no-repeat;
}
.-rs-icon-catalogue {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-catalogue.svg");
  background-position: 50% 50%;
  background-size: 24px;
  background-repeat: no-repeat;
}
.-rs-icon-workshop {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-workshop.svg");
  background-position: 50% 50%;
  background-size: 24px;
  background-repeat: no-repeat;
}
.-rs-icon-wireframe-blue {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-wireframe-blue.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-expand {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-expand.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-expand-split {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-expand-split.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-exit {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-exit.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
/* Heading font @import url("https://fonts.googleapis.com/css?family=Raleway:200"); */
/* latin */
@font-face {
  font-family: 'Raleway';
  font-style: normal;
  font-weight: 200;
  src: local('Raleway ExtraLight'), local('Raleway-ExtraLight'), url("https://fonts.gstatic.com/s/raleway/v11/8KhZd3VQBtXTAznvKjw-k73hpw3pgy2gAi-Ip7WPMi0.woff") format('woff'), url("https://fonts.gstatic.com/s/raleway/v11/8KhZd3VQBtXTAznvKjw-ky3USBnSvpkopQaUR-2r7iU.ttf") format('truetype');
}
@font-face {
  font-family: 'Raleway';
  font-style: normal;
  font-weight: 200;
  src: local('Raleway ExtraLight'), local('Raleway-ExtraLight'), url("https://fonts.gstatic.com/s/raleway/v11/8KhZd3VQBtXTAznvKjw-kwzyDMXhdD8sAj6OAJTFsBI.woff2") format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}
@font-face {
  font-family: 'Electrolize';
  font-style: normal;
  font-weight: 400;
  src: local('Electrolize'), local('Electrolize-Regular'), url("https://fonts.gstatic.com/s/electrolize/v5/DDy9sgU2U7S4xAwH5thnJ7rIa-7acMAeDBVuclsi6Gc.woff") format('woff'), url("https://fonts.gstatic.com/s/electrolize/v5/DDy9sgU2U7S4xAwH5thnJywlidHJgAgmTjOEEzwu1L8.ttf") format('truetype');
}
@font-face {
  font-family: 'Electrolize';
  font-style: normal;
  font-weight: 400;
  src: local('Electrolize'), local('Electrolize-Regular'), url("https://fonts.gstatic.com/s/electrolize/v5/DDy9sgU2U7S4xAwH5thnJ4gp9Q8gbYrhqGlRav_IXfk.woff2") format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 300;
  src: local('Source Code Pro Light'), local('SourceCodePro-Light'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqcVNtom4QlEDNJaqqqzqdSs.woff") format('woff'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqfS42wKzre0cxmO5m5GyTsY.ttf") format('truetype');
}
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 400;
  src: local('Source Code Pro'), local('SourceCodePro-Regular'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/mrl8jkM18OlOQN8JLgasD9Hq-FFgoDNV3GTKpHwuvtI.woff") format('woff'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/mrl8jkM18OlOQN8JLgasD0Y6Fu39Tt9XkmtSosaMoEA.ttf") format('truetype');
}
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 700;
  src: local('Source Code Pro Bold'), local('SourceCodePro-Bold'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqYqjGYJUyOXcBwUQbRaNH6c.woff") format('woff'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqblcMrNrsnL9dgADnXgYJjs.ttf") format('truetype');
}
/* latin-ext */
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 300;
  src: local('Source Code Pro Light'), local('SourceCodePro-Light'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqTOFnJNygIkrHciC8BWzbCz3rGVtsTkPsbDajuO5ueQw.woff2") format('woff2');
  unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 300;
  src: local('Source Code Pro Light'), local('SourceCodePro-Light'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqSP2LEk6lMzYsRqr3dHFImA.woff2") format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}
/* latin-ext */
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 400;
  src: local('Source Code Pro'), local('SourceCodePro-Regular'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/mrl8jkM18OlOQN8JLgasD4a1YDtoarzwSXxTHggEXMw.woff2") format('woff2');
  unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 400;
  src: local('Source Code Pro'), local('SourceCodePro-Regular'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/mrl8jkM18OlOQN8JLgasD5bPFduIYtoLzwST68uhz_Y.woff2") format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}
/* latin-ext */
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 700;
  src: local('Source Code Pro Bold'), local('SourceCodePro-Bold'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqe4s1Ux4PuImWPk5fSr6HPL3rGVtsTkPsbDajuO5ueQw.woff2") format('woff2');
  unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 700;
  src: local('Source Code Pro Bold'), local('SourceCodePro-Bold'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqZkF8H8ye47wsfpWywda8og.woff2") format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}
div.cards {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-direction: row;
  flex-direction: row;
}
div.cards >div {
  -ms-flex-positive: 0;
  flex-grow: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}
/*
   * Default settings:
   */
/* NOTE: It's necessary to use e.g. the $fontNormal variable here. Defining
   * multiple fonts directly in here yields a stylus compiler error.
   */
/*
   * Breakpoint setup:
   */
body {
  font-family: 'Raleway', sans-serif;
  font-size: 1.25rem;
  font-weight: 300;
}
button {
  font-family: 'Electrolize', sans-serif;
  font-weight: 400;
}
.overlayed {
  font-weight: 400;
}
code {
  font-family: 'Source Code Pro', monospace;
  white-space: nowrap;
}
pre code {
  white-space: pre-wrap;
}
p code {
  padding: 0;
  padding-top: 0.2em;
  padding-bottom: 0.2em;
  border-radius: 3px;
}
p code::before,
p code::after {
  letter-spacing: -0.2em;
  content: "\00a0";
}
pre {
  border-radius: 3px;
  padding: 1em;
}
h1 {
  font-family: 'Electrolize', sans-serif;
  font-size: 2rem;
  line-height: 1.2;
  margin-top: 0.1em;
  margin-bottom: 0.1em;
  font-weight: 400;
  text-transform: uppercase;
}
h2 {
  font-family: 'Electrolize', sans-serif;
  font-size: 1.4rem;
  line-height: 1.5;
  margin-top: 1.25rem;
  margin-bottom: 0.625rem;
  font-weight: 400;
  text-transform: uppercase;
}
h3 {
  font-family: 'Electrolize', sans-serif;
  font-size: 1.4rem;
  line-height: 1.5;
  margin-top: 0;
  margin-bottom: 0.625rem;
  font-weight: 400;
  text-transform: uppercase;
}
h4 {
  font-family: 'Electrolize', sans-serif;
  font-size: 1rem;
  line-height: 1.5;
  margin-top: 0.7em;
  margin-bottom: 0.7em;
  font-weight: 400;
  text-transform: uppercase;
  border-bottom: 1px solid #424242;
  text-align: center;
}
h5 {
  font-family: 'Electrolize', sans-serif;
  font-size: 0.9rem;
  line-height: 1;
  margin-top: 0.75em;
  margin-bottom: 0.75em;
  font-weight: 400;
  text-transform: uppercase;
}
p {
  font-family: 'Raleway', sans-serif;
  font-size: 1.25rem;
  line-height: 1.875rem;
  font-weight: 200;
}
a {
  font-family: 'Raleway', sans-serif;
  font-size: 1.25rem;
  line-height: 1.875rem;
  font-weight: 200;
}
@media only screen and (min-width: 48em) {
  h1 {
    font-family: 'Electrolize', sans-serif;
    font-size: 3.8rem;
    line-height: 1.2;
    margin-top: 0.1em;
    margin-bottom: 0.1em;
    font-weight: 400;
    text-transform: uppercase;
  }
  h2 {
    font-family: 'Electrolize', sans-serif;
    font-size: 2.375rem;
    line-height: 1.5;
    margin-top: 1.25rem;
    margin-bottom: 0.625rem;
    font-weight: 400;
    text-transform: uppercase;
  }
  h3 {
    font-family: 'Electrolize', sans-serif;
    font-size: 1.875rem;
    line-height: 2.75rem;
    margin-top: 0;
    margin-bottom: 0.625rem;
    font-weight: 400;
    text-transform: uppercase;
  }
  h4 {
    font-family: 'Electrolize', sans-serif;
    font-size: 1rem;
    line-height: 1.5;
    margin-top: 0.7em;
    margin-bottom: 0.7em;
    font-weight: 400;
    text-transform: uppercase;
    border-bottom: 1px solid #424242;
  }
  h5 {
    font-family: 'Electrolize', sans-serif;
    font-size: 0.9rem;
    line-height: 1;
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-weight: 400;
    text-transform: uppercase;
  }
  p {
    font-family: 'Raleway', sans-serif;
    font-size: 1.25rem;
    line-height: 1.875rem;
    font-weight: 200;
  }
  a {
    font-family: 'Raleway', sans-serif;
    font-size: 1.25rem;
    line-height: 1.875rem;
    font-weight: 200;
  }
}
/*
   * Default settings:
   */
/*
   * Breakpoint setup:
   */
body {
  color: #707070;
  background: #fff;
}
::-moz-selection {
  background: #e11010;
  color: #fff;
  fill: #fff;
}
::selection {
  background: #e11010;
  color: #fff;
  fill: #fff;
}
a {
  color: #707070;
}
a:visited {
  color: #707070;
}
a:hover,
a:visited:hover {
  color: #e11010;
}
a:active {
  color: #6a0000;
}
a:focus {
  outline: none;
  color: #e11010;
}
p code {
  color: #707070;
  background-color: #f7f7f7;
}
pre {
  color: #707070;
  background-color: #f7f7f7;
}
.content {
  background-color: #f7f7f7;
}
.content__container,
.content__container--expand {
  background-color: #fff;
}
.informational {
  color: #bbb;
}
/* Images so assume white text is required */
.hero h1,
.hero h2,
.hero h3,
.hero h4,
.hero h5,
.hero p,
.hero code {
  color: #fff;
}
/*
 * UI components:
 *
 * Each UI component is encapsulated within a setup function which takes an
 * opitional settings hash. If omitted the default settings available in the
 * respective component file are used. This allows a (theme) developer to
 * customize components for their own sifts and projects.
 */
.animate-opacity {
  transition: opacity ease-in 400ms;
}
.fade-in {
  animation: fadein 400ms ease-in 0s 1 normal both;
}
.delay {
  animation-delay: 400ms;
}
@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
/* FIXXME: refactor into components! */
.svg-center-x {
  position: relative;
  display: block;
  margin-left: auto;
  margin-right: auto;
  padding-left: 50%;
}
.svg-padding-top {
  padding-top: 1em;
}
.svg-padding-left {
  padding-left: 1em;
}
.reusable path {
  fill: none;
  stroke: #000;
  stroke-width: 1.5px;
  stroke-linecap: round;
  stroke-linejoin: round;
}
.reusable path.bgstroke {
  stroke: #fff;
  stroke-width: 3px;
}
/*
   * Default settings:
   */
input[type="text"],
input[type="password"],
input[type="email"],
input[type="number"],
input[type="tel"],
input[type="url"],
select,
textarea {
  box-sizing: border-box;
  min-height: 2.75em;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  padding-right: 0.5em;
  color: #333;
  vertical-align: bottom;
  background-color: #fff;
  background-repeat: no-repeat;
  border: 1px solid #d8d8d8;
  outline: none;
  font-size: 1rem;
}
input[type="text"]:disabled,
input[type="password"]:disabled,
input[type="email"]:disabled,
input[type="number"]:disabled,
input[type="tel"]:disabled,
input[type="url"]:disabled,
select:disabled,
textarea:disabled {
  background-image: repeating-linear-gradient(125deg, transparent, transparent 2px, #f1f1f1 2px, #f1f1f1 3px, transparent 3px, transparent 5px, #f1f1f1 5px);
}
/*
   * Default settings:
   */
button {
  cursor: pointer;
}
button {
  padding-top: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 1.9375em;
  padding-right: 1.9375em;
  color: #e11010;
  background: transparent;
  border: 1px solid #e11010;
  font-family: 'Raleway', sans-serif;
  font-size: 1rem;
  transition: background 200ms ease 0s;
}
button:hover {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
}
button:active {
  outline: none;
  color: #fff;
  background: #6a0000;
  border: 1px solid #6a0000;
}
button:disabled {
  color: #7f7f7f;
  background: #cacaca;
  border: 1px solid #cacaca;
  cursor: default;
}
button:focus {
  outline: none;
}
button.rs-btn--small {
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  padding-right: 0.5em;
}
button.rs-btn--selected {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
}
button.rs-btn--selected:hover {
  color: #fff;
  background: #6a0000;
  border: 1px solid #6a0000;
}
button.rs-btn--selected:active {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
}
button.rs-btn--selected:hover:disabled {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
  cursor: default;
}
/* Styling the base button will is implicitly applying the styles to the 'bem' buttons */
p button {
  margin: 0.625rem;
  line-height: 1;
}
p button.rs-btn--small {
  margin: 0.375rem;
}
p a.rs-btn--red,
p a.rs-btn--blue,
p a.rs-btn--green,
p a.rs-btn--black {
  margin: 0.625rem;
}
@media only screen and (min-width: 48em) {
  p button {
    margin: 0.625rem;
    line-height: 1;
  }
  p button.rs-btn--small {
    margin: 0.375rem;
  }
  p a.rs-btn--red,
  p a.rs-btn--blue,
  p a.rs-btn--green,
  p a.rs-btn--black {
    margin: 0.625rem;
  }
}
.rs-btn--red,
a.rs-btn--red {
  padding-top: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 1.9375em;
  padding-right: 1.9375em;
  color: #e11010;
  background: transparent;
  border: 1px solid #e11010;
  font-family: 'Raleway', sans-serif;
  font-size: 1rem;
}
.rs-btn--red:hover,
a.rs-btn--red:hover {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
}
.rs-btn--red:active,
a.rs-btn--red:active {
  outline: none;
  color: #fff;
  background: #6a0000;
  border: 1px solid #6a0000;
}
.rs-btn--red:disabled,
a.rs-btn--red:disabled {
  color: #7f7f7f;
  background: #cacaca;
  border: 1px solid #cacaca;
  cursor: default;
}
.rs-btn--red:focus,
a.rs-btn--red:focus {
  outline: none;
}
a.rs-btn--red {
  box-sizing: border-box;
  text-decoration: none;
}
.rs-btn--red.rs-btn--selected {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
}
.rs-btn--red.rs-btn--selected:hover {
  color: #fff;
  background: #6a0000;
  border: 1px solid #6a0000;
}
.rs-btn--red.rs-btn--selected:active {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
}
.rs-btn--red.rs-btn--selected:hover:disabled {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
  cursor: default;
}
.rs-btn--small,
a.rs-btn--small {
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  padding-right: 0.5em;
}
.rs-btn--green,
a.rs-btn--green {
  padding-top: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 1.9375em;
  padding-right: 1.9375em;
  color: #0ab93a;
  background: transparent;
  border: 1px solid #0ab93a;
  font-family: 'Raleway', sans-serif;
  font-size: 1rem;
}
.rs-btn--green:hover,
a.rs-btn--green:hover {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
}
.rs-btn--green:active,
a.rs-btn--green:active {
  outline: none;
  color: #fff;
  background: #087927;
  border: 1px solid #087927;
}
.rs-btn--green:disabled,
a.rs-btn--green:disabled {
  color: #7f7f7f;
  background: #cacaca;
  border: 1px solid #cacaca;
  cursor: default;
}
.rs-btn--green:focus,
a.rs-btn--green:focus {
  outline: none;
}
a.rs-btn--green {
  box-sizing: border-box;
  text-decoration: none;
}
.rs-btn--green.rs-btn--selected {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
}
.rs-btn--green.rs-btn--selected:hover {
  color: #fff;
  background: #087927;
  border: 1px solid #087927;
}
.rs-btn--green.rs-btn--selected:active {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
}
.rs-btn--green.rs-btn--selected:hover:disabled {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
  cursor: default;
}
.rs-btn--small,
a.rs-btn--small {
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  padding-right: 0.5em;
}
.rs-btn--blue,
a.rs-btn--blue {
  padding-top: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 1.9375em;
  padding-right: 1.9375em;
  color: #1671f4;
  background: transparent;
  border: 1px solid #1671f4;
  font-family: 'Raleway', sans-serif;
  font-size: 1rem;
}
.rs-btn--blue:hover,
a.rs-btn--blue:hover {
  color: #fff;
  background: #1671f4;
  border: 1px solid #1671f4;
}
.rs-btn--blue:active,
a.rs-btn--blue:active {
  outline: none;
  color: #fff;
  background: #0b49a2;
  border: 1px solid #0b49a2;
}
.rs-btn--blue:disabled,
a.rs-btn--blue:disabled {
  color: #7f7f7f;
  background: #cacaca;
  border: 1px solid #cacaca;
  cursor: default;
}
.rs-btn--blue:focus,
a.rs-btn--blue:focus {
  outline: none;
}
a.rs-btn--blue {
  box-sizing: border-box;
  text-decoration: none;
}
.rs-btn--blue.rs-btn--selected {
  color: #fff;
  background: #1671f4;
  border: 1px solid #1671f4;
}
.rs-btn--blue.rs-btn--selected:hover {
  color: #fff;
  background: #0b49a2;
  border: 1px solid #0b49a2;
}
.rs-btn--blue.rs-btn--selected:active {
  color: #fff;
  background: #1671f4;
  border: 1px solid #1671f4;
}
.rs-btn--blue.rs-btn--selected:hover:disabled {
  color: #fff;
  background: #1671f4;
  border: 1px solid #1671f4;
  cursor: default;
}
.rs-btn--small,
a.rs-btn--small {
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  padding-right: 0.5em;
}
.rs-btn--black,
a.rs-btn--black {
  padding-top: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 1.9375em;
  padding-right: 1.9375em;
  color: #777;
  background: transparent;
  border: 1px solid #777;
  font-family: 'Raleway', sans-serif;
  font-size: 1rem;
}
.rs-btn--black:hover,
a.rs-btn--black:hover {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
}
.rs-btn--black:active,
a.rs-btn--black:active {
  outline: none;
  color: #fff;
  background: #087927;
  border: 1px solid #087927;
}
.rs-btn--black:disabled,
a.rs-btn--black:disabled {
  color: #7f7f7f;
  background: #cacaca;
  border: 1px solid #cacaca;
  cursor: default;
}
.rs-btn--black:focus,
a.rs-btn--black:focus {
  outline: none;
}
a.rs-btn--black {
  box-sizing: border-box;
  text-decoration: none;
}
.rs-btn--black.rs-btn--selected {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
}
.rs-btn--black.rs-btn--selected:hover {
  color: #fff;
  background: #087927;
  border: 1px solid #087927;
}
.rs-btn--black.rs-btn--selected:active {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
}
.rs-btn--black.rs-btn--selected:hover:disabled {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
  cursor: default;
}
.rs-btn--small,
a.rs-btn--small {
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  padding-right: 0.5em;
}
.hero button.danger,
button.danger {
  color: #fff;
  background-color: #e11010;
  border: 1px solid #e11010;
}
.hero button.danger:hover,
button.danger:hover {
  background-color: #e11010;
  border: 1px solid #e11010;
}
.hero button.danger:active,
button.danger:active {
  background-color: #6a0000;
  border: 1px solid #6a0000;
}
.hero button.danger:disabled,
button.danger:disabled {
  background-image: repeating-linear-gradient(125deg, transparent, transparent 2px, rgba(0,0,0,0.2) 2px, rgba(0,0,0,0.2) 3px, transparent 3px, transparent 5px, rgba(0,0,0,0.2) 5px);
}
.hero button.danger:disabled:hover,
button.danger:disabled:hover {
  background-color: #e11010;
  background-image: repeating-linear-gradient(125deg, transparent, transparent 2px, rgba(0,0,0,0.2) 2px, rgba(0,0,0,0.2) 3px, transparent 3px, transparent 5px, rgba(0,0,0,0.2) 5px);
  border: 1px solid #e11010;
}
.hero button.danger:focus,
button.danger:focus {
  outline: none;
}
.hero button {
  color: #fff;
  font-size: 1.2em;
  background-color: transparent;
  box-shadow: 0 0 0 1px #fff;
}
.hero button:focus {
  outline: none;
  box-shadow: 0 0 0 1px #e11010;
}
.hero button:hover {
  background-color: rgba(255,255,255,0);
}
.hero button:disabled {
  background-image: repeating-linear-gradient(125deg, transparent, transparent 2px, rgba(255,255,255,0.3) 2px, rgba(255,255,255,0.3) 3px, transparent 3px, transparent 5px, rgba(255,255,255,0.3) 5px);
}
.hero button:disabled:hover {
  background-color: transparent;
  background-image: repeating-linear-gradient(125deg, transparent, transparent 2px, rgba(255,255,255,0.3) 2px, rgba(255,255,255,0.3) 3px, transparent 3px, transparent 5px, rgba(255,255,255,0.3) 5px);
}
.hero button:focus {
  outline: none;
}
.rs-icon-btn {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex: 0 auto;
  flex: 0 auto;
  min-width: 180px;
  color: #777;
  border: 1px solid #777;
  text-decoration: none;
  cursor: pointer;
  font-family: 'Raleway', sans-serif;
  font-size: 1rem;
}
.rs-icon-btn:hover {
  color: #fff;
  background: #0ab93a;
}
.rs-icon-btn:active {
  outline: none;
  color: #fff;
  background: #087927;
  border: 1px solid #087927;
}
.rs-icon-btn:disabled {
  color: #7f7f7f;
  background: #cacaca;
  border: 1px solid #cacaca;
}
.rs-icon-btn:focus {
  outline: none;
}
.rs-icon-btn__icon {
  display: block;
  width: 1.875em;
  height: 1.875em;
  -ms-flex: 0 0 50px;
  flex: 0 0 50px;
  background-color: #fff;
}
.rs-icon-btn__label {
  display: -ms-flexbox;
  display: flex;
  padding-left: 1em;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex: 1;
  flex: 1;
  background: transparent;
  transition: background-color 200ms ease;
}
.rs-icon-btn__label:hover {
  background: #0ab93a;
}
.rs-icon-btn__icon__wrapper {
  width: 2.5em;
  height: 2.5em;
  border-right: 1px solid #777;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: center;
  background: #fff;
}
.rs-danger-btn {
  display: block;
  width: 220px;
  padding-right: 30px;
  padding-left: 30px;
  background-color: #e11010;
  font-family: Electrolize, sans-serif;
  letter-spacing: 2px;
  text-transform: uppercase;
  color: #fff;
  transition: all 300ms ease;
}
.rs-danger-btn:hover,
.rs-danger-btn:visited,
.rs-danger-btn:visited:hover {
  width: 100%;
  background-color: #aa0c0c;
  color: #fff;
}
/*
   * Default settings:
   */
/*
   * Breakpoint setup:
   */
input[type='range'] {
  display: block;
  border: solid 0.5em transparent;
  padding: 0;
  width: 15em;
  height: 2em;
  border-radius: 0.25em;
  background: transparent;
  font-size: 1em;
  cursor: pointer;
}
input[type='range'],
input[type='range']::-webkit-slider-runnable-track,
input[type='range']::-webkit-slider-thumb {
  -webkit-appearance: none;
}
input[type='range']::-ms-track {
  width: 100%;
  cursor: pointer;
  background: transparent;
  border-color: transparent;
  color: transparent;
}
input[type='range']::-webkit-slider-runnable-track {
  width: 15em;
  height: 0.5em;
  border-radius: 0.25em;
  background: linear-gradient(#e11010, #e11010) no-repeat #cacaca;
  background-size: 0% 100%;
}
input[type='range']::-webkit-slider-thumb {
  margin-top: -0.25em;
  border: none;
  width: 1em;
  height: 1em;
  border-radius: 50%;
  box-shadow: 0 0 0.125em #333;
  background: #fff;
}
input[type='range']:focus {
  outline: none;
  box-shadow: 0 0 1px #e11010;
}
input[type='range'].progress {
  cursor: initial;
}
input[type='range'].progress::-webkit-slider-thumb {
  display: none;
}
input[type='range'].progress:focus {
  outline: none;
  box-shadow: none;
}
input[type='range'].animated::-webkit-slider-runnable-track {
  transition: background-size 400ms ease-in;
}
/*
   * Default settings:
   */
/*
   * Breakpoint setup:
   */
.down-arrow {
  display: block;
  width: 20px;
  height: 30px;
  margin-right: auto;
  margin-left: auto;
  padding: 1em;
  float: none;
  clear: none;
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-down-arrow-3.svg");
  background-position: 50% 50%;
  background-size: 30px 20px;
  background-repeat: no-repeat;
  opacity: 0.6;
  background-color: transparent;
  transition: opacity cubic-bezier(0.175, 0.885, 0.335, 1.155) 400ms;
}
.down-arrow:hover {
  opacity: 1;
}
/*
   * Default settings:
   */
/*
   * Breakpoint setup:
   */
.style-switcher {
  z-index: 1000;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: end;
  justify-content: flex-end;
  position: fixed;
  right: 0;
  left: 0;
  bottom: 0;
  padding: 0.8em;
  background: rgba(0,0,0,0.9);
}
.style-switcher button {
  margin-right: 1em;
}



.-bg-pixeltracker-hero {
  background-image: url("../../assets/cctv.jpg");
  background-color: #2a1816;
}
.hero-sticky-header--active {
  box-shadow: 0px 0px 2px 2px rgba(0,0,0,0.15);
  background-image: url("../../assets/cctv.jpg");
  background-color: #2a1816;
}
body {
  overflow-x: hidden;
  background-color: #f7f7f7;
}
.summary {
  margin-bottom: 20px;
}
.statnum {
  font-size: 32px;
}
.statblock {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-align: center;
  align-items: center;
  padding: 20px;
}
.statsubtitle {
  text-align: center;
}
.monthblock {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  padding: 20px;
}
.monthlabel {
  margin-right: 20px;
}
.selectorheader {
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: center;
  padding-bottom: 20px;
  border-bottom: 1px solid #fff;
  box-sizing: border-box;
}
.mapheader {
  padding-top: 20px;
  padding-bottom: 20px;
}
.statblock--central {
  width: 100%;
  height: 100%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: border-box;
}
.statnum--central {
  font-size: 42px;
}
.statsubtitle--central {
  font-size: 12px;
  text-align: center;
}
.detailcontents {
  height: 100%;
  width: 220px;
  box-sizing: border-box;
  padding-left: 24px;
  padding-right: 24px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-align: center;
  align-items: center;
}
.detailheader {
  height: 48px;
  width: 100%;
  border-bottom: 1px solid #982cdb;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-line-pack: center;
  align-content: center;
}
.detailheadertext {
  font-size: 14px;
  line-height: normal;
}
.trackerlist {
  width: 100%;
}
.tracker {
  padding-top: 12px;
  width: 100%;
}
.trackericon {
  margin-right: 12px;
  height: 10px;
}
.trackertext {
  font-size: 14px;
}
@media (max-width: 480px) {
  .content {
    height: 100%;
    box-sizing: border-box;
  }
  .hero {
    display: none;
  }
  .hero-sticky-header {
    display: none;
  }
}
@media (max-height: 230px) {
  body {
    overflow-y: hidden;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
