/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */

html {
  font-family: sans-serif; /* 1 */
  line-height: 1.15; /* 2 */
  -ms-text-size-adjust: 100%; /* 3 */
  -webkit-text-size-adjust: 100%; /* 3 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */

article,
aside,
details, /* 1 */
figcaption,
figure,
footer,
header,
main, /* 2 */
menu,
nav,
section,
summary { /* 1 */
  display: block;
}

/**
 * Add the correct display in IE 9-.
 */

audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */

template, /* 1 */
[hidden] {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */

a {
  background-color: transparent; /* 1 */
  -webkit-text-decoration-skip: objects; /* 2 */
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */

a:active,
a:hover {
  outline-width: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */

b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */

dfn {
  font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Add the correct background and color in IE 9-.
 */

mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10-.
 */

img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */

figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/* Forms
   ========================================================================== */

/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font: inherit; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Restore the font weight unset by the previous rule.
 */

optgroup {
  font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select { /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */

button,
html [type="button"], /* 1 */
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */

::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
 * Style setup for redsift-ui based sifts.
 *
 * - Provides:
 *   . ready-to-use UI components
 *   . responsive type system
 *   . breakpoint setup (via 'rupture')
 *   . common functionality like reset, patterns and fonts
 *
 * - Used by:
 *   . redsift-light
 *   . redsift-dark
 *
 * - Folder structure:
 *
 *   ./lib        -> mixin and function library
 *   ./common     -> CSS setup and common classes
 *   ./components -> UI components
 */
/*
 * Configuration via object '$ui-rs-core'
 */
/*
 * Mixin/functions library
 *
 * Common mixins and functions used by redsift-ui.
 */
/*
 * Base configuration and common classes:
 *
 * CSS base setup and common CSS classes.
 */
body {
  margin: 0;
  padding: 0;
  min-height: 100%;
}
.-pattern-down-arrow-green {
  background-image: url("/icons/down-arrow-green.svg");
  background-repeat: repeat;
  background-size: 12px 7px;
}
.-pattern-redsift-logo {
  background-image: url("/icons/redsift-logo-red-8.1.svg");
  background-repeat: repeat;
  background-size: 7px 7px;
}
.animate-opacity {
  transition: opacity ease-in 400ms;
}
.fade-in {
  animation: fadein 400ms ease-in 0s 1 normal both;
}
.delay {
  animation-delay: 400ms;
}
@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.hidden {
  opacity: 0;
}
.hash {
  background-image: repeating-linear-gradient(125deg, transparent, transparent 2px, rgba(0,0,0,0.2) 2px, rgba(0,0,0,0.2) 3px, transparent 3px, transparent 5px, rgba(0,0,0,0.2) 5px);
}
.-rs-icon-redsift-red {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-redsift-red.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.rs-icon-redsift-cloud {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-redsift-cloud.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-redsift-white {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-redsift-white.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-github {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/images/icon-github.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-google {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/images/icon-google.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-slack {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/images/icon-slack.png");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-twitter {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/images/icon-twitter.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-settings {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/images/icon-settings.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-exit {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/images/icon-exit.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-profile {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/images/icon-profile.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-down-arrow-green {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/images/icon-down-arrow-green.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-logout {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-logout.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-profile {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-profile.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-dashboard {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-dashboard.svg");
  background-position: 50% 50%;
  background-size: 24px;
  background-repeat: no-repeat;
}
.-rs-icon-catalogue {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-catalogue.svg");
  background-position: 50% 50%;
  background-size: 24px;
  background-repeat: no-repeat;
}
.-rs-icon-workshop {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-workshop.svg");
  background-position: 50% 50%;
  background-size: 24px;
  background-repeat: no-repeat;
}
.-rs-icon-wireframe-blue {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-wireframe-blue.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-expand {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-expand.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-expand-split {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-expand-split.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
.-rs-icon-exit {
  background-image: url("https://static.redsift.io/assets/ui-rs-core/icons/-rs-icon-exit.svg");
  background-position: 50% 50%;
  background-size: 30px;
  background-repeat: no-repeat;
}
/* Heading font @import url("https://fonts.googleapis.com/css?family=Raleway:200"); */
/* latin */
@font-face {
  font-family: 'Raleway';
  font-style: normal;
  font-weight: 200;
  src: local('Raleway ExtraLight'), local('Raleway-ExtraLight'), url("https://fonts.gstatic.com/s/raleway/v11/8KhZd3VQBtXTAznvKjw-k73hpw3pgy2gAi-Ip7WPMi0.woff") format('woff'), url("https://fonts.gstatic.com/s/raleway/v11/8KhZd3VQBtXTAznvKjw-ky3USBnSvpkopQaUR-2r7iU.ttf") format('truetype');
}
@font-face {
  font-family: 'Raleway';
  font-style: normal;
  font-weight: 200;
  src: local('Raleway ExtraLight'), local('Raleway-ExtraLight'), url("https://fonts.gstatic.com/s/raleway/v11/8KhZd3VQBtXTAznvKjw-kwzyDMXhdD8sAj6OAJTFsBI.woff2") format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}
@font-face {
  font-family: 'Electrolize';
  font-style: normal;
  font-weight: 400;
  src: local('Electrolize'), local('Electrolize-Regular'), url("https://fonts.gstatic.com/s/electrolize/v5/DDy9sgU2U7S4xAwH5thnJ7rIa-7acMAeDBVuclsi6Gc.woff") format('woff'), url("https://fonts.gstatic.com/s/electrolize/v5/DDy9sgU2U7S4xAwH5thnJywlidHJgAgmTjOEEzwu1L8.ttf") format('truetype');
}
@font-face {
  font-family: 'Electrolize';
  font-style: normal;
  font-weight: 400;
  src: local('Electrolize'), local('Electrolize-Regular'), url("https://fonts.gstatic.com/s/electrolize/v5/DDy9sgU2U7S4xAwH5thnJ4gp9Q8gbYrhqGlRav_IXfk.woff2") format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 300;
  src: local('Source Code Pro Light'), local('SourceCodePro-Light'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqcVNtom4QlEDNJaqqqzqdSs.woff") format('woff'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqfS42wKzre0cxmO5m5GyTsY.ttf") format('truetype');
}
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 400;
  src: local('Source Code Pro'), local('SourceCodePro-Regular'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/mrl8jkM18OlOQN8JLgasD9Hq-FFgoDNV3GTKpHwuvtI.woff") format('woff'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/mrl8jkM18OlOQN8JLgasD0Y6Fu39Tt9XkmtSosaMoEA.ttf") format('truetype');
}
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 700;
  src: local('Source Code Pro Bold'), local('SourceCodePro-Bold'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqYqjGYJUyOXcBwUQbRaNH6c.woff") format('woff'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqblcMrNrsnL9dgADnXgYJjs.ttf") format('truetype');
}
/* latin-ext */
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 300;
  src: local('Source Code Pro Light'), local('SourceCodePro-Light'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqTOFnJNygIkrHciC8BWzbCz3rGVtsTkPsbDajuO5ueQw.woff2") format('woff2');
  unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 300;
  src: local('Source Code Pro Light'), local('SourceCodePro-Light'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqSP2LEk6lMzYsRqr3dHFImA.woff2") format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}
/* latin-ext */
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 400;
  src: local('Source Code Pro'), local('SourceCodePro-Regular'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/mrl8jkM18OlOQN8JLgasD4a1YDtoarzwSXxTHggEXMw.woff2") format('woff2');
  unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 400;
  src: local('Source Code Pro'), local('SourceCodePro-Regular'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/mrl8jkM18OlOQN8JLgasD5bPFduIYtoLzwST68uhz_Y.woff2") format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}
/* latin-ext */
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 700;
  src: local('Source Code Pro Bold'), local('SourceCodePro-Bold'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqe4s1Ux4PuImWPk5fSr6HPL3rGVtsTkPsbDajuO5ueQw.woff2") format('woff2');
  unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Source Code Pro';
  font-style: normal;
  font-weight: 700;
  src: local('Source Code Pro Bold'), local('SourceCodePro-Bold'), url("https://fonts.gstatic.com/s/sourcecodepro/v6/leqv3v-yTsJNC7nFznSMqZkF8H8ye47wsfpWywda8og.woff2") format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}
div.cards {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-direction: row;
  flex-direction: row;
}
div.cards >div {
  -ms-flex-positive: 0;
  flex-grow: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}
/*
   * Default settings:
   */
/* NOTE: It's necessary to use e.g. the $fontNormal variable here. Defining
   * multiple fonts directly in here yields a stylus compiler error.
   */
/*
   * Breakpoint setup:
   */
body {
  font-family: 'Raleway', sans-serif;
  font-size: 1.25rem;
  font-weight: 300;
}
button {
  font-family: 'Electrolize', sans-serif;
  font-weight: 400;
}
.overlayed {
  font-weight: 400;
}
code {
  font-family: 'Source Code Pro', monospace;
  white-space: nowrap;
}
pre code {
  white-space: pre-wrap;
}
p code {
  padding: 0;
  padding-top: 0.2em;
  padding-bottom: 0.2em;
  border-radius: 3px;
}
p code::before,
p code::after {
  letter-spacing: -0.2em;
  content: "\00a0";
}
pre {
  border-radius: 3px;
  padding: 1em;
}
h1 {
  font-family: 'Electrolize', sans-serif;
  font-size: 2rem;
  line-height: 1.2;
  margin-top: 0.1em;
  margin-bottom: 0.1em;
  font-weight: 400;
  text-transform: uppercase;
}
h2 {
  font-family: 'Electrolize', sans-serif;
  font-size: 1.4rem;
  line-height: 1.5;
  margin-top: 1.25rem;
  margin-bottom: 0.625rem;
  font-weight: 400;
  text-transform: uppercase;
}
h3 {
  font-family: 'Electrolize', sans-serif;
  font-size: 1.4rem;
  line-height: 1.5;
  margin-top: 0;
  margin-bottom: 0.625rem;
  font-weight: 400;
  text-transform: uppercase;
}
h4 {
  font-family: 'Electrolize', sans-serif;
  font-size: 1rem;
  line-height: 1.5;
  margin-top: 0.7em;
  margin-bottom: 0.7em;
  font-weight: 400;
  text-transform: uppercase;
  border-bottom: 1px solid #424242;
  text-align: center;
}
h5 {
  font-family: 'Electrolize', sans-serif;
  font-size: 0.9rem;
  line-height: 1;
  margin-top: 0.75em;
  margin-bottom: 0.75em;
  font-weight: 400;
  text-transform: uppercase;
}
p {
  font-family: 'Raleway', sans-serif;
  font-size: 1.25rem;
  line-height: 1.875rem;
  font-weight: 200;
}
a {
  font-family: 'Raleway', sans-serif;
  font-size: 1.25rem;
  line-height: 1.875rem;
  font-weight: 200;
}
@media only screen and (min-width: 48em) {
  h1 {
    font-family: 'Electrolize', sans-serif;
    font-size: 3.8rem;
    line-height: 1.2;
    margin-top: 0.1em;
    margin-bottom: 0.1em;
    font-weight: 400;
    text-transform: uppercase;
  }
  h2 {
    font-family: 'Electrolize', sans-serif;
    font-size: 2.375rem;
    line-height: 1.5;
    margin-top: 1.25rem;
    margin-bottom: 0.625rem;
    font-weight: 400;
    text-transform: uppercase;
  }
  h3 {
    font-family: 'Electrolize', sans-serif;
    font-size: 1.875rem;
    line-height: 2.75rem;
    margin-top: 0;
    margin-bottom: 0.625rem;
    font-weight: 400;
    text-transform: uppercase;
  }
  h4 {
    font-family: 'Electrolize', sans-serif;
    font-size: 1rem;
    line-height: 1.5;
    margin-top: 0.7em;
    margin-bottom: 0.7em;
    font-weight: 400;
    text-transform: uppercase;
    border-bottom: 1px solid #424242;
  }
  h5 {
    font-family: 'Electrolize', sans-serif;
    font-size: 0.9rem;
    line-height: 1;
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-weight: 400;
    text-transform: uppercase;
  }
  p {
    font-family: 'Raleway', sans-serif;
    font-size: 1.25rem;
    line-height: 1.875rem;
    font-weight: 200;
  }
  a {
    font-family: 'Raleway', sans-serif;
    font-size: 1.25rem;
    line-height: 1.875rem;
    font-weight: 200;
  }
}
/*
   * Default settings:
   */
/*
   * Breakpoint setup:
   */
body {
  color: #333;
  background: #fff;
}
::-moz-selection {
  background: #e11010;
  color: #fff;
  fill: #fff;
}
::selection {
  background: #e11010;
  color: #fff;
  fill: #fff;
}
a {
  color: #333;
}
a:visited {
  color: #333;
}
a:hover,
a:visited:hover {
  color: #e11010;
}
a:active {
  color: #6a0000;
}
a:focus {
  outline: none;
  color: #e11010;
}
p code {
  color: #333;
  background-color: #f7f7f7;
}
pre {
  color: #333;
  background-color: #f7f7f7;
}
.content {
  background-color: #f7f7f7;
}
.content__container,
.content__container--expand {
  background-color: #fff;
}
.informational {
  color: #bbb;
}
/* Images so assume white text is required */
.hero h1,
.hero h2,
.hero h3,
.hero h4,
.hero h5,
.hero p,
.hero code {
  color: #fff;
}
/*
 * UI components:
 *
 * Each UI component is encapsulated within a setup function which takes an
 * opitional settings hash. If omitted the default settings available in the
 * respective component file are used. This allows a (theme) developer to
 * customize components for their own sifts and projects.
 */
.animate-opacity {
  transition: opacity ease-in 400ms;
}
.fade-in {
  animation: fadein 400ms ease-in 0s 1 normal both;
}
.delay {
  animation-delay: 400ms;
}
@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
/* FIXXME: refactor into components! */
.svg-center-x {
  position: relative;
  display: block;
  margin-left: auto;
  margin-right: auto;
  padding-left: 50%;
}
.svg-padding-top {
  padding-top: 1em;
}
.svg-padding-left {
  padding-left: 1em;
}
.reusable path {
  fill: none;
  stroke: #000;
  stroke-width: 1.5px;
  stroke-linecap: round;
  stroke-linejoin: round;
}
.reusable path.bgstroke {
  stroke: #fff;
  stroke-width: 3px;
}
/*
   * Default settings:
   */
input[type="text"],
input[type="password"],
input[type="email"],
input[type="number"],
input[type="tel"],
input[type="url"],
select,
textarea {
  box-sizing: border-box;
  min-height: 2.75em;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  padding-right: 0.5em;
  color: #333;
  vertical-align: bottom;
  background-color: #fff;
  background-repeat: no-repeat;
  border: 1px solid #d8d8d8;
  outline: none;
  font-size: 1rem;
}
input[type="text"]:disabled,
input[type="password"]:disabled,
input[type="email"]:disabled,
input[type="number"]:disabled,
input[type="tel"]:disabled,
input[type="url"]:disabled,
select:disabled,
textarea:disabled {
  background-image: repeating-linear-gradient(125deg, transparent, transparent 2px, #f1f1f1 2px, #f1f1f1 3px, transparent 3px, transparent 5px, #f1f1f1 5px);
}
/*
   * Default settings:
   */
button {
  cursor: pointer;
}
button {
  padding-top: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 1.9375em;
  padding-right: 1.9375em;
  color: #e11010;
  background: transparent;
  border: 1px solid #e11010;
  font-family: 'Raleway', sans-serif;
  font-size: 1rem;
}
button:hover {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
}
button:active {
  outline: none;
  color: #fff;
  background: #6a0000;
  border: 1px solid #6a0000;
}
button:disabled {
  color: #7f7f7f;
  background: #cacaca;
  border: 1px solid #cacaca;
  cursor: default;
}
button:focus {
  outline: none;
}
button.rs-btn--small {
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  padding-right: 0.5em;
}
button.rs-btn--selected {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
}
button.rs-btn--selected:hover {
  color: #fff;
  background: #6a0000;
  border: 1px solid #6a0000;
}
button.rs-btn--selected:active {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
}
button.rs-btn--selected:hover:disabled {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
  cursor: default;
}
/* Styling the base button will is implicitly applying the styles to the 'bem' buttons */
p button {
  margin: 0.625rem;
  line-height: 1;
}
p button.rs-btn--small {
  margin: 0.375rem;
}
@media only screen and (min-width: 48em) {
  p button {
    margin: 0.625rem;
    line-height: 1;
  }
  p button.rs-btn--small {
    margin: 0.375rem;
  }
}
.rs-btn--red {
  padding-top: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 1.9375em;
  padding-right: 1.9375em;
  color: #e11010;
  background: transparent;
  border: 1px solid #e11010;
  font-family: 'Raleway', sans-serif;
  font-size: 1rem;
}
.rs-btn--red:hover {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
}
.rs-btn--red:active {
  outline: none;
  color: #fff;
  background: #6a0000;
  border: 1px solid #6a0000;
}
.rs-btn--red:disabled {
  color: #7f7f7f;
  background: #cacaca;
  border: 1px solid #cacaca;
  cursor: default;
}
.rs-btn--red:focus {
  outline: none;
}
.rs-btn--red.rs-btn--selected {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
}
.rs-btn--red.rs-btn--selected:hover {
  color: #fff;
  background: #6a0000;
  border: 1px solid #6a0000;
}
.rs-btn--red.rs-btn--selected:active {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
}
.rs-btn--red.rs-btn--selected:hover:disabled {
  color: #fff;
  background: #e11010;
  border: 1px solid #e11010;
  cursor: default;
}
.rs-btn--small {
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  padding-right: 0.5em;
}
.rs-btn--green {
  padding-top: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 1.9375em;
  padding-right: 1.9375em;
  color: #0ab93a;
  background: transparent;
  border: 1px solid #0ab93a;
  font-family: 'Raleway', sans-serif;
  font-size: 1rem;
}
.rs-btn--green:hover {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
}
.rs-btn--green:active {
  outline: none;
  color: #fff;
  background: #087927;
  border: 1px solid #087927;
}
.rs-btn--green:disabled {
  color: #7f7f7f;
  background: #cacaca;
  border: 1px solid #cacaca;
  cursor: default;
}
.rs-btn--green:focus {
  outline: none;
}
.rs-btn--green.rs-btn--selected {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
}
.rs-btn--green.rs-btn--selected:hover {
  color: #fff;
  background: #087927;
  border: 1px solid #087927;
}
.rs-btn--green.rs-btn--selected:active {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
}
.rs-btn--green.rs-btn--selected:hover:disabled {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
  cursor: default;
}
.rs-btn--small {
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  padding-right: 0.5em;
}
.rs-btn--blue {
  padding-top: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 1.9375em;
  padding-right: 1.9375em;
  color: #1671f4;
  background: transparent;
  border: 1px solid #1671f4;
  font-family: 'Raleway', sans-serif;
  font-size: 1rem;
}
.rs-btn--blue:hover {
  color: #fff;
  background: #1671f4;
  border: 1px solid #1671f4;
}
.rs-btn--blue:active {
  outline: none;
  color: #fff;
  background: #0b49a2;
  border: 1px solid #0b49a2;
}
.rs-btn--blue:disabled {
  color: #7f7f7f;
  background: #cacaca;
  border: 1px solid #cacaca;
  cursor: default;
}
.rs-btn--blue:focus {
  outline: none;
}
.rs-btn--blue.rs-btn--selected {
  color: #fff;
  background: #1671f4;
  border: 1px solid #1671f4;
}
.rs-btn--blue.rs-btn--selected:hover {
  color: #fff;
  background: #0b49a2;
  border: 1px solid #0b49a2;
}
.rs-btn--blue.rs-btn--selected:active {
  color: #fff;
  background: #1671f4;
  border: 1px solid #1671f4;
}
.rs-btn--blue.rs-btn--selected:hover:disabled {
  color: #fff;
  background: #1671f4;
  border: 1px solid #1671f4;
  cursor: default;
}
.rs-btn--small {
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  padding-right: 0.5em;
}
.rs-btn--black {
  padding-top: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 1.9375em;
  padding-right: 1.9375em;
  color: #000;
  background: transparent;
  border: 1px solid #000;
  font-family: 'Raleway', sans-serif;
  font-size: 1rem;
}
.rs-btn--black:hover {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
}
.rs-btn--black:active {
  outline: none;
  color: #fff;
  background: #087927;
  border: 1px solid #087927;
}
.rs-btn--black:disabled {
  color: #7f7f7f;
  background: #cacaca;
  border: 1px solid #cacaca;
  cursor: default;
}
.rs-btn--black:focus {
  outline: none;
}
.rs-btn--black.rs-btn--selected {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
}
.rs-btn--black.rs-btn--selected:hover {
  color: #fff;
  background: #087927;
  border: 1px solid #087927;
}
.rs-btn--black.rs-btn--selected:active {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
}
.rs-btn--black.rs-btn--selected:hover:disabled {
  color: #fff;
  background: #0ab93a;
  border: 1px solid #0ab93a;
  cursor: default;
}
.rs-btn--small {
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  padding-right: 0.5em;
}
.hero button.danger,
button.danger {
  color: #fff;
  background-color: #e11010;
  border: 1px solid #e11010;
}
.hero button.danger:hover,
button.danger:hover {
  background-color: #e11010;
  border: 1px solid #e11010;
}
.hero button.danger:active,
button.danger:active {
  background-color: #6a0000;
  border: 1px solid #6a0000;
}
.hero button.danger:disabled,
button.danger:disabled {
  background-image: repeating-linear-gradient(125deg, transparent, transparent 2px, rgba(0,0,0,0.2) 2px, rgba(0,0,0,0.2) 3px, transparent 3px, transparent 5px, rgba(0,0,0,0.2) 5px);
}
.hero button.danger:disabled:hover,
button.danger:disabled:hover {
  background-color: #e11010;
  background-image: repeating-linear-gradient(125deg, transparent, transparent 2px, rgba(0,0,0,0.2) 2px, rgba(0,0,0,0.2) 3px, transparent 3px, transparent 5px, rgba(0,0,0,0.2) 5px);
  border: 1px solid #e11010;
}
.hero button.danger:focus,
button.danger:focus {
  outline: none;
}
.hero button {
  color: #fff;
  font-size: 1.2em;
  background-color: transparent;
  box-shadow: 0 0 0 1px #fff;
}
.hero button:focus {
  outline: none;
  box-shadow: 0 0 0 1px #e11010;
}
.hero button:hover {
  background-color: rgba(255,255,255,0);
}
.hero button:disabled {
  background-image: repeating-linear-gradient(125deg, transparent, transparent 2px, rgba(255,255,255,0.3) 2px, rgba(255,255,255,0.3) 3px, transparent 3px, transparent 5px, rgba(255,255,255,0.3) 5px);
}
.hero button:disabled:hover {
  background-color: transparent;
  background-image: repeating-linear-gradient(125deg, transparent, transparent 2px, rgba(255,255,255,0.3) 2px, rgba(255,255,255,0.3) 3px, transparent 3px, transparent 5px, rgba(255,255,255,0.3) 5px);
}
.hero button:focus {
  outline: none;
}
.rs-icon-btn {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex: 0 auto;
  flex: 0 auto;
  min-width: 180px;
  color: #000;
  border: 1px solid #000;
  text-decoration: none;
  cursor: pointer;
  font-family: 'Raleway', sans-serif;
  font-size: 1rem;
}
.rs-icon-btn:hover {
  color: #fff;
  background: #0ab93a;
}
.rs-icon-btn:active {
  outline: none;
  color: #fff;
  background: #087927;
  border: 1px solid #087927;
}
.rs-icon-btn:disabled {
  color: #7f7f7f;
  background: #cacaca;
  border: 1px solid #cacaca;
}
.rs-icon-btn:focus {
  outline: none;
}
.rs-icon-btn__icon {
  display: block;
  width: 1.875em;
  height: 1.875em;
  -ms-flex: 0 0 50px;
  flex: 0 0 50px;
  background-color: #fff;
}
.rs-icon-btn__label {
  display: -ms-flexbox;
  display: flex;
  padding-left: 1em;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex: 1;
  flex: 1;
  background: transparent;
  transition: background-color 200ms ease;
}
.rs-icon-btn__label:hover {
  background: #0ab93a;
}
.rs-icon-btn__icon__wrapper {
  width: 2.5em;
  height: 2.5em;
  border-right: 1px solid #000;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: center;
  background: #fff;
}
.rs-danger-btn {
  display: block;
  width: 220px;
  padding-right: 30px;
  padding-left: 30px;
  background-color: #e11010;
  font-family: Electrolize, sans-serif;
  letter-spacing: 2px;
  text-transform: uppercase;
  color: #fff;
  transition: all 300ms ease;
}
.rs-danger-btn:hover,
.rs-danger-btn:visited,
.rs-danger-btn:visited:hover {
  width: 100%;
  background-color: #aa0c0c;
  color: #fff;
}
/*
   * Default settings:
   */
/*
   * Breakpoint setup:
   */
input[type='range'] {
  display: block;
  border: solid 0.5em transparent;
  padding: 0;
  width: 15em;
  height: 2em;
  border-radius: 0.25em;
  background: transparent;
  font-size: 1em;
  cursor: pointer;
}
input[type='range'],
input[type='range']::-webkit-slider-runnable-track,
input[type='range']::-webkit-slider-thumb {
  -webkit-appearance: none;
}
input[type='range']::-ms-track {
  width: 100%;
  cursor: pointer;
  background: transparent;
  border-color: transparent;
  color: transparent;
}
input[type='range']::-webkit-slider-runnable-track {
  width: 15em;
  height: 0.5em;
  border-radius: 0.25em;
  background: linear-gradient(#e11010, #e11010) no-repeat #cacaca;
  background-size: 0% 100%;
}
input[type='range']::-webkit-slider-thumb {
  margin-top: -0.25em;
  border: none;
  width: 1em;
  height: 1em;
  border-radius: 50%;
  box-shadow: 0 0 0.125em #333;
  background: #fff;
}
input[type='range']:focus {
  outline: none;
  box-shadow: 0 0 1px #e11010;
}
input[type='range'].progress {
  cursor: initial;
}
input[type='range'].progress::-webkit-slider-thumb {
  display: none;
}
input[type='range'].progress:focus {
  outline: none;
  box-shadow: none;
}
input[type='range'].animated::-webkit-slider-runnable-track {
  transition: background-size 400ms ease-in;
}
/*
   * Default settings:
   */
/*
   * Breakpoint setup:
   */
.down-arrow {
  display: block;
  width: 20px;
  height: 30px;
  margin-right: auto;
  margin-left: auto;
  padding: 1em;
  float: none;
  clear: none;
  background-image: url("https://static.redsift.io/assets/icons/down-arrow-white-1.0.svg");
  background-position: 50% 50%;
  background-size: 30px 20px;
  background-repeat: no-repeat;
  opacity: 0.6;
  background-color: transparent;
  transition: opacity cubic-bezier(0.175, 0.885, 0.335, 1.155) 400ms;
}
.down-arrow:hover {
  opacity: 1;
}
/*
   * Default settings:
   */
/*
   * Breakpoint setup:
   */
.style-switcher {
  z-index: 1000;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: end;
  justify-content: flex-end;
  position: fixed;
  right: 0;
  left: 0;
  bottom: 0;
  padding: 0.8em;
  background: rgba(0,0,0,0.9);
}
.style-switcher button {
  margin-right: 1em;
}



/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */

html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove default margin.
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */

a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari.
 */

figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */

pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
  margin: 0; /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"], /* 1 */
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button; /* 2 */
  cursor: pointer; /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */

input[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  box-sizing: content-box; /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*
   * Default settings:
   */
/*
   * Breakpoint setup:
   */
.hero {
  position: relative;
  z-index: 1;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: 500px;
  width: 100%;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  text-align: center;
}
.hero-sticky-header,
.hero__header {
  z-index: 100;
  padding: 1em;
  color: #fff;
  background-color: transparent;
}
.hero-sticky-header h3,
.hero__header h3 {
  font-size: 1.125rem;
  opacity: 0.7;
  margin: 0;
}
.hero-sticky-header {
  visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
}
.hero-sticky-header > * {
  visibility: hidden;
}
.hero.-effect-darken::before,
.hero.-effect-lighten::before {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 0;
  content: " ";
  opacity: 0.2;
}
.hero.-effect-darken::before {
  background-color: #000;
}
.hero.-effect-lighten::before {
  background-color: #fff;
}
.hero__header {
  -ms-flex-item-align: start;
  align-self: flex-start;
}
.hero code {
  font-size: 3em;
}
.hero p {
  font-size: 1.5em;
}
.hero__container {
  z-index: 99;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  color: #e0e0e0;
}
.content {
  padding: 1em;
}
.content--collapse {
  min-height: initial;
}
.content__container,
.content__container--expand {
  border: 1px solid #e0e0e0;
  border-radius: 3px;
}
.content__container--expand {
  min-height: 496px;
}
/* iPhone [portrait + landscape] */
@media only screen and (min-width: 30em) {
  .hero-sticky-header {
    visibility: visible;
  }
  .hero-sticky-header > * {
    visibility: visible;
  }
}
/* iPad [portrait + landscape] */
@media only screen and (min-width: 48em) and (max-width: 64em) {
  .hero {
    background-attachment: scroll;
  }
  .hero-sticky-header {
    visibility: visible;
    background-position: 50% 100%;
    background-attachment: scroll;
  }
}



* {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}
.-bg-pixeltracker-hero {
  background-image: url("../../assets/cctv.jpg");
  background-color: #2a1816;
}
.hero-sticky-header--active {
  box-shadow: 0px 0px 2px 2px rgba(0,0,0,0.15);
  background-image: url("../../assets/cctv.jpg");
  background-color: #2a1816;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9AcmVkc2lmdC91aS1ycy1jb3JlL2Rpc3QvY3NzL3VpLXJzLWNvcmUuY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0ByZWRzaWZ0L3VpLXJzLWhlcm8vZGlzdC9jc3MvdWktcnMtaGVyby5jc3MiLCJzdHlsZS5zdHlsIiwic3R5bGUuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRFQUFBOztBQUVBOzs7O0dBSUM7O0FBRUQ7RUFDRSx3QkFBQSxDQUFBLE9BQUE7RUFDQSxrQkFBQSxDQUFBLE9BQUE7RUFDQSwyQkFBQSxDQUFBLE9BQUE7RUFDQSwrQkFBQSxDQUFBLE9BQUE7Q0FDRjs7QUFFQTs7R0FFQzs7QUFFRDtFQUNFLFVBQUE7Q0FDRjs7QUFFQTtnRkFDRzs7QUFFSDs7OztHQUlDOztBQUVEOzs7Ozs7Ozs7OztVQVdBLE9BQUE7RUFDRSxlQUFBO0NBQ0Y7O0FBRUE7O0dBRUM7O0FBRUQ7Ozs7RUFJRSxzQkFBQTtDQUNGOztBQUVBOztHQUVDOztBQUVEO0VBQ0UsY0FBQTtFQUNBLFVBQUE7Q0FDRjs7QUFFQTs7R0FFQzs7QUFFRDtFQUNFLHlCQUFBO0NBQ0Y7O0FBRUE7OztHQUdDOztBQUVEOztFQUVFLGNBQUE7Q0FDRjs7QUFFQTtnRkFDRzs7QUFFSDs7O0dBR0M7O0FBRUQ7RUFDRSw4QkFBQSxDQUFBLE9BQUE7RUFDQSxzQ0FBQSxDQUFBLE9BQUE7Q0FDRjs7QUFFQTs7O0dBR0M7O0FBRUQ7O0VBRUUsaUJBQUE7Q0FDRjs7QUFFQTtnRkFDRzs7QUFFSDs7O0dBR0M7O0FBRUQ7RUFDRSxvQkFBQSxDQUFBLE9BQUE7RUFDQSwyQkFBQSxDQUFBLE9BQUE7RUFDQSxrQ0FBQSxDQUFBLE9BQUE7Q0FDRjs7QUFFQTs7R0FFQzs7QUFFRDs7RUFFRSxxQkFBQTtDQUNGOztBQUVBOztHQUVDOztBQUVEOztFQUVFLG9CQUFBO0NBQ0Y7O0FBRUE7O0dBRUM7O0FBRUQ7RUFDRSxtQkFBQTtDQUNGOztBQUVBOzs7R0FHQzs7QUFFRDtFQUNFLGVBQUE7RUFDQSxpQkFBQTtDQUNGOztBQUVBOztHQUVDOztBQUVEO0VBQ0UsdUJBQUE7RUFDQSxZQUFBO0NBQ0Y7O0FBRUE7O0dBRUM7O0FBRUQ7RUFDRSxlQUFBO0NBQ0Y7O0FBRUE7OztHQUdDOztBQUVEOztFQUVFLGVBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7RUFDQSx5QkFBQTtDQUNGOztBQUVBO0VBQ0UsZ0JBQUE7Q0FDRjs7QUFFQTtFQUNFLFlBQUE7Q0FDRjs7QUFFQTtnRkFDRzs7QUFFSDs7R0FFQzs7QUFFRDtFQUNFLG1CQUFBO0NBQ0Y7O0FBRUE7O0dBRUM7O0FBRUQ7RUFDRSxpQkFBQTtDQUNGOztBQUVBO2dGQUNHOztBQUVIOzs7R0FHQzs7QUFFRDs7OztFQUlFLGtDQUFBLENBQUEsT0FBQTtFQUNBLGVBQUEsQ0FBQSxPQUFBO0NBQ0Y7O0FBRUE7O0dBRUM7O0FBRUQ7RUFDRSxpQkFBQTtDQUNGOztBQUVBOzs7R0FHQzs7QUFFRDtFQUNFLHdCQUFBLENBQUEsT0FBQTtFQUNBLFVBQUEsQ0FBQSxPQUFBO0VBQ0Esa0JBQUEsQ0FBQSxPQUFBO0NBQ0Y7O0FBRUE7Z0ZBQ0c7O0FBRUg7OztHQUdDOztBQUVEOzs7OztFQUtFLGNBQUEsQ0FBQSxPQUFBO0VBQ0EsVUFBQSxDQUFBLE9BQUE7Q0FDRjs7QUFFQTs7R0FFQzs7QUFFRDtFQUNFLGtCQUFBO0NBQ0Y7O0FBRUE7OztHQUdDOztBQUVEO1FBQ0EsT0FBQTtFQUNFLGtCQUFBO0NBQ0Y7O0FBRUE7OztHQUdDOztBQUVEO1NBQ0EsT0FBQTtFQUNFLHFCQUFBO0NBQ0Y7O0FBRUE7Ozs7R0FJQzs7QUFFRDs7OztFQUlFLDJCQUFBLENBQUEsT0FBQTtDQUNGOztBQUVBOztHQUVDOztBQUVEOzs7O0VBSUUsbUJBQUE7RUFDQSxXQUFBO0NBQ0Y7O0FBRUE7O0dBRUM7O0FBRUQ7Ozs7RUFJRSwrQkFBQTtDQUNGOztBQUVBOztHQUVDOztBQUVEO0VBQ0UsMEJBQUE7RUFDQSxjQUFBO0VBQ0EsK0JBQUE7Q0FDRjs7QUFFQTs7Ozs7R0FLQzs7QUFFRDtFQUNFLHVCQUFBLENBQUEsT0FBQTtFQUNBLGVBQUEsQ0FBQSxPQUFBO0VBQ0EsZUFBQSxDQUFBLE9BQUE7RUFDQSxnQkFBQSxDQUFBLE9BQUE7RUFDQSxXQUFBLENBQUEsT0FBQTtFQUNBLG9CQUFBLENBQUEsT0FBQTtDQUNGOztBQUVBOztHQUVDOztBQUVEO0VBQ0UsZUFBQTtDQUNGOztBQUVBOzs7R0FHQzs7QUFFRDs7RUFFRSx1QkFBQSxDQUFBLE9BQUE7RUFDQSxXQUFBLENBQUEsT0FBQTtDQUNGOztBQUVBOztHQUVDOztBQUVEOztFQUVFLGFBQUE7Q0FDRjs7QUFFQTs7O0dBR0M7O0FBRUQ7RUFDRSw4QkFBQSxDQUFBLE9BQUE7RUFDQSxxQkFBQSxDQUFBLE9BQUE7Q0FDRjs7QUFFQTs7R0FFQzs7QUFFRDs7RUFFRSx5QkFBQTtDQUNGOztBQUVBOztHQUVDOztBQUVEO0VBQ0UsZUFBQTtFQUNBLGNBQUE7Q0FDRjs7QUFFQTs7O0dBR0M7O0FBRUQ7RUFDRSwyQkFBQSxDQUFBLE9BQUE7RUFDQSxjQUFBLENBQUEsT0FBQTtDQUNGOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FrQkM7QUFDRDs7R0FFQztBQUNEOzs7O0dBSUM7QUFDRDs7OztHQUlDO0FBQ0Q7RUFDRSxVQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0NBQ0Y7QUFDQTtFQUNFLHFEQUFBO0VBQ0EsMEJBQUE7RUFDQSwwQkFBQTtDQUNGO0FBQ0E7RUFDRSx5REFBQTtFQUNBLDBCQUFBO0VBQ0EseUJBQUE7Q0FDRjtBQUNBO0VBQ0Usa0NBQUE7Q0FDRjtBQUNBO0VBQ0UsaURBQUE7Q0FDRjtBQUNBO0VBQ0UsdUJBQUE7Q0FDRjtBQUNBO0VBQ0U7SUFDRSxXQUFBO0dBQ0Y7RUFDQTtJQUNFLFdBQUE7R0FDRjtDQUNGO0FBQ0E7RUFDRSxXQUFBO0NBQ0Y7QUFDQTtFQUNFLG1MQUFBO0NBQ0Y7QUFDQTtFQUNFLG9HQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLHNHQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLHNHQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLDRGQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLDRGQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLDJGQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLDZGQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLDhGQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLDBGQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLDZGQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLHNHQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLCtGQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLGdHQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLGtHQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLGtHQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLGlHQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLHVHQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLCtGQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLHFHQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQTtFQUNFLDZGQUFBO0VBQ0EsNkJBQUE7RUFDQSxzQkFBQTtFQUNBLDZCQUFBO0NBQ0Y7QUFDQSxzRkFBQTtBQUNBLFdBQUE7QUFDQTtFQUNFLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLGlTQUFBO0NBQ0Y7QUFDQTtFQUNFLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLGdMQUFBO0VBQ0EsNklBQUE7Q0FDRjtBQUNBO0VBQ0UsMkJBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsaVNBQUE7Q0FDRjtBQUNBO0VBQ0UsMkJBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsNktBQUE7RUFDQSw2SUFBQTtDQUNGO0FBQ0E7RUFDRSwrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSwrU0FBQTtDQUNGO0FBQ0E7RUFDRSwrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSwyU0FBQTtDQUNGO0FBQ0E7RUFDRSwrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSw2U0FBQTtDQUNGO0FBQ0EsZUFBQTtBQUNBO0VBQ0UsK0JBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsOE1BQUE7RUFDQSw0RkFBQTtDQUNGO0FBQ0EsV0FBQTtBQUNBO0VBQ0UsK0JBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EseUxBQUE7RUFDQSw2SUFBQTtDQUNGO0FBQ0EsZUFBQTtBQUNBO0VBQ0UsK0JBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EscUxBQUE7RUFDQSw0RkFBQTtDQUNGO0FBQ0EsV0FBQTtBQUNBO0VBQ0UsK0JBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EscUxBQUE7RUFDQSw2SUFBQTtDQUNGO0FBQ0EsZUFBQTtBQUNBO0VBQ0UsK0JBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsNE1BQUE7RUFDQSw0RkFBQTtDQUNGO0FBQ0EsV0FBQTtBQUNBO0VBQ0UsK0JBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsdUxBQUE7RUFDQSw2SUFBQTtDQUNGO0FBQ0E7RUFDRSxxQkFBQTtFQUNBLGNBQUE7RUFDQSxvQkFBQTtFQUNBLGdCQUFBO0VBQ0Esd0JBQUE7RUFDQSxvQkFBQTtDQUNGO0FBQ0E7RUFDRSxxQkFBQTtFQUNBLGFBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7RUFDQSw4QkFBQTtFQUNBLGlCQUFBO0NBQ0Y7QUFDQTs7S0FFRztBQUNIOztLQUVHO0FBQ0g7O0tBRUc7QUFDSDtFQUNFLG1DQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtDQUNGO0FBQ0E7RUFDRSx1Q0FBQTtFQUNBLGlCQUFBO0NBQ0Y7QUFDQTtFQUNFLGlCQUFBO0NBQ0Y7QUFDQTtFQUNFLDBDQUFBO0VBQ0Esb0JBQUE7Q0FDRjtBQUNBO0VBQ0Usc0JBQUE7Q0FDRjtBQUNBO0VBQ0UsV0FBQTtFQUNBLG1CQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtDQUNGO0FBQ0E7O0VBRUUsdUJBQUE7RUFDQSxpQkFBQTtDQUNGO0FBQ0E7RUFDRSxtQkFBQTtFQUNBLGFBQUE7Q0FDRjtBQUNBO0VBQ0UsdUNBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxxQkFBQTtFQUNBLGlCQUFBO0VBQ0EsMEJBQUE7Q0FDRjtBQUNBO0VBQ0UsdUNBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0Esb0JBQUE7RUFDQSx3QkFBQTtFQUNBLGlCQUFBO0VBQ0EsMEJBQUE7Q0FDRjtBQUNBO0VBQ0UsdUNBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtFQUNBLHdCQUFBO0VBQ0EsaUJBQUE7RUFDQSwwQkFBQTtDQUNGO0FBQ0E7RUFDRSx1Q0FBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLHFCQUFBO0VBQ0EsaUJBQUE7RUFDQSwwQkFBQTtFQUNBLGlDQUFBO0VBQ0EsbUJBQUE7Q0FDRjtBQUNBO0VBQ0UsdUNBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtFQUNBLHNCQUFBO0VBQ0EsaUJBQUE7RUFDQSwwQkFBQTtDQUNGO0FBQ0E7RUFDRSxtQ0FBQTtFQUNBLG1CQUFBO0VBQ0Esc0JBQUE7RUFDQSxpQkFBQTtDQUNGO0FBQ0E7RUFDRSxtQ0FBQTtFQUNBLG1CQUFBO0VBQ0Esc0JBQUE7RUFDQSxpQkFBQTtDQUNGO0FBQ0E7RUFDRTtJQUNFLHVDQUFBO0lBQ0Esa0JBQUE7SUFDQSxpQkFBQTtJQUNBLGtCQUFBO0lBQ0EscUJBQUE7SUFDQSxpQkFBQTtJQUNBLDBCQUFBO0dBQ0Y7RUFDQTtJQUNFLHVDQUFBO0lBQ0Esb0JBQUE7SUFDQSxpQkFBQTtJQUNBLG9CQUFBO0lBQ0Esd0JBQUE7SUFDQSxpQkFBQTtJQUNBLDBCQUFBO0dBQ0Y7RUFDQTtJQUNFLHVDQUFBO0lBQ0Esb0JBQUE7SUFDQSxxQkFBQTtJQUNBLGNBQUE7SUFDQSx3QkFBQTtJQUNBLGlCQUFBO0lBQ0EsMEJBQUE7R0FDRjtFQUNBO0lBQ0UsdUNBQUE7SUFDQSxnQkFBQTtJQUNBLGlCQUFBO0lBQ0Esa0JBQUE7SUFDQSxxQkFBQTtJQUNBLGlCQUFBO0lBQ0EsMEJBQUE7SUFDQSxpQ0FBQTtHQUNGO0VBQ0E7SUFDRSx1Q0FBQTtJQUNBLGtCQUFBO0lBQ0EsZUFBQTtJQUNBLG1CQUFBO0lBQ0Esc0JBQUE7SUFDQSxpQkFBQTtJQUNBLDBCQUFBO0dBQ0Y7RUFDQTtJQUNFLG1DQUFBO0lBQ0EsbUJBQUE7SUFDQSxzQkFBQTtJQUNBLGlCQUFBO0dBQ0Y7RUFDQTtJQUNFLG1DQUFBO0lBQ0EsbUJBQUE7SUFDQSxzQkFBQTtJQUNBLGlCQUFBO0dBQ0Y7Q0FDRjtBQUNBOztLQUVHO0FBQ0g7O0tBRUc7QUFDSDtFQUNFLFlBQUE7RUFDQSxpQkFBQTtDQUNGO0FBQ0E7RUFDRSxvQkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0NBQ0Y7QUFDQTtFQUNFLG9CQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7Q0FDRjtBQUNBO0VBQ0UsWUFBQTtDQUNGO0FBQ0E7RUFDRSxZQUFBO0NBQ0Y7QUFDQTs7RUFFRSxlQUFBO0NBQ0Y7QUFDQTtFQUNFLGVBQUE7Q0FDRjtBQUNBO0VBQ0UsY0FBQTtFQUNBLGVBQUE7Q0FDRjtBQUNBO0VBQ0UsWUFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSwwQkFBQTtDQUNGO0FBQ0E7RUFDRSwwQkFBQTtDQUNGO0FBQ0E7O0VBRUUsdUJBQUE7Q0FDRjtBQUNBO0VBQ0UsWUFBQTtDQUNGO0FBQ0EsNkNBQUE7QUFDQTs7Ozs7OztFQU9FLFlBQUE7Q0FDRjtBQUNBOzs7Ozs7O0dBT0M7QUFDRDtFQUNFLGtDQUFBO0NBQ0Y7QUFDQTtFQUNFLGlEQUFBO0NBQ0Y7QUFDQTtFQUNFLHVCQUFBO0NBQ0Y7QUFDQTtFQUNFO0lBQ0UsV0FBQTtHQUNGO0VBQ0E7SUFDRSxXQUFBO0dBQ0Y7Q0FDRjtBQUNBLHVDQUFBO0FBQ0E7RUFDRSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7Q0FDRjtBQUNBO0VBQ0UsaUJBQUE7Q0FDRjtBQUNBO0VBQ0Usa0JBQUE7Q0FDRjtBQUNBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSxvQkFBQTtFQUNBLHNCQUFBO0VBQ0EsdUJBQUE7Q0FDRjtBQUNBO0VBQ0UsYUFBQTtFQUNBLGtCQUFBO0NBQ0Y7QUFDQTs7S0FFRztBQUNIOzs7Ozs7OztFQVFFLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtFQUNBLHNCQUFBO0VBQ0Esb0JBQUE7RUFDQSxxQkFBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtFQUNBLHVCQUFBO0VBQ0EsNkJBQUE7RUFDQSwwQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtDQUNGO0FBQ0E7Ozs7Ozs7O0VBUUUsMkpBQUE7Q0FDRjtBQUNBOztLQUVHO0FBQ0g7RUFDRSxnQkFBQTtDQUNGO0FBQ0E7RUFDRSxvQkFBQTtFQUNBLHVCQUFBO0VBQ0EsdUJBQUE7RUFDQSx3QkFBQTtFQUNBLGVBQUE7RUFDQSx3QkFBQTtFQUNBLDBCQUFBO0VBQ0EsbUNBQUE7RUFDQSxnQkFBQTtDQUNGO0FBQ0E7RUFDRSxZQUFBO0VBQ0Esb0JBQUE7RUFDQSwwQkFBQTtDQUNGO0FBQ0E7RUFDRSxjQUFBO0VBQ0EsWUFBQTtFQUNBLG9CQUFBO0VBQ0EsMEJBQUE7Q0FDRjtBQUNBO0VBQ0UsZUFBQTtFQUNBLG9CQUFBO0VBQ0EsMEJBQUE7RUFDQSxnQkFBQTtDQUNGO0FBQ0E7RUFDRSxjQUFBO0NBQ0Y7QUFDQTtFQUNFLG1CQUFBO0VBQ0Esc0JBQUE7RUFDQSxvQkFBQTtFQUNBLHFCQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0VBQ0EsZ0JBQUE7Q0FDRjtBQUNBLHlGQUFBO0FBQ0E7RUFDRSxpQkFBQTtFQUNBLGVBQUE7Q0FDRjtBQUNBO0VBQ0UsaUJBQUE7Q0FDRjtBQUNBO0VBQ0U7SUFDRSxpQkFBQTtJQUNBLGVBQUE7R0FDRjtFQUNBO0lBQ0UsaUJBQUE7R0FDRjtDQUNGO0FBQ0E7RUFDRSxvQkFBQTtFQUNBLHVCQUFBO0VBQ0EsdUJBQUE7RUFDQSx3QkFBQTtFQUNBLGVBQUE7RUFDQSx3QkFBQTtFQUNBLDBCQUFBO0VBQ0EsbUNBQUE7RUFDQSxnQkFBQTtDQUNGO0FBQ0E7RUFDRSxZQUFBO0VBQ0Esb0JBQUE7RUFDQSwwQkFBQTtDQUNGO0FBQ0E7RUFDRSxjQUFBO0VBQ0EsWUFBQTtFQUNBLG9CQUFBO0VBQ0EsMEJBQUE7Q0FDRjtBQUNBO0VBQ0UsZUFBQTtFQUNBLG9CQUFBO0VBQ0EsMEJBQUE7RUFDQSxnQkFBQTtDQUNGO0FBQ0E7RUFDRSxjQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0VBQ0EsZ0JBQUE7Q0FDRjtBQUNBO0VBQ0UsbUJBQUE7RUFDQSxzQkFBQTtFQUNBLG9CQUFBO0VBQ0EscUJBQUE7Q0FDRjtBQUNBO0VBQ0Usb0JBQUE7RUFDQSx1QkFBQTtFQUNBLHVCQUFBO0VBQ0Esd0JBQUE7RUFDQSxlQUFBO0VBQ0Esd0JBQUE7RUFDQSwwQkFBQTtFQUNBLG1DQUFBO0VBQ0EsZ0JBQUE7Q0FDRjtBQUNBO0VBQ0UsWUFBQTtFQUNBLG9CQUFBO0VBQ0EsMEJBQUE7Q0FDRjtBQUNBO0VBQ0UsY0FBQTtFQUNBLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTtFQUNFLGVBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0VBQ0EsZ0JBQUE7Q0FDRjtBQUNBO0VBQ0UsY0FBQTtDQUNGO0FBQ0E7RUFDRSxZQUFBO0VBQ0Esb0JBQUE7RUFDQSwwQkFBQTtDQUNGO0FBQ0E7RUFDRSxZQUFBO0VBQ0Esb0JBQUE7RUFDQSwwQkFBQTtDQUNGO0FBQ0E7RUFDRSxZQUFBO0VBQ0Esb0JBQUE7RUFDQSwwQkFBQTtDQUNGO0FBQ0E7RUFDRSxZQUFBO0VBQ0Esb0JBQUE7RUFDQSwwQkFBQTtFQUNBLGdCQUFBO0NBQ0Y7QUFDQTtFQUNFLG1CQUFBO0VBQ0Esc0JBQUE7RUFDQSxvQkFBQTtFQUNBLHFCQUFBO0NBQ0Y7QUFDQTtFQUNFLG9CQUFBO0VBQ0EsdUJBQUE7RUFDQSx1QkFBQTtFQUNBLHdCQUFBO0VBQ0EsZUFBQTtFQUNBLHdCQUFBO0VBQ0EsMEJBQUE7RUFDQSxtQ0FBQTtFQUNBLGdCQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTtFQUNFLGNBQUE7RUFDQSxZQUFBO0VBQ0Esb0JBQUE7RUFDQSwwQkFBQTtDQUNGO0FBQ0E7RUFDRSxlQUFBO0VBQ0Esb0JBQUE7RUFDQSwwQkFBQTtFQUNBLGdCQUFBO0NBQ0Y7QUFDQTtFQUNFLGNBQUE7Q0FDRjtBQUNBO0VBQ0UsWUFBQTtFQUNBLG9CQUFBO0VBQ0EsMEJBQUE7Q0FDRjtBQUNBO0VBQ0UsWUFBQTtFQUNBLG9CQUFBO0VBQ0EsMEJBQUE7Q0FDRjtBQUNBO0VBQ0UsWUFBQTtFQUNBLG9CQUFBO0VBQ0EsMEJBQUE7Q0FDRjtBQUNBO0VBQ0UsWUFBQTtFQUNBLG9CQUFBO0VBQ0EsMEJBQUE7RUFDQSxnQkFBQTtDQUNGO0FBQ0E7RUFDRSxtQkFBQTtFQUNBLHNCQUFBO0VBQ0Esb0JBQUE7RUFDQSxxQkFBQTtDQUNGO0FBQ0E7RUFDRSxvQkFBQTtFQUNBLHVCQUFBO0VBQ0EsdUJBQUE7RUFDQSx3QkFBQTtFQUNBLFlBQUE7RUFDQSx3QkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUNBQUE7RUFDQSxnQkFBQTtDQUNGO0FBQ0E7RUFDRSxZQUFBO0VBQ0Esb0JBQUE7RUFDQSwwQkFBQTtDQUNGO0FBQ0E7RUFDRSxjQUFBO0VBQ0EsWUFBQTtFQUNBLG9CQUFBO0VBQ0EsMEJBQUE7Q0FDRjtBQUNBO0VBQ0UsZUFBQTtFQUNBLG9CQUFBO0VBQ0EsMEJBQUE7RUFDQSxnQkFBQTtDQUNGO0FBQ0E7RUFDRSxjQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0VBQ0EsZ0JBQUE7Q0FDRjtBQUNBO0VBQ0UsbUJBQUE7RUFDQSxzQkFBQTtFQUNBLG9CQUFBO0VBQ0EscUJBQUE7Q0FDRjtBQUNBOztFQUVFLFlBQUE7RUFDQSwwQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTs7RUFFRSwwQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTs7RUFFRSwwQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTs7RUFFRSxtTEFBQTtDQUNGO0FBQ0E7O0VBRUUsMEJBQUE7RUFDQSxtTEFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTs7RUFFRSxjQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxpQkFBQTtFQUNBLDhCQUFBO0VBQ0EsMkJBQUE7Q0FDRjtBQUNBO0VBQ0UsY0FBQTtFQUNBLDhCQUFBO0NBQ0Y7QUFDQTtFQUNFLHNDQUFBO0NBQ0Y7QUFDQTtFQUNFLHFNQUFBO0NBQ0Y7QUFDQTtFQUNFLDhCQUFBO0VBQ0EscU1BQUE7Q0FDRjtBQUNBO0VBQ0UsY0FBQTtDQUNGO0FBQ0E7RUFDRSxxQkFBQTtFQUNBLGNBQUE7RUFDQSx3QkFBQTtFQUNBLG9CQUFBO0VBQ0EsaUJBQUE7RUFDQSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxZQUFBO0VBQ0EsdUJBQUE7RUFDQSxzQkFBQTtFQUNBLGdCQUFBO0VBQ0EsbUNBQUE7RUFDQSxnQkFBQTtDQUNGO0FBQ0E7RUFDRSxZQUFBO0VBQ0Esb0JBQUE7Q0FDRjtBQUNBO0VBQ0UsY0FBQTtFQUNBLFlBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTtFQUNFLGVBQUE7RUFDQSxvQkFBQTtFQUNBLDBCQUFBO0NBQ0Y7QUFDQTtFQUNFLGNBQUE7Q0FDRjtBQUNBO0VBQ0UsZUFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLHVCQUFBO0NBQ0Y7QUFDQTtFQUNFLHFCQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0VBQ0EscUJBQUE7RUFDQSw0QkFBQTtFQUNBLHVCQUFBO0VBQ0Esb0JBQUE7RUFDQSxZQUFBO0VBQ0EsUUFBQTtFQUNBLHdCQUFBO0VBQ0Esd0NBQUE7Q0FDRjtBQUNBO0VBQ0Usb0JBQUE7Q0FDRjtBQUNBO0VBQ0UsYUFBQTtFQUNBLGNBQUE7RUFDQSw2QkFBQTtFQUNBLHFCQUFBO0VBQ0EsY0FBQTtFQUNBLHNCQUFBO0VBQ0Esd0JBQUE7RUFDQSx1QkFBQTtFQUNBLG9CQUFBO0VBQ0EsaUJBQUE7Q0FDRjtBQUNBO0VBQ0UsZUFBQTtFQUNBLGFBQUE7RUFDQSxvQkFBQTtFQUNBLG1CQUFBO0VBQ0EsMEJBQUE7RUFDQSxxQ0FBQTtFQUNBLG9CQUFBO0VBQ0EsMEJBQUE7RUFDQSxZQUFBO0VBQ0EsMkJBQUE7Q0FDRjtBQUNBOzs7RUFHRSxZQUFBO0VBQ0EsMEJBQUE7RUFDQSxZQUFBO0NBQ0Y7QUFDQTs7S0FFRztBQUNIOztLQUVHO0FBQ0g7RUFDRSxlQUFBO0VBQ0EsZ0NBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxzQkFBQTtFQUNBLHdCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0NBQ0Y7QUFDQTs7O0VBR0UseUJBQUE7Q0FDRjtBQUNBO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0VBQ0Esd0JBQUE7RUFDQSwwQkFBQTtFQUNBLG1CQUFBO0NBQ0Y7QUFDQTtFQUNFLFlBQUE7RUFDQSxjQUFBO0VBQ0Esc0JBQUE7RUFDQSxnRUFBQTtFQUNBLHlCQUFBO0NBQ0Y7QUFDQTtFQUNFLG9CQUFBO0VBQ0EsYUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsbUJBQUE7RUFDQSw2QkFBQTtFQUNBLGlCQUFBO0NBQ0Y7QUFDQTtFQUNFLGNBQUE7RUFDQSw0QkFBQTtDQUNGO0FBQ0E7RUFDRSxnQkFBQTtDQUNGO0FBQ0E7RUFDRSxjQUFBO0NBQ0Y7QUFDQTtFQUNFLGNBQUE7RUFDQSxpQkFBQTtDQUNGO0FBQ0E7RUFDRSwwQ0FBQTtDQUNGO0FBQ0E7O0tBRUc7QUFDSDs7S0FFRztBQUNIO0VBQ0UsZUFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLHlGQUFBO0VBQ0EsNkJBQUE7RUFDQSwyQkFBQTtFQUNBLDZCQUFBO0VBQ0EsYUFBQTtFQUNBLDhCQUFBO0VBQ0EsbUVBQUE7Q0FDRjtBQUNBO0VBQ0UsV0FBQTtDQUNGO0FBQ0E7O0tBRUc7QUFDSDs7S0FFRztBQUNIO0VBQ0UsY0FBQTtFQUNBLHFCQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0VBQ0EsMEJBQUE7RUFDQSxnQkFBQTtFQUNBLFNBQUE7RUFDQSxRQUFBO0VBQ0EsVUFBQTtFQUNBLGVBQUE7RUFDQSw0QkFBQTtDQUNGO0FBQ0E7RUFDRSxrQkFBQTtDQUNGOzs7O0FDOWpEQSw0RUFBQTs7QUFFQTs7OztHQUlDOztBQUVEO0VBQ0Usd0JBQUEsQ0FBQSxPQUFBO0VBQ0EsMkJBQUEsQ0FBQSxPQUFBO0VBQ0EsK0JBQUEsQ0FBQSxPQUFBO0NBQ0Y7O0FBRUE7O0dBRUM7O0FBRUQ7RUFDRSxVQUFBO0NBQ0Y7O0FBRUE7Z0ZBQ0c7O0FBRUg7Ozs7O0dBS0M7O0FBRUQ7Ozs7Ozs7Ozs7Ozs7RUFhRSxlQUFBO0NBQ0Y7O0FBRUE7OztHQUdDOztBQUVEOzs7O0VBSUUsc0JBQUEsQ0FBQSxPQUFBO0VBQ0EseUJBQUEsQ0FBQSxPQUFBO0NBQ0Y7O0FBRUE7OztHQUdDOztBQUVEO0VBQ0UsY0FBQTtFQUNBLFVBQUE7Q0FDRjs7QUFFQTs7O0dBR0M7O0FBRUQ7O0VBRUUsY0FBQTtDQUNGOztBQUVBO2dGQUNHOztBQUVIOztHQUVDOztBQUVEO0VBQ0UsOEJBQUE7Q0FDRjs7QUFFQTs7O0dBR0M7O0FBRUQ7O0VBRUUsV0FBQTtDQUNGOztBQUVBO2dGQUNHOztBQUVIOztHQUVDOztBQUVEO0VBQ0UsMEJBQUE7Q0FDRjs7QUFFQTs7R0FFQzs7QUFFRDs7RUFFRSxrQkFBQTtDQUNGOztBQUVBOztHQUVDOztBQUVEO0VBQ0UsbUJBQUE7Q0FDRjs7QUFFQTs7O0dBR0M7O0FBRUQ7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7Q0FDRjs7QUFFQTs7R0FFQzs7QUFFRDtFQUNFLGlCQUFBO0VBQ0EsWUFBQTtDQUNGOztBQUVBOztHQUVDOztBQUVEO0VBQ0UsZUFBQTtDQUNGOztBQUVBOztHQUVDOztBQUVEOztFQUVFLGVBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7RUFDQSx5QkFBQTtDQUNGOztBQUVBO0VBQ0UsWUFBQTtDQUNGOztBQUVBO0VBQ0UsZ0JBQUE7Q0FDRjs7QUFFQTtnRkFDRzs7QUFFSDs7R0FFQzs7QUFFRDtFQUNFLFVBQUE7Q0FDRjs7QUFFQTs7R0FFQzs7QUFFRDtFQUNFLGlCQUFBO0NBQ0Y7O0FBRUE7Z0ZBQ0c7O0FBRUg7O0dBRUM7O0FBRUQ7RUFDRSxpQkFBQTtDQUNGOztBQUVBOztHQUVDOztBQUVEO0VBQ0Usd0JBQUE7RUFDQSxVQUFBO0NBQ0Y7O0FBRUE7O0dBRUM7O0FBRUQ7RUFDRSxlQUFBO0NBQ0Y7O0FBRUE7O0dBRUM7O0FBRUQ7Ozs7RUFJRSxrQ0FBQTtFQUNBLGVBQUE7Q0FDRjs7QUFFQTtnRkFDRzs7QUFFSDs7O0dBR0M7O0FBRUQ7Ozs7O0dBS0M7O0FBRUQ7Ozs7O0VBS0UsZUFBQSxDQUFBLE9BQUE7RUFDQSxjQUFBLENBQUEsT0FBQTtFQUNBLFVBQUEsQ0FBQSxPQUFBO0NBQ0Y7O0FBRUE7O0dBRUM7O0FBRUQ7RUFDRSxrQkFBQTtDQUNGOztBQUVBOzs7OztHQUtDOztBQUVEOztFQUVFLHFCQUFBO0NBQ0Y7O0FBRUE7Ozs7OztHQU1DOztBQUVEOzs7O0VBSUUsMkJBQUEsQ0FBQSxPQUFBO0VBQ0EsZ0JBQUEsQ0FBQSxPQUFBO0NBQ0Y7O0FBRUE7O0dBRUM7O0FBRUQ7O0VBRUUsZ0JBQUE7Q0FDRjs7QUFFQTs7R0FFQzs7QUFFRDs7RUFFRSxVQUFBO0VBQ0EsV0FBQTtDQUNGOztBQUVBOzs7R0FHQzs7QUFFRDtFQUNFLG9CQUFBO0NBQ0Y7O0FBRUE7Ozs7OztHQU1DOztBQUVEOztFQUVFLHVCQUFBLENBQUEsT0FBQTtFQUNBLFdBQUEsQ0FBQSxPQUFBO0NBQ0Y7O0FBRUE7Ozs7R0FJQzs7QUFFRDs7RUFFRSxhQUFBO0NBQ0Y7O0FBRUE7OztHQUdDOztBQUVEO0VBQ0UsOEJBQUEsQ0FBQSxPQUFBO0VBQ0Esd0JBQUEsQ0FBQSxPQUFBO0NBQ0Y7O0FBRUE7Ozs7R0FJQzs7QUFFRDs7RUFFRSx5QkFBQTtDQUNGOztBQUVBOztHQUVDOztBQUVEO0VBQ0UsMEJBQUE7RUFDQSxjQUFBO0VBQ0EsK0JBQUE7Q0FDRjs7QUFFQTs7O0dBR0M7O0FBRUQ7RUFDRSxVQUFBLENBQUEsT0FBQTtFQUNBLFdBQUEsQ0FBQSxPQUFBO0NBQ0Y7O0FBRUE7O0dBRUM7O0FBRUQ7RUFDRSxlQUFBO0NBQ0Y7O0FBRUE7OztHQUdDOztBQUVEO0VBQ0Usa0JBQUE7Q0FDRjs7QUFFQTtnRkFDRzs7QUFFSDs7R0FFQzs7QUFFRDtFQUNFLDBCQUFBO0VBQ0Esa0JBQUE7Q0FDRjs7QUFFQTs7RUFFRSxXQUFBO0NBQ0Y7O0FBRUE7O0tBRUc7QUFDSDs7S0FFRztBQUNIO0VBQ0UsbUJBQUE7RUFDQSxXQUFBO0VBQ0EscUJBQUE7RUFDQSxjQUFBO0VBQ0EsMkJBQUE7RUFDQSx1QkFBQTtFQUNBLHNCQUFBO0VBQ0Esd0JBQUE7RUFDQSx1QkFBQTtFQUNBLG9CQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0VBQ0EsNkJBQUE7RUFDQSw2QkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7Q0FDRjtBQUNBOztFQUVFLGFBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLDhCQUFBO0NBQ0Y7QUFDQTs7RUFFRSxvQkFBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0NBQ0Y7QUFDQTtFQUNFLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFlBQUE7RUFDQSw2QkFBQTtFQUNBLDZCQUFBO0VBQ0EsdUJBQUE7Q0FDRjtBQUNBO0VBQ0UsbUJBQUE7Q0FDRjtBQUNBOztFQUVFLG1CQUFBO0VBQ0EsT0FBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsUUFBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtDQUNGO0FBQ0E7RUFDRSx1QkFBQTtDQUNGO0FBQ0E7RUFDRSx1QkFBQTtDQUNGO0FBQ0E7RUFDRSwyQkFBQTtFQUNBLHVCQUFBO0NBQ0Y7QUFDQTtFQUNFLGVBQUE7Q0FDRjtBQUNBO0VBQ0UsaUJBQUE7Q0FDRjtBQUNBO0VBQ0UsWUFBQTtFQUNBLHFCQUFBO0VBQ0EsY0FBQTtFQUNBLDJCQUFBO0VBQ0EsdUJBQUE7RUFDQSxzQkFBQTtFQUNBLHdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsZUFBQTtDQUNGO0FBQ0E7RUFDRSxhQUFBO0NBQ0Y7QUFDQTtFQUNFLG9CQUFBO0NBQ0Y7QUFDQTs7RUFFRSwwQkFBQTtFQUNBLG1CQUFBO0NBQ0Y7QUFDQTtFQUNFLGtCQUFBO0NBQ0Y7QUFDQSxtQ0FBQTtBQUNBO0VBQ0U7SUFDRSxvQkFBQTtHQUNGO0VBQ0E7SUFDRSxvQkFBQTtHQUNGO0NBQ0Y7QUFDQSxpQ0FBQTtBQUNBO0VBQ0U7SUFDRSw4QkFBQTtHQUNGO0VBQ0E7SUFDRSxvQkFBQTtJQUNBLDhCQUFBO0lBQ0EsOEJBQUE7R0FDRjtDQUNGOzs7O0FDL2hCQTtFQUNFLDRCQUFBO0VBQ0EsMEJBQUE7RUFDQSwyQ0FBQTtDQ3NtRUQ7QURubUVEO0VBQ0UsK0NBQUE7RUFDQSwwQkFBQTtDQ3FtRUQ7QURsbUVEO0VBQ0UsNkNBQUE7RUFDQSwrQ0FBQTtFQUNBLDBCQUFBO0NDb21FRCIsImZpbGUiOiJzdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMy4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMiAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMyAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscywgLyogMSAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sIC8qIDIgKi9cbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7IC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxudGVtcGxhdGUsIC8qIDEgKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udDogaW5oZXJpdDsgLyogMSAqL1xuICBtYXJnaW46IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSB0ZXh0IHN0eWxlIG9mIHBsYWNlaG9sZGVycyBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDAuNTQ7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vKlxuICogU3R5bGUgc2V0dXAgZm9yIHJlZHNpZnQtdWkgYmFzZWQgc2lmdHMuXG4gKlxuICogLSBQcm92aWRlczpcbiAqICAgLiByZWFkeS10by11c2UgVUkgY29tcG9uZW50c1xuICogICAuIHJlc3BvbnNpdmUgdHlwZSBzeXN0ZW1cbiAqICAgLiBicmVha3BvaW50IHNldHVwICh2aWEgJ3J1cHR1cmUnKVxuICogICAuIGNvbW1vbiBmdW5jdGlvbmFsaXR5IGxpa2UgcmVzZXQsIHBhdHRlcm5zIGFuZCBmb250c1xuICpcbiAqIC0gVXNlZCBieTpcbiAqICAgLiByZWRzaWZ0LWxpZ2h0XG4gKiAgIC4gcmVkc2lmdC1kYXJrXG4gKlxuICogLSBGb2xkZXIgc3RydWN0dXJlOlxuICpcbiAqICAgLi9saWIgICAgICAgIC0+IG1peGluIGFuZCBmdW5jdGlvbiBsaWJyYXJ5XG4gKiAgIC4vY29tbW9uICAgICAtPiBDU1Mgc2V0dXAgYW5kIGNvbW1vbiBjbGFzc2VzXG4gKiAgIC4vY29tcG9uZW50cyAtPiBVSSBjb21wb25lbnRzXG4gKi9cbi8qXG4gKiBDb25maWd1cmF0aW9uIHZpYSBvYmplY3QgJyR1aS1ycy1jb3JlJ1xuICovXG4vKlxuICogTWl4aW4vZnVuY3Rpb25zIGxpYnJhcnlcbiAqXG4gKiBDb21tb24gbWl4aW5zIGFuZCBmdW5jdGlvbnMgdXNlZCBieSByZWRzaWZ0LXVpLlxuICovXG4vKlxuICogQmFzZSBjb25maWd1cmF0aW9uIGFuZCBjb21tb24gY2xhc3NlczpcbiAqXG4gKiBDU1MgYmFzZSBzZXR1cCBhbmQgY29tbW9uIENTUyBjbGFzc2VzLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xufVxuLi1wYXR0ZXJuLWRvd24tYXJyb3ctZ3JlZW4ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaWNvbnMvZG93bi1hcnJvdy1ncmVlbi5zdmdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogMTJweCA3cHg7XG59XG4uLXBhdHRlcm4tcmVkc2lmdC1sb2dvIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ljb25zL3JlZHNpZnQtbG9nby1yZWQtOC4xLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiA3cHggN3B4O1xufVxuLmFuaW1hdGUtb3BhY2l0eSB7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgZWFzZS1pbiA0MDBtcztcbn1cbi5mYWRlLWluIHtcbiAgYW5pbWF0aW9uOiBmYWRlaW4gNDAwbXMgZWFzZS1pbiAwcyAxIG5vcm1hbCBib3RoO1xufVxuLmRlbGF5IHtcbiAgYW5pbWF0aW9uLWRlbGF5OiA0MDBtcztcbn1cbkBrZXlmcmFtZXMgZmFkZWluIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuLmhpZGRlbiB7XG4gIG9wYWNpdHk6IDA7XG59XG4uaGFzaCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnQoMTI1ZGVnLCB0cmFuc3BhcmVudCwgdHJhbnNwYXJlbnQgMnB4LCByZ2JhKDAsMCwwLDAuMikgMnB4LCByZ2JhKDAsMCwwLDAuMikgM3B4LCB0cmFuc3BhcmVudCAzcHgsIHRyYW5zcGFyZW50IDVweCwgcmdiYSgwLDAsMCwwLjIpIDVweCk7XG59XG4uLXJzLWljb24tcmVkc2lmdC1yZWQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3N0YXRpYy5yZWRzaWZ0LmlvL2Fzc2V0cy91aS1ycy1jb3JlL2ljb25zLy1ycy1pY29uLXJlZHNpZnQtcmVkLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAzMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLnJzLWljb24tcmVkc2lmdC1jbG91ZCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vc3RhdGljLnJlZHNpZnQuaW8vYXNzZXRzL3VpLXJzLWNvcmUvaWNvbnMvLXJzLWljb24tcmVkc2lmdC1jbG91ZC5zdmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtc2l6ZTogMzBweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbi4tcnMtaWNvbi1yZWRzaWZ0LXdoaXRlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pY29ucy8tcnMtaWNvbi1yZWRzaWZ0LXdoaXRlLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAzMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLi1ycy1pY29uLWdpdGh1YiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vc3RhdGljLnJlZHNpZnQuaW8vYXNzZXRzL3VpLXJzLWNvcmUvaW1hZ2VzL2ljb24tZ2l0aHViLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAzMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLi1ycy1pY29uLWdvb2dsZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vc3RhdGljLnJlZHNpZnQuaW8vYXNzZXRzL3VpLXJzLWNvcmUvaW1hZ2VzL2ljb24tZ29vZ2xlLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAzMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLi1ycy1pY29uLXNsYWNrIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pbWFnZXMvaWNvbi1zbGFjay5wbmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtc2l6ZTogMzBweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbi4tcnMtaWNvbi10d2l0dGVyIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pbWFnZXMvaWNvbi10d2l0dGVyLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAzMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLi1ycy1pY29uLXNldHRpbmdzIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pbWFnZXMvaWNvbi1zZXR0aW5ncy5zdmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtc2l6ZTogMzBweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbi4tcnMtaWNvbi1leGl0IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pbWFnZXMvaWNvbi1leGl0LnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAzMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLi1ycy1pY29uLXByb2ZpbGUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3N0YXRpYy5yZWRzaWZ0LmlvL2Fzc2V0cy91aS1ycy1jb3JlL2ltYWdlcy9pY29uLXByb2ZpbGUuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDMwcHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4uLXJzLWljb24tZG93bi1hcnJvdy1ncmVlbiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vc3RhdGljLnJlZHNpZnQuaW8vYXNzZXRzL3VpLXJzLWNvcmUvaW1hZ2VzL2ljb24tZG93bi1hcnJvdy1ncmVlbi5zdmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtc2l6ZTogMzBweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbi4tcnMtaWNvbi1sb2dvdXQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3N0YXRpYy5yZWRzaWZ0LmlvL2Fzc2V0cy91aS1ycy1jb3JlL2ljb25zLy1ycy1pY29uLWxvZ291dC5zdmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtc2l6ZTogMzBweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbi4tcnMtaWNvbi1wcm9maWxlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pY29ucy8tcnMtaWNvbi1wcm9maWxlLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAzMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLi1ycy1pY29uLWRhc2hib2FyZCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vc3RhdGljLnJlZHNpZnQuaW8vYXNzZXRzL3VpLXJzLWNvcmUvaWNvbnMvLXJzLWljb24tZGFzaGJvYXJkLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAyNHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLi1ycy1pY29uLWNhdGFsb2d1ZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vc3RhdGljLnJlZHNpZnQuaW8vYXNzZXRzL3VpLXJzLWNvcmUvaWNvbnMvLXJzLWljb24tY2F0YWxvZ3VlLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAyNHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLi1ycy1pY29uLXdvcmtzaG9wIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pY29ucy8tcnMtaWNvbi13b3Jrc2hvcC5zdmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtc2l6ZTogMjRweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbi4tcnMtaWNvbi13aXJlZnJhbWUtYmx1ZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vc3RhdGljLnJlZHNpZnQuaW8vYXNzZXRzL3VpLXJzLWNvcmUvaWNvbnMvLXJzLWljb24td2lyZWZyYW1lLWJsdWUuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDMwcHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4uLXJzLWljb24tZXhwYW5kIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pY29ucy8tcnMtaWNvbi1leHBhbmQuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDMwcHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4uLXJzLWljb24tZXhwYW5kLXNwbGl0IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pY29ucy8tcnMtaWNvbi1leHBhbmQtc3BsaXQuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDMwcHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4uLXJzLWljb24tZXhpdCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vc3RhdGljLnJlZHNpZnQuaW8vYXNzZXRzL3VpLXJzLWNvcmUvaWNvbnMvLXJzLWljb24tZXhpdC5zdmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtc2l6ZTogMzBweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbi8qIEhlYWRpbmcgZm9udCBAaW1wb3J0IHVybChcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1SYWxld2F5OjIwMFwiKTsgKi9cbi8qIGxhdGluICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdSYWxld2F5JztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogMjAwO1xuICBzcmM6IGxvY2FsKCdSYWxld2F5IEV4dHJhTGlnaHQnKSwgbG9jYWwoJ1JhbGV3YXktRXh0cmFMaWdodCcpLCB1cmwoXCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3MvcmFsZXdheS92MTEvOEtoWmQzVlFCdFhUQXpudktqdy1rNzNocHczcGd5MmdBaS1JcDdXUE1pMC53b2ZmXCIpIGZvcm1hdCgnd29mZicpLCB1cmwoXCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3MvcmFsZXdheS92MTEvOEtoWmQzVlFCdFhUQXpudktqdy1reTNVU0JuU3Zwa29wUWFVUi0ycjdpVS50dGZcIikgZm9ybWF0KCd0cnVldHlwZScpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheSc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgc3JjOiBsb2NhbCgnUmFsZXdheSBFeHRyYUxpZ2h0JyksIGxvY2FsKCdSYWxld2F5LUV4dHJhTGlnaHQnKSwgdXJsKFwiaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL3JhbGV3YXkvdjExLzhLaFpkM1ZRQnRYVEF6bnZLancta3d6eURNWGhkRDhzQWo2T0FKVEZzQkkud29mZjJcIikgZm9ybWF0KCd3b2ZmMicpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkM2LCBVKzAyREEsIFUrMDJEQywgVSsyMDAwLTIwNkYsIFUrMjA3NCwgVSsyMEFDLCBVKzIyMTIsIFUrMjIxNSwgVStFMEZGLCBVK0VGRkQsIFUrRjAwMDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0VsZWN0cm9saXplJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBzcmM6IGxvY2FsKCdFbGVjdHJvbGl6ZScpLCBsb2NhbCgnRWxlY3Ryb2xpemUtUmVndWxhcicpLCB1cmwoXCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3MvZWxlY3Ryb2xpemUvdjUvRER5OXNnVTJVN1M0eEF3SDV0aG5KN3JJYS03YWNNQWVEQlZ1Y2xzaTZHYy53b2ZmXCIpIGZvcm1hdCgnd29mZicpLCB1cmwoXCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3MvZWxlY3Ryb2xpemUvdjUvRER5OXNnVTJVN1M0eEF3SDV0aG5KeXdsaWRISmdBZ21Uak9FRXp3dTFMOC50dGZcIikgZm9ybWF0KCd0cnVldHlwZScpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnRWxlY3Ryb2xpemUnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHNyYzogbG9jYWwoJ0VsZWN0cm9saXplJyksIGxvY2FsKCdFbGVjdHJvbGl6ZS1SZWd1bGFyJyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9lbGVjdHJvbGl6ZS92NS9ERHk5c2dVMlU3UzR4QXdINXRobko0Z3A5UThnYllyaHFHbFJhdl9JWGZrLndvZmYyXCIpIGZvcm1hdCgnd29mZjInKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMDAwLTAwRkYsIFUrMDEzMSwgVSswMTUyLTAxNTMsIFUrMDJDNiwgVSswMkRBLCBVKzAyREMsIFUrMjAwMC0yMDZGLCBVKzIwNzQsIFUrMjBBQywgVSsyMjEyLCBVKzIyMTUsIFUrRTBGRiwgVStFRkZELCBVK0YwMDA7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdTb3VyY2UgQ29kZSBQcm8nO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHNyYzogbG9jYWwoJ1NvdXJjZSBDb2RlIFBybyBMaWdodCcpLCBsb2NhbCgnU291cmNlQ29kZVByby1MaWdodCcpLCB1cmwoXCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvc291cmNlY29kZXByby92Ni9sZXF2M3YteVRzSk5DN25Gem5TTXFjVk50b200UWxFRE5KYXFxcXpxZFNzLndvZmZcIikgZm9ybWF0KCd3b2ZmJyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9zb3VyY2Vjb2RlcHJvL3Y2L2xlcXYzdi15VHNKTkM3bkZ6blNNcWZTNDJ3S3pyZTBjeG1PNW01R3lUc1kudHRmXCIpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1NvdXJjZSBDb2RlIFBybyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgc3JjOiBsb2NhbCgnU291cmNlIENvZGUgUHJvJyksIGxvY2FsKCdTb3VyY2VDb2RlUHJvLVJlZ3VsYXInKSwgdXJsKFwiaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL3NvdXJjZWNvZGVwcm8vdjYvbXJsOGprTTE4T2xPUU44SkxnYXNEOUhxLUZGZ29ETlYzR1RLcEh3dXZ0SS53b2ZmXCIpIGZvcm1hdCgnd29mZicpLCB1cmwoXCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvc291cmNlY29kZXByby92Ni9tcmw4amtNMThPbE9RTjhKTGdhc0QwWTZGdTM5VHQ5WGttdFNvc2FNb0VBLnR0ZlwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdTb3VyY2UgQ29kZSBQcm8nO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHNyYzogbG9jYWwoJ1NvdXJjZSBDb2RlIFBybyBCb2xkJyksIGxvY2FsKCdTb3VyY2VDb2RlUHJvLUJvbGQnKSwgdXJsKFwiaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL3NvdXJjZWNvZGVwcm8vdjYvbGVxdjN2LXlUc0pOQzduRnpuU01xWXFqR1lKVXlPWGNCd1VRYlJhTkg2Yy53b2ZmXCIpIGZvcm1hdCgnd29mZicpLCB1cmwoXCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvc291cmNlY29kZXByby92Ni9sZXF2M3YteVRzSk5DN25Gem5TTXFibGNNck5yc25MOWRnQURuWGdZSmpzLnR0ZlwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG59XG4vKiBsYXRpbi1leHQgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1NvdXJjZSBDb2RlIFBybyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgc3JjOiBsb2NhbCgnU291cmNlIENvZGUgUHJvIExpZ2h0JyksIGxvY2FsKCdTb3VyY2VDb2RlUHJvLUxpZ2h0JyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9zb3VyY2Vjb2RlcHJvL3Y2L2xlcXYzdi15VHNKTkM3bkZ6blNNcVRPRm5KTnlnSWtySGNpQzhCV3piQ3ozckdWdHNUa1BzYkRhanVPNXVlUXcud29mZjJcIikgZm9ybWF0KCd3b2ZmMicpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAxMDAtMDI0RiwgVSsxRTAwLTFFRkYsIFUrMjBBMC0yMEFCLCBVKzIwQUQtMjBDRiwgVSsyQzYwLTJDN0YsIFUrQTcyMC1BN0ZGO1xufVxuLyogbGF0aW4gKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1NvdXJjZSBDb2RlIFBybyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgc3JjOiBsb2NhbCgnU291cmNlIENvZGUgUHJvIExpZ2h0JyksIGxvY2FsKCdTb3VyY2VDb2RlUHJvLUxpZ2h0JyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9zb3VyY2Vjb2RlcHJvL3Y2L2xlcXYzdi15VHNKTkM3bkZ6blNNcVNQMkxFazZsTXpZc1JxcjNkSEZJbUEud29mZjJcIikgZm9ybWF0KCd3b2ZmMicpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkM2LCBVKzAyREEsIFUrMDJEQywgVSsyMDAwLTIwNkYsIFUrMjA3NCwgVSsyMEFDLCBVKzIyMTIsIFUrMjIxNSwgVStFMEZGLCBVK0VGRkQsIFUrRjAwMDtcbn1cbi8qIGxhdGluLWV4dCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnU291cmNlIENvZGUgUHJvJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBzcmM6IGxvY2FsKCdTb3VyY2UgQ29kZSBQcm8nKSwgbG9jYWwoJ1NvdXJjZUNvZGVQcm8tUmVndWxhcicpLCB1cmwoXCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvc291cmNlY29kZXByby92Ni9tcmw4amtNMThPbE9RTjhKTGdhc0Q0YTFZRHRvYXJ6d1NYeFRIZ2dFWE13LndvZmYyXCIpIGZvcm1hdCgnd29mZjInKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMTAwLTAyNEYsIFUrMUUwMC0xRUZGLCBVKzIwQTAtMjBBQiwgVSsyMEFELTIwQ0YsIFUrMkM2MC0yQzdGLCBVK0E3MjAtQTdGRjtcbn1cbi8qIGxhdGluICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdTb3VyY2UgQ29kZSBQcm8nO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHNyYzogbG9jYWwoJ1NvdXJjZSBDb2RlIFBybycpLCBsb2NhbCgnU291cmNlQ29kZVByby1SZWd1bGFyJyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9zb3VyY2Vjb2RlcHJvL3Y2L21ybDhqa00xOE9sT1FOOEpMZ2FzRDViUEZkdUlZdG9MendTVDY4dWh6X1kud29mZjJcIikgZm9ybWF0KCd3b2ZmMicpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkM2LCBVKzAyREEsIFUrMDJEQywgVSsyMDAwLTIwNkYsIFUrMjA3NCwgVSsyMEFDLCBVKzIyMTIsIFUrMjIxNSwgVStFMEZGLCBVK0VGRkQsIFUrRjAwMDtcbn1cbi8qIGxhdGluLWV4dCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnU291cmNlIENvZGUgUHJvJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBzcmM6IGxvY2FsKCdTb3VyY2UgQ29kZSBQcm8gQm9sZCcpLCBsb2NhbCgnU291cmNlQ29kZVByby1Cb2xkJyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9zb3VyY2Vjb2RlcHJvL3Y2L2xlcXYzdi15VHNKTkM3bkZ6blNNcWU0czFVeDRQdUltV1BrNWZTcjZIUEwzckdWdHNUa1BzYkRhanVPNXVlUXcud29mZjJcIikgZm9ybWF0KCd3b2ZmMicpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAxMDAtMDI0RiwgVSsxRTAwLTFFRkYsIFUrMjBBMC0yMEFCLCBVKzIwQUQtMjBDRiwgVSsyQzYwLTJDN0YsIFUrQTcyMC1BN0ZGO1xufVxuLyogbGF0aW4gKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1NvdXJjZSBDb2RlIFBybyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgc3JjOiBsb2NhbCgnU291cmNlIENvZGUgUHJvIEJvbGQnKSwgbG9jYWwoJ1NvdXJjZUNvZGVQcm8tQm9sZCcpLCB1cmwoXCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvc291cmNlY29kZXByby92Ni9sZXF2M3YteVRzSk5DN25Gem5TTXFaa0Y4SDh5ZTQ3d3NmcFd5d2RhOG9nLndvZmYyXCIpIGZvcm1hdCgnd29mZjInKTtcbiAgdW5pY29kZS1yYW5nZTogVSswMDAwLTAwRkYsIFUrMDEzMSwgVSswMTUyLTAxNTMsIFUrMDJDNiwgVSswMkRBLCBVKzAyREMsIFUrMjAwMC0yMDZGLCBVKzIwNzQsIFUrMjBBQywgVSsyMjEyLCBVKzIyMTUsIFUrRTBGRiwgVStFRkZELCBVK0YwMDA7XG59XG5kaXYuY2FyZHMge1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICAtbXMtZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbn1cbmRpdi5jYXJkcyA+ZGl2IHtcbiAgLW1zLWZsZXgtcG9zaXRpdmU6IDA7XG4gIGZsZXgtZ3JvdzogMDtcbiAgLW1zLWZsZXgtbmVnYXRpdmU6IDA7XG4gIGZsZXgtc2hyaW5rOiAwO1xuICAtbXMtZmxleC1wcmVmZXJyZWQtc2l6ZTogYXV0bztcbiAgZmxleC1iYXNpczogYXV0bztcbn1cbi8qXG4gICAqIERlZmF1bHQgc2V0dGluZ3M6XG4gICAqL1xuLyogTk9URTogSXQncyBuZWNlc3NhcnkgdG8gdXNlIGUuZy4gdGhlICRmb250Tm9ybWFsIHZhcmlhYmxlIGhlcmUuIERlZmluaW5nXG4gICAqIG11bHRpcGxlIGZvbnRzIGRpcmVjdGx5IGluIGhlcmUgeWllbGRzIGEgc3R5bHVzIGNvbXBpbGVyIGVycm9yLlxuICAgKi9cbi8qXG4gICAqIEJyZWFrcG9pbnQgc2V0dXA6XG4gICAqL1xuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbn1cbmJ1dHRvbiB7XG4gIGZvbnQtZmFtaWx5OiAnRWxlY3Ryb2xpemUnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xufVxuLm92ZXJsYXllZCB7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5jb2RlIHtcbiAgZm9udC1mYW1pbHk6ICdTb3VyY2UgQ29kZSBQcm8nLCBtb25vc3BhY2U7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5wcmUgY29kZSB7XG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbn1cbnAgY29kZSB7XG4gIHBhZGRpbmc6IDA7XG4gIHBhZGRpbmctdG9wOiAwLjJlbTtcbiAgcGFkZGluZy1ib3R0b206IDAuMmVtO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG5wIGNvZGU6OmJlZm9yZSxcbnAgY29kZTo6YWZ0ZXIge1xuICBsZXR0ZXItc3BhY2luZzogLTAuMmVtO1xuICBjb250ZW50OiBcIlxcMDBhMFwiO1xufVxucHJlIHtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBwYWRkaW5nOiAxZW07XG59XG5oMSB7XG4gIGZvbnQtZmFtaWx5OiAnRWxlY3Ryb2xpemUnLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDJyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG4gIG1hcmdpbi10b3A6IDAuMWVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjFlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbmgyIHtcbiAgZm9udC1mYW1pbHk6ICdFbGVjdHJvbGl6ZScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBtYXJnaW4tdG9wOiAxLjI1cmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbmgzIHtcbiAgZm9udC1mYW1pbHk6ICdFbGVjdHJvbGl6ZScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwLjYyNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbmg0IHtcbiAgZm9udC1mYW1pbHk6ICdFbGVjdHJvbGl6ZScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgbWFyZ2luLXRvcDogMC43ZW07XG4gIG1hcmdpbi1ib3R0b206IDAuN2VtO1xuICBmb250LXdlaWdodDogNDAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzQyNDI0MjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuaDUge1xuICBmb250LWZhbWlseTogJ0VsZWN0cm9saXplJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAwLjlyZW07XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBtYXJnaW4tdG9wOiAwLjc1ZW07XG4gIG1hcmdpbi1ib3R0b206IDAuNzVlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbnAge1xuICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuMjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjg3NXJlbTtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbn1cbmEge1xuICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuMjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjg3NXJlbTtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSkge1xuICBoMSB7XG4gICAgZm9udC1mYW1pbHk6ICdFbGVjdHJvbGl6ZScsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAzLjhyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgICBtYXJnaW4tdG9wOiAwLjFlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjFlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIH1cbiAgaDIge1xuICAgIGZvbnQtZmFtaWx5OiAnRWxlY3Ryb2xpemUnLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMi4zNzVyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICBtYXJnaW4tdG9wOiAxLjI1cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgfVxuICBoMyB7XG4gICAgZm9udC1mYW1pbHk6ICdFbGVjdHJvbGl6ZScsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxLjg3NXJlbTtcbiAgICBsaW5lLWhlaWdodDogMi43NXJlbTtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgfVxuICBoNCB7XG4gICAgZm9udC1mYW1pbHk6ICdFbGVjdHJvbGl6ZScsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgbWFyZ2luLXRvcDogMC43ZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC43ZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjNDI0MjQyO1xuICB9XG4gIGg1IHtcbiAgICBmb250LWZhbWlseTogJ0VsZWN0cm9saXplJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDAuOXJlbTtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBtYXJnaW4tdG9wOiAwLjc1ZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC43NWVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgfVxuICBwIHtcbiAgICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICBsaW5lLWhlaWdodDogMS44NzVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgfVxuICBhIHtcbiAgICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICBsaW5lLWhlaWdodDogMS44NzVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgfVxufVxuLypcbiAgICogRGVmYXVsdCBzZXR0aW5nczpcbiAgICovXG4vKlxuICAgKiBCcmVha3BvaW50IHNldHVwOlxuICAgKi9cbmJvZHkge1xuICBjb2xvcjogIzMzMztcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cbjo6LW1vei1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjZTExMDEwO1xuICBjb2xvcjogI2ZmZjtcbiAgZmlsbDogI2ZmZjtcbn1cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogI2UxMTAxMDtcbiAgY29sb3I6ICNmZmY7XG4gIGZpbGw6ICNmZmY7XG59XG5hIHtcbiAgY29sb3I6ICMzMzM7XG59XG5hOnZpc2l0ZWQge1xuICBjb2xvcjogIzMzMztcbn1cbmE6aG92ZXIsXG5hOnZpc2l0ZWQ6aG92ZXIge1xuICBjb2xvcjogI2UxMTAxMDtcbn1cbmE6YWN0aXZlIHtcbiAgY29sb3I6ICM2YTAwMDA7XG59XG5hOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgY29sb3I6ICNlMTEwMTA7XG59XG5wIGNvZGUge1xuICBjb2xvcjogIzMzMztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmNztcbn1cbnByZSB7XG4gIGNvbG9yOiAjMzMzO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y3O1xufVxuLmNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y3O1xufVxuLmNvbnRlbnRfX2NvbnRhaW5lcixcbi5jb250ZW50X19jb250YWluZXItLWV4cGFuZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG4uaW5mb3JtYXRpb25hbCB7XG4gIGNvbG9yOiAjYmJiO1xufVxuLyogSW1hZ2VzIHNvIGFzc3VtZSB3aGl0ZSB0ZXh0IGlzIHJlcXVpcmVkICovXG4uaGVybyBoMSxcbi5oZXJvIGgyLFxuLmhlcm8gaDMsXG4uaGVybyBoNCxcbi5oZXJvIGg1LFxuLmhlcm8gcCxcbi5oZXJvIGNvZGUge1xuICBjb2xvcjogI2ZmZjtcbn1cbi8qXG4gKiBVSSBjb21wb25lbnRzOlxuICpcbiAqIEVhY2ggVUkgY29tcG9uZW50IGlzIGVuY2Fwc3VsYXRlZCB3aXRoaW4gYSBzZXR1cCBmdW5jdGlvbiB3aGljaCB0YWtlcyBhblxuICogb3BpdGlvbmFsIHNldHRpbmdzIGhhc2guIElmIG9taXR0ZWQgdGhlIGRlZmF1bHQgc2V0dGluZ3MgYXZhaWxhYmxlIGluIHRoZVxuICogcmVzcGVjdGl2ZSBjb21wb25lbnQgZmlsZSBhcmUgdXNlZC4gVGhpcyBhbGxvd3MgYSAodGhlbWUpIGRldmVsb3BlciB0b1xuICogY3VzdG9taXplIGNvbXBvbmVudHMgZm9yIHRoZWlyIG93biBzaWZ0cyBhbmQgcHJvamVjdHMuXG4gKi9cbi5hbmltYXRlLW9wYWNpdHkge1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IGVhc2UtaW4gNDAwbXM7XG59XG4uZmFkZS1pbiB7XG4gIGFuaW1hdGlvbjogZmFkZWluIDQwMG1zIGVhc2UtaW4gMHMgMSBub3JtYWwgYm90aDtcbn1cbi5kZWxheSB7XG4gIGFuaW1hdGlvbi1kZWxheTogNDAwbXM7XG59XG5Aa2V5ZnJhbWVzIGZhZGVpbiB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cbi8qIEZJWFhNRTogcmVmYWN0b3IgaW50byBjb21wb25lbnRzISAqL1xuLnN2Zy1jZW50ZXIteCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIHBhZGRpbmctbGVmdDogNTAlO1xufVxuLnN2Zy1wYWRkaW5nLXRvcCB7XG4gIHBhZGRpbmctdG9wOiAxZW07XG59XG4uc3ZnLXBhZGRpbmctbGVmdCB7XG4gIHBhZGRpbmctbGVmdDogMWVtO1xufVxuLnJldXNhYmxlIHBhdGgge1xuICBmaWxsOiBub25lO1xuICBzdHJva2U6ICMwMDA7XG4gIHN0cm9rZS13aWR0aDogMS41cHg7XG4gIHN0cm9rZS1saW5lY2FwOiByb3VuZDtcbiAgc3Ryb2tlLWxpbmVqb2luOiByb3VuZDtcbn1cbi5yZXVzYWJsZSBwYXRoLmJnc3Ryb2tlIHtcbiAgc3Ryb2tlOiAjZmZmO1xuICBzdHJva2Utd2lkdGg6IDNweDtcbn1cbi8qXG4gICAqIERlZmF1bHQgc2V0dGluZ3M6XG4gICAqL1xuaW5wdXRbdHlwZT1cInRleHRcIl0sXG5pbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sXG5pbnB1dFt0eXBlPVwiZW1haWxcIl0sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxuaW5wdXRbdHlwZT1cInRlbFwiXSxcbmlucHV0W3R5cGU9XCJ1cmxcIl0sXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG1pbi1oZWlnaHQ6IDIuNzVlbTtcbiAgcGFkZGluZy10b3A6IDAuNWVtO1xuICBwYWRkaW5nLWJvdHRvbTogMC41ZW07XG4gIHBhZGRpbmctbGVmdDogMC41ZW07XG4gIHBhZGRpbmctcmlnaHQ6IDAuNWVtO1xuICBjb2xvcjogIzMzMztcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2Q4ZDhkODtcbiAgb3V0bGluZTogbm9uZTtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuaW5wdXRbdHlwZT1cInRleHRcIl06ZGlzYWJsZWQsXG5pbnB1dFt0eXBlPVwicGFzc3dvcmRcIl06ZGlzYWJsZWQsXG5pbnB1dFt0eXBlPVwiZW1haWxcIl06ZGlzYWJsZWQsXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOmRpc2FibGVkLFxuaW5wdXRbdHlwZT1cInRlbFwiXTpkaXNhYmxlZCxcbmlucHV0W3R5cGU9XCJ1cmxcIl06ZGlzYWJsZWQsXG5zZWxlY3Q6ZGlzYWJsZWQsXG50ZXh0YXJlYTpkaXNhYmxlZCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnQoMTI1ZGVnLCB0cmFuc3BhcmVudCwgdHJhbnNwYXJlbnQgMnB4LCAjZjFmMWYxIDJweCwgI2YxZjFmMSAzcHgsIHRyYW5zcGFyZW50IDNweCwgdHJhbnNwYXJlbnQgNXB4LCAjZjFmMWYxIDVweCk7XG59XG4vKlxuICAgKiBEZWZhdWx0IHNldHRpbmdzOlxuICAgKi9cbmJ1dHRvbiB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbmJ1dHRvbiB7XG4gIHBhZGRpbmctdG9wOiAwLjc1ZW07XG4gIHBhZGRpbmctYm90dG9tOiAwLjc1ZW07XG4gIHBhZGRpbmctbGVmdDogMS45Mzc1ZW07XG4gIHBhZGRpbmctcmlnaHQ6IDEuOTM3NWVtO1xuICBjb2xvcjogI2UxMTAxMDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMTEwMTA7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbn1cbmJ1dHRvbjpob3ZlciB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjZTExMDEwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTExMDEwO1xufVxuYnV0dG9uOmFjdGl2ZSB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjNmEwMDAwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjNmEwMDAwO1xufVxuYnV0dG9uOmRpc2FibGVkIHtcbiAgY29sb3I6ICM3ZjdmN2Y7XG4gIGJhY2tncm91bmQ6ICNjYWNhY2E7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjYWNhY2E7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cbmJ1dHRvbjpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5idXR0b24ucnMtYnRuLS1zbWFsbCB7XG4gIHBhZGRpbmctdG9wOiAwLjVlbTtcbiAgcGFkZGluZy1ib3R0b206IDAuNWVtO1xuICBwYWRkaW5nLWxlZnQ6IDAuNWVtO1xuICBwYWRkaW5nLXJpZ2h0OiAwLjVlbTtcbn1cbmJ1dHRvbi5ycy1idG4tLXNlbGVjdGVkIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICNlMTEwMTA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMTEwMTA7XG59XG5idXR0b24ucnMtYnRuLS1zZWxlY3RlZDpob3ZlciB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjNmEwMDAwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjNmEwMDAwO1xufVxuYnV0dG9uLnJzLWJ0bi0tc2VsZWN0ZWQ6YWN0aXZlIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICNlMTEwMTA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMTEwMTA7XG59XG5idXR0b24ucnMtYnRuLS1zZWxlY3RlZDpob3ZlcjpkaXNhYmxlZCB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjZTExMDEwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTExMDEwO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG4vKiBTdHlsaW5nIHRoZSBiYXNlIGJ1dHRvbiB3aWxsIGlzIGltcGxpY2l0bHkgYXBwbHlpbmcgdGhlIHN0eWxlcyB0byB0aGUgJ2JlbScgYnV0dG9ucyAqL1xucCBidXR0b24ge1xuICBtYXJnaW46IDAuNjI1cmVtO1xuICBsaW5lLWhlaWdodDogMTtcbn1cbnAgYnV0dG9uLnJzLWJ0bi0tc21hbGwge1xuICBtYXJnaW46IDAuMzc1cmVtO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OGVtKSB7XG4gIHAgYnV0dG9uIHtcbiAgICBtYXJnaW46IDAuNjI1cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICB9XG4gIHAgYnV0dG9uLnJzLWJ0bi0tc21hbGwge1xuICAgIG1hcmdpbjogMC4zNzVyZW07XG4gIH1cbn1cbi5ycy1idG4tLXJlZCB7XG4gIHBhZGRpbmctdG9wOiAwLjc1ZW07XG4gIHBhZGRpbmctYm90dG9tOiAwLjc1ZW07XG4gIHBhZGRpbmctbGVmdDogMS45Mzc1ZW07XG4gIHBhZGRpbmctcmlnaHQ6IDEuOTM3NWVtO1xuICBjb2xvcjogI2UxMTAxMDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMTEwMTA7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbn1cbi5ycy1idG4tLXJlZDpob3ZlciB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjZTExMDEwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTExMDEwO1xufVxuLnJzLWJ0bi0tcmVkOmFjdGl2ZSB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjNmEwMDAwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjNmEwMDAwO1xufVxuLnJzLWJ0bi0tcmVkOmRpc2FibGVkIHtcbiAgY29sb3I6ICM3ZjdmN2Y7XG4gIGJhY2tncm91bmQ6ICNjYWNhY2E7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjYWNhY2E7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cbi5ycy1idG4tLXJlZDpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG4ucnMtYnRuLS1yZWQucnMtYnRuLS1zZWxlY3RlZCB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjZTExMDEwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTExMDEwO1xufVxuLnJzLWJ0bi0tcmVkLnJzLWJ0bi0tc2VsZWN0ZWQ6aG92ZXIge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzZhMDAwMDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzZhMDAwMDtcbn1cbi5ycy1idG4tLXJlZC5ycy1idG4tLXNlbGVjdGVkOmFjdGl2ZSB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjZTExMDEwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTExMDEwO1xufVxuLnJzLWJ0bi0tcmVkLnJzLWJ0bi0tc2VsZWN0ZWQ6aG92ZXI6ZGlzYWJsZWQge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogI2UxMTAxMDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2UxMTAxMDtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuLnJzLWJ0bi0tc21hbGwge1xuICBwYWRkaW5nLXRvcDogMC41ZW07XG4gIHBhZGRpbmctYm90dG9tOiAwLjVlbTtcbiAgcGFkZGluZy1sZWZ0OiAwLjVlbTtcbiAgcGFkZGluZy1yaWdodDogMC41ZW07XG59XG4ucnMtYnRuLS1ncmVlbiB7XG4gIHBhZGRpbmctdG9wOiAwLjc1ZW07XG4gIHBhZGRpbmctYm90dG9tOiAwLjc1ZW07XG4gIHBhZGRpbmctbGVmdDogMS45Mzc1ZW07XG4gIHBhZGRpbmctcmlnaHQ6IDEuOTM3NWVtO1xuICBjb2xvcjogIzBhYjkzYTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwYWI5M2E7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbn1cbi5ycy1idG4tLWdyZWVuOmhvdmVyIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMwYWI5M2E7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwYWI5M2E7XG59XG4ucnMtYnRuLS1ncmVlbjphY3RpdmUge1xuICBvdXRsaW5lOiBub25lO1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzA4NzkyNztcbiAgYm9yZGVyOiAxcHggc29saWQgIzA4NzkyNztcbn1cbi5ycy1idG4tLWdyZWVuOmRpc2FibGVkIHtcbiAgY29sb3I6ICM3ZjdmN2Y7XG4gIGJhY2tncm91bmQ6ICNjYWNhY2E7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjYWNhY2E7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cbi5ycy1idG4tLWdyZWVuOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cbi5ycy1idG4tLWdyZWVuLnJzLWJ0bi0tc2VsZWN0ZWQge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzBhYjkzYTtcbiAgYm9yZGVyOiAxcHggc29saWQgIzBhYjkzYTtcbn1cbi5ycy1idG4tLWdyZWVuLnJzLWJ0bi0tc2VsZWN0ZWQ6aG92ZXIge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzA4NzkyNztcbiAgYm9yZGVyOiAxcHggc29saWQgIzA4NzkyNztcbn1cbi5ycy1idG4tLWdyZWVuLnJzLWJ0bi0tc2VsZWN0ZWQ6YWN0aXZlIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMwYWI5M2E7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwYWI5M2E7XG59XG4ucnMtYnRuLS1ncmVlbi5ycy1idG4tLXNlbGVjdGVkOmhvdmVyOmRpc2FibGVkIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMwYWI5M2E7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwYWI5M2E7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cbi5ycy1idG4tLXNtYWxsIHtcbiAgcGFkZGluZy10b3A6IDAuNWVtO1xuICBwYWRkaW5nLWJvdHRvbTogMC41ZW07XG4gIHBhZGRpbmctbGVmdDogMC41ZW07XG4gIHBhZGRpbmctcmlnaHQ6IDAuNWVtO1xufVxuLnJzLWJ0bi0tYmx1ZSB7XG4gIHBhZGRpbmctdG9wOiAwLjc1ZW07XG4gIHBhZGRpbmctYm90dG9tOiAwLjc1ZW07XG4gIHBhZGRpbmctbGVmdDogMS45Mzc1ZW07XG4gIHBhZGRpbmctcmlnaHQ6IDEuOTM3NWVtO1xuICBjb2xvcjogIzE2NzFmNDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMxNjcxZjQ7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbn1cbi5ycy1idG4tLWJsdWU6aG92ZXIge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzE2NzFmNDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzE2NzFmNDtcbn1cbi5ycy1idG4tLWJsdWU6YWN0aXZlIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMwYjQ5YTI7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwYjQ5YTI7XG59XG4ucnMtYnRuLS1ibHVlOmRpc2FibGVkIHtcbiAgY29sb3I6ICM3ZjdmN2Y7XG4gIGJhY2tncm91bmQ6ICNjYWNhY2E7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjYWNhY2E7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cbi5ycy1idG4tLWJsdWU6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuLnJzLWJ0bi0tYmx1ZS5ycy1idG4tLXNlbGVjdGVkIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMxNjcxZjQ7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMxNjcxZjQ7XG59XG4ucnMtYnRuLS1ibHVlLnJzLWJ0bi0tc2VsZWN0ZWQ6aG92ZXIge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzBiNDlhMjtcbiAgYm9yZGVyOiAxcHggc29saWQgIzBiNDlhMjtcbn1cbi5ycy1idG4tLWJsdWUucnMtYnRuLS1zZWxlY3RlZDphY3RpdmUge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzE2NzFmNDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzE2NzFmNDtcbn1cbi5ycy1idG4tLWJsdWUucnMtYnRuLS1zZWxlY3RlZDpob3ZlcjpkaXNhYmxlZCB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMTY3MWY0O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMTY3MWY0O1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG4ucnMtYnRuLS1zbWFsbCB7XG4gIHBhZGRpbmctdG9wOiAwLjVlbTtcbiAgcGFkZGluZy1ib3R0b206IDAuNWVtO1xuICBwYWRkaW5nLWxlZnQ6IDAuNWVtO1xuICBwYWRkaW5nLXJpZ2h0OiAwLjVlbTtcbn1cbi5ycy1idG4tLWJsYWNrIHtcbiAgcGFkZGluZy10b3A6IDAuNzVlbTtcbiAgcGFkZGluZy1ib3R0b206IDAuNzVlbTtcbiAgcGFkZGluZy1sZWZ0OiAxLjkzNzVlbTtcbiAgcGFkZGluZy1yaWdodDogMS45Mzc1ZW07XG4gIGNvbG9yOiAjMDAwO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzAwMDtcbiAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuLnJzLWJ0bi0tYmxhY2s6aG92ZXIge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzBhYjkzYTtcbiAgYm9yZGVyOiAxcHggc29saWQgIzBhYjkzYTtcbn1cbi5ycy1idG4tLWJsYWNrOmFjdGl2ZSB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMDg3OTI3O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDg3OTI3O1xufVxuLnJzLWJ0bi0tYmxhY2s6ZGlzYWJsZWQge1xuICBjb2xvcjogIzdmN2Y3ZjtcbiAgYmFja2dyb3VuZDogI2NhY2FjYTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NhY2FjYTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuLnJzLWJ0bi0tYmxhY2s6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuLnJzLWJ0bi0tYmxhY2sucnMtYnRuLS1zZWxlY3RlZCB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMGFiOTNhO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMGFiOTNhO1xufVxuLnJzLWJ0bi0tYmxhY2sucnMtYnRuLS1zZWxlY3RlZDpob3ZlciB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMDg3OTI3O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDg3OTI3O1xufVxuLnJzLWJ0bi0tYmxhY2sucnMtYnRuLS1zZWxlY3RlZDphY3RpdmUge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzBhYjkzYTtcbiAgYm9yZGVyOiAxcHggc29saWQgIzBhYjkzYTtcbn1cbi5ycy1idG4tLWJsYWNrLnJzLWJ0bi0tc2VsZWN0ZWQ6aG92ZXI6ZGlzYWJsZWQge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzBhYjkzYTtcbiAgYm9yZGVyOiAxcHggc29saWQgIzBhYjkzYTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuLnJzLWJ0bi0tc21hbGwge1xuICBwYWRkaW5nLXRvcDogMC41ZW07XG4gIHBhZGRpbmctYm90dG9tOiAwLjVlbTtcbiAgcGFkZGluZy1sZWZ0OiAwLjVlbTtcbiAgcGFkZGluZy1yaWdodDogMC41ZW07XG59XG4uaGVybyBidXR0b24uZGFuZ2VyLFxuYnV0dG9uLmRhbmdlciB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTExMDEwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTExMDEwO1xufVxuLmhlcm8gYnV0dG9uLmRhbmdlcjpob3ZlcixcbmJ1dHRvbi5kYW5nZXI6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTExMDEwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTExMDEwO1xufVxuLmhlcm8gYnV0dG9uLmRhbmdlcjphY3RpdmUsXG5idXR0b24uZGFuZ2VyOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM2YTAwMDA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM2YTAwMDA7XG59XG4uaGVybyBidXR0b24uZGFuZ2VyOmRpc2FibGVkLFxuYnV0dG9uLmRhbmdlcjpkaXNhYmxlZCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnQoMTI1ZGVnLCB0cmFuc3BhcmVudCwgdHJhbnNwYXJlbnQgMnB4LCByZ2JhKDAsMCwwLDAuMikgMnB4LCByZ2JhKDAsMCwwLDAuMikgM3B4LCB0cmFuc3BhcmVudCAzcHgsIHRyYW5zcGFyZW50IDVweCwgcmdiYSgwLDAsMCwwLjIpIDVweCk7XG59XG4uaGVybyBidXR0b24uZGFuZ2VyOmRpc2FibGVkOmhvdmVyLFxuYnV0dG9uLmRhbmdlcjpkaXNhYmxlZDpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMTEwMTA7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnQoMTI1ZGVnLCB0cmFuc3BhcmVudCwgdHJhbnNwYXJlbnQgMnB4LCByZ2JhKDAsMCwwLDAuMikgMnB4LCByZ2JhKDAsMCwwLDAuMikgM3B4LCB0cmFuc3BhcmVudCAzcHgsIHRyYW5zcGFyZW50IDVweCwgcmdiYSgwLDAsMCwwLjIpIDVweCk7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMTEwMTA7XG59XG4uaGVybyBidXR0b24uZGFuZ2VyOmZvY3VzLFxuYnV0dG9uLmRhbmdlcjpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG4uaGVybyBidXR0b24ge1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiAxLjJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDFweCAjZmZmO1xufVxuLmhlcm8gYnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm94LXNoYWRvdzogMCAwIDAgMXB4ICNlMTEwMTA7XG59XG4uaGVybyBidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LDApO1xufVxuLmhlcm8gYnV0dG9uOmRpc2FibGVkIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogcmVwZWF0aW5nLWxpbmVhci1ncmFkaWVudCgxMjVkZWcsIHRyYW5zcGFyZW50LCB0cmFuc3BhcmVudCAycHgsIHJnYmEoMjU1LDI1NSwyNTUsMC4zKSAycHgsIHJnYmEoMjU1LDI1NSwyNTUsMC4zKSAzcHgsIHRyYW5zcGFyZW50IDNweCwgdHJhbnNwYXJlbnQgNXB4LCByZ2JhKDI1NSwyNTUsMjU1LDAuMykgNXB4KTtcbn1cbi5oZXJvIGJ1dHRvbjpkaXNhYmxlZDpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBiYWNrZ3JvdW5kLWltYWdlOiByZXBlYXRpbmctbGluZWFyLWdyYWRpZW50KDEyNWRlZywgdHJhbnNwYXJlbnQsIHRyYW5zcGFyZW50IDJweCwgcmdiYSgyNTUsMjU1LDI1NSwwLjMpIDJweCwgcmdiYSgyNTUsMjU1LDI1NSwwLjMpIDNweCwgdHJhbnNwYXJlbnQgM3B4LCB0cmFuc3BhcmVudCA1cHgsIHJnYmEoMjU1LDI1NSwyNTUsMC4zKSA1cHgpO1xufVxuLmhlcm8gYnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cbi5ycy1pY29uLWJ0biB7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgLW1zLWZsZXg6IDAgYXV0bztcbiAgZmxleDogMCBhdXRvO1xuICBtaW4td2lkdGg6IDE4MHB4O1xuICBjb2xvcjogIzAwMDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzAwMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbn1cbi5ycy1pY29uLWJ0bjpob3ZlciB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMGFiOTNhO1xufVxuLnJzLWljb24tYnRuOmFjdGl2ZSB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMDg3OTI3O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDg3OTI3O1xufVxuLnJzLWljb24tYnRuOmRpc2FibGVkIHtcbiAgY29sb3I6ICM3ZjdmN2Y7XG4gIGJhY2tncm91bmQ6ICNjYWNhY2E7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjYWNhY2E7XG59XG4ucnMtaWNvbi1idG46Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuLnJzLWljb24tYnRuX19pY29uIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxLjg3NWVtO1xuICBoZWlnaHQ6IDEuODc1ZW07XG4gIC1tcy1mbGV4OiAwIDAgNTBweDtcbiAgZmxleDogMCAwIDUwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG4ucnMtaWNvbi1idG5fX2xhYmVsIHtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBhZGRpbmctbGVmdDogMWVtO1xuICAtbXMtZmxleC1wYWNrOiBzdGFydDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtbXMtZmxleDogMTtcbiAgZmxleDogMTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMjAwbXMgZWFzZTtcbn1cbi5ycy1pY29uLWJ0bl9fbGFiZWw6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjMGFiOTNhO1xufVxuLnJzLWljb24tYnRuX19pY29uX193cmFwcGVyIHtcbiAgd2lkdGg6IDIuNWVtO1xuICBoZWlnaHQ6IDIuNWVtO1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjMDAwO1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cbi5ycy1kYW5nZXItYnRuIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAyMjBweDtcbiAgcGFkZGluZy1yaWdodDogMzBweDtcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTExMDEwO1xuICBmb250LWZhbWlseTogRWxlY3Ryb2xpemUsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAycHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjZmZmO1xuICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZTtcbn1cbi5ycy1kYW5nZXItYnRuOmhvdmVyLFxuLnJzLWRhbmdlci1idG46dmlzaXRlZCxcbi5ycy1kYW5nZXItYnRuOnZpc2l0ZWQ6aG92ZXIge1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2FhMGMwYztcbiAgY29sb3I6ICNmZmY7XG59XG4vKlxuICAgKiBEZWZhdWx0IHNldHRpbmdzOlxuICAgKi9cbi8qXG4gICAqIEJyZWFrcG9pbnQgc2V0dXA6XG4gICAqL1xuaW5wdXRbdHlwZT0ncmFuZ2UnXSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3JkZXI6IHNvbGlkIDAuNWVtIHRyYW5zcGFyZW50O1xuICBwYWRkaW5nOiAwO1xuICB3aWR0aDogMTVlbTtcbiAgaGVpZ2h0OiAyZW07XG4gIGJvcmRlci1yYWRpdXM6IDAuMjVlbTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5pbnB1dFt0eXBlPSdyYW5nZSddLFxuaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2ssXG5pbnB1dFt0eXBlPSdyYW5nZSddOjotd2Via2l0LXNsaWRlci10aHVtYiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cbmlucHV0W3R5cGU9J3JhbmdlJ106Oi1tcy10cmFjayB7XG4gIHdpZHRoOiAxMDAlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5pbnB1dFt0eXBlPSdyYW5nZSddOjotd2Via2l0LXNsaWRlci1ydW5uYWJsZS10cmFjayB7XG4gIHdpZHRoOiAxNWVtO1xuICBoZWlnaHQ6IDAuNWVtO1xuICBib3JkZXItcmFkaXVzOiAwLjI1ZW07XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjZTExMDEwLCAjZTExMDEwKSBuby1yZXBlYXQgI2NhY2FjYTtcbiAgYmFja2dyb3VuZC1zaXplOiAwJSAxMDAlO1xufVxuaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LXdlYmtpdC1zbGlkZXItdGh1bWIge1xuICBtYXJnaW4tdG9wOiAtMC4yNWVtO1xuICBib3JkZXI6IG5vbmU7XG4gIHdpZHRoOiAxZW07XG4gIGhlaWdodDogMWVtO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJveC1zaGFkb3c6IDAgMCAwLjEyNWVtICMzMzM7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59XG5pbnB1dFt0eXBlPSdyYW5nZSddOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm94LXNoYWRvdzogMCAwIDFweCAjZTExMDEwO1xufVxuaW5wdXRbdHlwZT0ncmFuZ2UnXS5wcm9ncmVzcyB7XG4gIGN1cnNvcjogaW5pdGlhbDtcbn1cbmlucHV0W3R5cGU9J3JhbmdlJ10ucHJvZ3Jlc3M6Oi13ZWJraXQtc2xpZGVyLXRodW1iIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbmlucHV0W3R5cGU9J3JhbmdlJ10ucHJvZ3Jlc3M6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xuICBib3gtc2hhZG93OiBub25lO1xufVxuaW5wdXRbdHlwZT0ncmFuZ2UnXS5hbmltYXRlZDo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2sge1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLXNpemUgNDAwbXMgZWFzZS1pbjtcbn1cbi8qXG4gICAqIERlZmF1bHQgc2V0dGluZ3M6XG4gICAqL1xuLypcbiAgICogQnJlYWtwb2ludCBzZXR1cDpcbiAgICovXG4uZG93bi1hcnJvdyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMjBweDtcbiAgaGVpZ2h0OiAzMHB4O1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBwYWRkaW5nOiAxZW07XG4gIGZsb2F0OiBub25lO1xuICBjbGVhcjogbm9uZTtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvaWNvbnMvZG93bi1hcnJvdy13aGl0ZS0xLjAuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDMwcHggMjBweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgb3BhY2l0eTogMC42O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMzNSwgMS4xNTUpIDQwMG1zO1xufVxuLmRvd24tYXJyb3c6aG92ZXIge1xuICBvcGFjaXR5OiAxO1xufVxuLypcbiAgICogRGVmYXVsdCBzZXR0aW5nczpcbiAgICovXG4vKlxuICAgKiBCcmVha3BvaW50IHNldHVwOlxuICAgKi9cbi5zdHlsZS1zd2l0Y2hlciB7XG4gIHotaW5kZXg6IDEwMDA7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC1wYWNrOiBlbmQ7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgcmlnaHQ6IDA7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgcGFkZGluZzogMC44ZW07XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwwLDAsMC45KTtcbn1cbi5zdHlsZS1zd2l0Y2hlciBidXR0b24ge1xuICBtYXJnaW4tcmlnaHQ6IDFlbTtcbn1cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltNXZjbTFoYkdsNlpTNWpjM01pTENKcGJtUmxlQzVwYlhCdmNuUXVjM1I1YkNJc0luVnBMWEp6TFdOdmNtVXVZM056SWl3aWMzUjViR1Z6TDJOdmJXMXZiaTl5WlhObGRDNXBiWEJ2Y25RdWMzUjViQ0lzSW5OMGVXeGxjeTlqYjIxdGIyNHZjR0YwZEdWeWJuTXVhVzF3YjNKMExuTjBlV3dpTENKemRIbHNaWE12WTI5dGJXOXVMMkZ1YVcxaGRHbHZiaTVwYlhCdmNuUXVjM1I1YkNJc0luTjBlV3hsY3k5amIyMXRiMjR2WW1GelpTNXBiWEJ2Y25RdWMzUjViQ0lzSW5OMGVXeGxjeTlqYjIxdGIyNHZhV052Ym5NdWFXMXdiM0owTG5OMGVXd2lMQ0p6ZEhsc1pYTXZZMjl0Ylc5dUwyWnZiblJ6TG1sdGNHOXlkQzV6ZEhsc0lpd2ljM1I1YkdWekwyeHBZaTlqWVhKa2N5NXBiWEJ2Y25RdWMzUjViQ0lzSW5OMGVXeGxjeTlqYjIxdGIyNHZkSGx3WlhNdWFXMXdiM0owTG5OMGVXd2lMQ0p6ZEhsc1pYTXZiR2xpTDNSNWNHVXVhVzF3YjNKMExuTjBlV3dpTENKemRIbHNaWE12YkdsaUwzSjFjSFIxY21VdWFXMXdiM0owTG5OMGVXd2lMQ0p6ZEhsc1pYTXZZMjl0Y0c5dVpXNTBjeTlqYjJ4dmRYSXVhVzF3YjNKMExuTjBlV3dpTENKemRIbHNaWE12WTI5dGNHOXVaVzUwY3k5a015NXBiWEJ2Y25RdWMzUjViQ0lzSW5OMGVXeGxjeTlqYjIxd2IyNWxiblJ6TDJsdWNIVjBjeTVwYlhCdmNuUXVjM1I1YkNJc0luTjBlV3hsY3k5amIyMXdiMjVsYm5SekwySjFkSFJ2Ym5NdWFXMXdiM0owTG5OMGVXd2lMQ0p6ZEhsc1pYTXZiR2xpTDJKMWRIUnZiaTVwYlhCdmNuUXVjM1I1YkNJc0luTjBlV3hsY3k5amIyMXdiMjVsYm5SekwybGpiMjR0WW5WMGRHOXVjeTVwYlhCdmNuUXVjM1I1YkNJc0luTjBlV3hsY3k5amIyMXdiMjVsYm5SekwyUmhibWRsY2kxaWRYUjBiMjV6TG1sdGNHOXlkQzV6ZEhsc0lpd2ljM1I1YkdWekwyTnZiWEJ2Ym1WdWRITXZjMnhwWkdWeWN5NXBiWEJ2Y25RdWMzUjViQ0lzSW5OMGVXeGxjeTlqYjIxd2IyNWxiblJ6TDNkcFpHZGxkSE11YVcxd2IzSjBMbk4wZVd3aUxDSnpkSGxzWlhNdlkyOXRjRzl1Wlc1MGN5OXpkSGxzWlMxemQybDBZMmhsY2k1cGJYQnZjblF1YzNSNWJDSmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3cwUlVGQlFUczdRVUZGUVRzN096dEhRVWxCT3p0QlFVVkJPMFZCUTBFc2QwSkJRVUVzUTBGQlFTeFBRVUZCTzBWQlEwRXNhMEpCUVVFc1EwRkJRU3hQUVVGQk8wVkJRMEVzTWtKQlFVRXNRMEZCUVN4UFFVRkJPMFZCUTBFc0swSkJRVUVzUTBGQlFTeFBRVUZCTzBOQlEwRTdPMEZCUlVFN08wZEJSVUU3TzBGQlJVRTdSVUZEUVN4VlFVRkJPME5CUTBFN08wRkJSVUU3WjBaQlEwRTdPMEZCUlVFN096czdSMEZKUVRzN1FVRkZRVHM3T3pzN096czdPenM3VlVGWFFTeFBRVUZCTzBWQlEwRXNaVUZCUVR0RFFVTkJPenRCUVVWQk96dEhRVVZCT3p0QlFVVkJPenM3TzBWQlNVRXNjMEpCUVVFN1EwRkRRVHM3UVVGRlFUczdSMEZGUVRzN1FVRkZRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeFZRVUZCTzBOQlEwRTdPMEZCUlVFN08wZEJSVUU3TzBGQlJVRTdSVUZEUVN4NVFrRkJRVHREUVVOQk96dEJRVVZCT3pzN1IwRkhRVHM3UVVGRlFUczdSVUZGUVN4alFVRkJPME5CUTBFN08wRkJSVUU3WjBaQlEwRTdPMEZCUlVFN096dEhRVWRCT3p0QlFVVkJPMFZCUTBFc09FSkJRVUVzUTBGQlFTeFBRVUZCTzBWQlEwRXNjME5CUVVFc1EwRkJRU3hQUVVGQk8wTkJRMEU3TzBGQlJVRTdPenRIUVVkQk96dEJRVVZCT3p0RlFVVkJMR2xDUVVGQk8wTkJRMEU3TzBGQlJVRTdaMFpCUTBFN08wRkJSVUU3T3p0SFFVZEJPenRCUVVWQk8wVkJRMEVzYjBKQlFVRXNRMEZCUVN4UFFVRkJPMFZCUTBFc01rSkJRVUVzUTBGQlFTeFBRVUZCTzBWQlEwRXNhME5CUVVFc1EwRkJRU3hQUVVGQk8wTkJRMEU3TzBGQlJVRTdPMGRCUlVFN08wRkJSVUU3TzBWQlJVRXNjVUpCUVVFN1EwRkRRVHM3UVVGRlFUczdSMEZGUVRzN1FVRkZRVHM3UlVGRlFTeHZRa0ZCUVR0RFFVTkJPenRCUVVWQk96dEhRVVZCT3p0QlFVVkJPMFZCUTBFc2JVSkJRVUU3UTBGRFFUczdRVUZGUVRzN08wZEJSMEU3TzBGQlJVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc2FVSkJRVUU3UTBGRFFUczdRVUZGUVRzN1IwRkZRVHM3UVVGRlFUdEZRVU5CTEhWQ1FVRkJPMFZCUTBFc1dVRkJRVHREUVVOQk96dEJRVVZCT3p0SFFVVkJPenRCUVVWQk8wVkJRMEVzWlVGQlFUdERRVU5CT3p0QlFVVkJPenM3UjBGSFFUczdRVUZGUVRzN1JVRkZRU3hsUVVGQk8wVkJRMEVzWlVGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc2VVSkJRVUU3UTBGRFFUczdRVUZGUVR0RlFVTkJMR2RDUVVGQk8wTkJRMEU3TzBGQlJVRTdSVUZEUVN4WlFVRkJPME5CUTBFN08wRkJSVUU3WjBaQlEwRTdPMEZCUlVFN08wZEJSVUU3TzBGQlJVRTdSVUZEUVN4dFFrRkJRVHREUVVOQk96dEJRVVZCT3p0SFFVVkJPenRCUVVWQk8wVkJRMEVzYVVKQlFVRTdRMEZEUVRzN1FVRkZRVHRuUmtGRFFUczdRVUZGUVRzN08wZEJSMEU3TzBGQlJVRTdPenM3UlVGSlFTeHJRMEZCUVN4RFFVRkJMRTlCUVVFN1JVRkRRU3hsUVVGQkxFTkJRVUVzVDBGQlFUdERRVU5CT3p0QlFVVkJPenRIUVVWQk96dEJRVVZCTzBWQlEwRXNhVUpCUVVFN1EwRkRRVHM3UVVGRlFUczdPMGRCUjBFN08wRkJSVUU3UlVGRFFTeDNRa0ZCUVN4RFFVRkJMRTlCUVVFN1JVRkRRU3hWUVVGQkxFTkJRVUVzVDBGQlFUdEZRVU5CTEd0Q1FVRkJMRU5CUVVFc1QwRkJRVHREUVVOQk96dEJRVVZCTzJkR1FVTkJPenRCUVVWQk96czdSMEZIUVRzN1FVRkZRVHM3T3pzN1JVRkxRU3hqUVVGQkxFTkJRVUVzVDBGQlFUdEZRVU5CTEZWQlFVRXNRMEZCUVN4UFFVRkJPME5CUTBFN08wRkJSVUU3TzBkQlJVRTdPMEZCUlVFN1JVRkRRU3hyUWtGQlFUdERRVU5CT3p0QlFVVkJPenM3UjBGSFFUczdRVUZGUVR0UlFVTkJMRTlCUVVFN1JVRkRRU3hyUWtGQlFUdERRVU5CT3p0QlFVVkJPenM3UjBGSFFUczdRVUZGUVR0VFFVTkJMRTlCUVVFN1JVRkRRU3h4UWtGQlFUdERRVU5CT3p0QlFVVkJPenM3TzBkQlNVRTdPMEZCUlVFN096czdSVUZKUVN3eVFrRkJRU3hEUVVGQkxFOUJRVUU3UTBGRFFUczdRVUZGUVRzN1IwRkZRVHM3UVVGRlFUczdPenRGUVVsQkxHMUNRVUZCTzBWQlEwRXNWMEZCUVR0RFFVTkJPenRCUVVWQk96dEhRVVZCT3p0QlFVVkJPenM3TzBWQlNVRXNLMEpCUVVFN1EwRkRRVHM3UVVGRlFUczdSMEZGUVRzN1FVRkZRVHRGUVVOQkxEQkNRVUZCTzBWQlEwRXNZMEZCUVR0RlFVTkJMQ3RDUVVGQk8wTkJRMEU3TzBGQlJVRTdPenM3TzBkQlMwRTdPMEZCUlVFN1JVRkRRU3gxUWtGQlFTeERRVUZCTEU5QlFVRTdSVUZEUVN4bFFVRkJMRU5CUVVFc1QwRkJRVHRGUVVOQkxHVkJRVUVzUTBGQlFTeFBRVUZCTzBWQlEwRXNaMEpCUVVFc1EwRkJRU3hQUVVGQk8wVkJRMEVzVjBGQlFTeERRVUZCTEU5QlFVRTdSVUZEUVN4dlFrRkJRU3hEUVVGQkxFOUJRVUU3UTBGRFFUczdRVUZGUVRzN1IwRkZRVHM3UVVGRlFUdEZRVU5CTEdWQlFVRTdRMEZEUVRzN1FVRkZRVHM3TzBkQlIwRTdPMEZCUlVFN08wVkJSVUVzZFVKQlFVRXNRMEZCUVN4UFFVRkJPMFZCUTBFc1YwRkJRU3hEUVVGQkxFOUJRVUU3UTBGRFFUczdRVUZGUVRzN1IwRkZRVHM3UVVGRlFUczdSVUZGUVN4aFFVRkJPME5CUTBFN08wRkJSVUU3T3p0SFFVZEJPenRCUVVWQk8wVkJRMEVzT0VKQlFVRXNRMEZCUVN4UFFVRkJPMFZCUTBFc2NVSkJRVUVzUTBGQlFTeFBRVUZCTzBOQlEwRTdPMEZCUlVFN08wZEJSVUU3TzBGQlJVRTdPMFZCUlVFc2VVSkJRVUU3UTBGRFFUczdRVUZGUVRzN1IwRkZRVHM3UVVGRlFUdEZRVU5CTEdWQlFVRTdSVUZEUVN4alFVRkJPME5CUTBFN08wRkJSVUU3T3p0SFFVZEJPenRCUVVWQk8wVkJRMEVzTWtKQlFVRXNRMEZCUVN4UFFVRkJPMFZCUTBFc1kwRkJRU3hEUVVGQkxFOUJRVUU3UTBGRFFUczdRVU55WVVFN096czdPenM3T3pzN096czdPenM3T3p0SFEzbGlSenRCUkhKaFNEczdSME4zWVVjN1FVUnVZVWc3T3pzN1IwTjNZVWM3UVVRdldrZzdPenM3UjBOdllVYzdRVU0zWWtnN1JVRkRSU3hWUVVGQk8wVkJRMEVzVjBGQlFUdEZRVU5CTEdsQ1FVRkJPME5FSzJKRU8wRkZkR05FTzBWQlEwVXNjVVJCUVVFN1JVRkRRU3d3UWtGQlFUdEZRVU5CTERCQ1FVRkJPME5HZDJORU8wRkZjbU5FTzBWQlEwVXNlVVJCUVVFN1JVRkRRU3d3UWtGQlFUdEZRVU5CTEhsQ1FVRkJPME5HZFdORU8wRkhhR1JFTzBWQlEwTXNhME5CUVVFN1EwaHJaRUU3UVVjdlkwUTdSVUZEUXl4cFJFRkJRVHREU0dsa1FUdEJSemxqUkR0RlFVTkRMSFZDUVVGQk8wTklaMlJCTzBGSE4yTm5RanRGUVVOaU8wbEJRVThzVjBGQlFUdEhTSGRsVWp0RlIzWmxRenRKUVVGUExGZEJRVUU3UjBnd1pWSTdRMEZEUmp0QlNUTm1SRHRGUVVORkxGZEJRVUU3UTBvMlprUTdRVWt4WmtRN1JVRkRSU3h0VEVGQlFUdERTalJtUkR0QlMzQm5Ra1E3UlVGRFJTeHZSMEZCUVR0RlFVTkJMRFpDUVVGQk8wVkJRMEVzYzBKQlFVRTdSVUZEUVN3MlFrRkJRVHREVEhOblFrUTdRVXR1WjBKRU8wVkJRMFVzYzBkQlFVRTdSVUZEUVN3MlFrRkJRVHRGUVVOQkxITkNRVUZCTzBWQlEwRXNOa0pCUVVFN1EweHhaMEpFTzBGTGJHZENSRHRGUVVORkxITkhRVUZCTzBWQlEwRXNOa0pCUVVFN1JVRkRRU3h6UWtGQlFUdEZRVU5CTERaQ1FVRkJPME5NYjJkQ1JEdEJTMnBuUWtRN1JVRkRSU3cwUmtGQlFUdEZRVU5CTERaQ1FVRkJPMFZCUTBFc2MwSkJRVUU3UlVGRFFTdzJRa0ZCUVR0RFRHMW5Ra1E3UVV0b1owSkVPMFZCUTBVc05FWkJRVUU3UlVGRFFTdzJRa0ZCUVR0RlFVTkJMSE5DUVVGQk8wVkJRMEVzTmtKQlFVRTdRMHhyWjBKRU8wRkxMMlpFTzBWQlEwVXNNa1pCUVVFN1JVRkRRU3cyUWtGQlFUdEZRVU5CTEhOQ1FVRkJPMFZCUTBFc05rSkJRVUU3UTB4cFowSkVPMEZMT1daRU8wVkJRMFVzTmtaQlFVRTdSVUZEUVN3MlFrRkJRVHRGUVVOQkxITkNRVUZCTzBWQlEwRXNOa0pCUVVFN1EweG5aMEpFTzBGTE4yWkVPMFZCUTBVc09FWkJRVUU3UlVGRFFTdzJRa0ZCUVR0RlFVTkJMSE5DUVVGQk8wVkJRMEVzTmtKQlFVRTdRMHdyWmtRN1FVczFaa1E3UlVGRFJTd3dSa0ZCUVR0RlFVTkJMRFpDUVVGQk8wVkJRMEVzYzBKQlFVRTdSVUZEUVN3MlFrRkJRVHREVERobVJEdEJTek5tUkR0RlFVTkZMRFpHUVVGQk8wVkJRMEVzTmtKQlFVRTdSVUZEUVN4elFrRkJRVHRGUVVOQkxEWkNRVUZCTzBOTU5tWkVPMEZMTVdaRU8wVkJRMFVzYzBkQlFVRTdSVUZEUVN3MlFrRkJRVHRGUVVOQkxITkNRVUZCTzBWQlEwRXNOa0pCUVVFN1EwdzBaa1E3UVV0NlprUTdSVUZEUlN3clJrRkJRVHRGUVVOQkxEWkNRVUZCTzBWQlEwRXNjMEpCUVVFN1JVRkRRU3cyUWtGQlFUdERUREptUkR0QlMzaG1SRHRGUVVORkxHZEhRVUZCTzBWQlEwRXNOa0pCUVVFN1JVRkRRU3h6UWtGQlFUdEZRVU5CTERaQ1FVRkJPME5NTUdaRU8wRkxkbVpFTzBWQlEwVXNhMGRCUVVFN1JVRkRRU3cyUWtGQlFUdEZRVU5CTEhOQ1FVRkJPMFZCUTBFc05rSkJRVUU3UTB4NVprUTdRVXQwWmtRN1JVRkRSU3hyUjBGQlFUdEZRVU5CTERaQ1FVRkJPMFZCUTBFc2MwSkJRVUU3UlVGRFFTdzJRa0ZCUVR0RFRIZG1SRHRCUzNKbVJEdEZRVU5GTEdsSFFVRkJPMFZCUTBFc05rSkJRVUU3UlVGRFFTeHpRa0ZCUVR0RlFVTkJMRFpDUVVGQk8wTk1kV1pFTzBGTGNHWkVPMFZCUTBVc2RVZEJRVUU3UlVGRFFTdzJRa0ZCUVR0RlFVTkJMSE5DUVVGQk8wVkJRMEVzTmtKQlFVRTdRMHh6WmtRN1FVdHVaa1E3UlVGRFJTd3JSa0ZCUVR0RlFVTkJMRFpDUVVGQk8wVkJRMEVzYzBKQlFVRTdSVUZEUVN3MlFrRkJRVHREVEhGbVJEdEJTMnhtUkR0RlFVTkZMSEZIUVVGQk8wVkJRMEVzTmtKQlFVRTdSVUZEUVN4elFrRkJRVHRGUVVOQkxEWkNRVUZCTzBOTWIyWkVPMEZMYW1aRU8wVkJRMFVzTmtaQlFVRTdSVUZEUVN3MlFrRkJRVHRGUVVOQkxITkNRVUZCTzBWQlEwRXNOa0pCUVVFN1EweHRaa1E3UVUweGJrSkVMSE5HUVVGQk8wRkJRMEVzVjBGQlFUdEJRVU5CTzBWQlEwVXNkVUpCUVVFN1JVRkRRU3h0UWtGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc2FWTkJRVUU3UTA0MGJrSkVPMEZOZW01Q1F6dEZRVU5GTEhWQ1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMR2RNUVVGQk8wVkJRMEVzTmtsQlFVRTdRMDR5YmtKSU8wRk5kbTVDUkR0RlFVTkZMREpDUVVGQk8wVkJRMEVzYlVKQlFVRTdSVUZEUVN4cFFrRkJRVHRGUVVOQkxHbFRRVUZCTzBOT2VXNUNSRHRCVFhSdVFrTTdSVUZEUlN3eVFrRkJRVHRGUVVOQkxHMUNRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3cyUzBGQlFUdEZRVU5CTERaSlFVRkJPME5PZDI1Q1NEdEJUWEJ1UWtRN1JVRkRSU3dyUWtGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc2FVSkJRVUU3UlVGRFFTd3JVMEZCUVR0RFRuTnVRa1E3UVUxd2JrSkVPMFZCUTBVc0swSkJRVUU3UlVGRFFTeHRRa0ZCUVR0RlFVTkJMR2xDUVVGQk8wVkJRMEVzTWxOQlFVRTdRMDV6YmtKRU8wRk5jRzVDUkR0RlFVTkZMQ3RDUVVGQk8wVkJRMEVzYlVKQlFVRTdSVUZEUVN4cFFrRkJRVHRGUVVOQkxEWlRRVUZCTzBOT2MyNUNSRHRCVFc1dVFrTXNaVUZCUVR0QlFVTkJPMFZCUTBVc0swSkJRVUU3UlVGRFFTeHRRa0ZCUVR0RlFVTkJMR2xDUVVGQk8wVkJRMEVzT0UxQlFVRTdSVUZEUVN3MFJrRkJRVHREVG5GdVFrZzdRVTFzYmtKRExGZEJRVUU3UVVGRFFUdEZRVU5GTEN0Q1FVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeHBRa0ZCUVR0RlFVTkJMSGxNUVVGQk8wVkJRMEVzTmtsQlFVRTdRMDV2YmtKSU8wRk5hbTVDUXl4bFFVRkJPMEZCUTBFN1JVRkRSU3dyUWtGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc2FVSkJRVUU3UlVGRFFTeHhURUZCUVR0RlFVTkJMRFJHUVVGQk8wTk9iVzVDU0R0QlRXaHVRa01zVjBGQlFUdEJRVU5CTzBWQlEwVXNLMEpCUVVFN1JVRkRRU3h0UWtGQlFUdEZRVU5CTEdsQ1FVRkJPMFZCUTBFc2NVeEJRVUU3UlVGRFFTdzJTVUZCUVR0RFRtdHVRa2c3UVUwdmJVSkRMR1ZCUVVFN1FVRkRRVHRGUVVORkxDdENRVUZCTzBWQlEwRXNiVUpCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTERSTlFVRkJPMFZCUTBFc05FWkJRVUU3UTA1cGJrSklPMEZOT1cxQ1F5eFhRVUZCTzBGQlEwRTdSVUZEUlN3clFrRkJRVHRGUVVOQkxHMUNRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3gxVEVGQlFUdEZRVU5CTERaSlFVRkJPME5PWjI1Q1NEdEJUM2gwUWtFN1JVRkRReXh4UWtGQlFUdEZRVUZCTEdOQlFVRTdSVUZEUVN4dlFrRkJRVHRGUVVGQkxHZENRVUZCTzBWQlEwRXNkMEpCUVVFN1JVRkJRU3h2UWtGQlFUdERVREIwUWtRN1FVOTJkRUpCTzBWQlNVVXNjVUpCUVVFN1JVRkJRU3hoUVVGQk8wVkJSVVFzY1VKQlFVRTdSVUZCUVN4bFFVRkJPMFZCUTBFc09FSkJRVUU3UlVGQlFTeHBRa0ZCUVR0RFVIRjBRa1E3UVZGb2RVSkRPenRMVW0xMVFrYzdRVkUxZEVKSU96dExVaXQwUWtjN1FWRjRja0pJT3p0TFVqSnlRa2M3UVZGNGNrSklPMFZCUTBVc2JVTkJRVUU3UlVGRFFTeHRRa0ZCUVR0RlFVTkJMR2xDUVVGQk8wTlNNSEpDU0R0QlVYWnlRa003UlVGRFJTeDFRMEZCUVR0RlFVTkJMR2xDUVVGQk8wTlNlWEpDU0R0QlVYUnlRa003UlVGRFF5eHBRa0ZCUVR0RFVuZHlRa1k3UVZOcWRVSkRPMFZCUTBVc01FTkJRVUU3UlVGRFFTeHZRa0ZCUVR0RFZHMTFRa2c3UVZOb2RVSkRPMFZCUTBVc2MwSkJRVUU3UTFScmRVSklPMEZUTDNSQ1F6dEZRVU5GTEZkQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxITkNRVUZCTzBWQlEwRXNiVUpCUVVFN1ExUnBkVUpJTzBGVE9YUkNRenM3UlVGRlJTeDFRa0ZCUVR0RlFVTkJMR2xDUVVGQk8wTlVaM1ZDU0R0QlV6ZDBRa003UlVGRFJTeHRRa0ZCUVR0RlFVTkJMR0ZCUVVFN1ExUXJkRUpJTzBGVE1YZENRenRGUVV0SkxIVkRRVUZCTzBWQlFVRXNaMEpCUVVFN1JVRkJRU3hwUWtGQlFUdEZRVUZCTEd0Q1FVRkJPMFZCUVVFc2NVSkJRVUU3UlVGQlFTeHBRa0ZCUVR0RlFVRkJMREJDUVVGQk8wTlVPSGRDVER0QlUyNTRRa003UlVGTFNTeDFRMEZCUVR0RlFVRkJMR3RDUVVGQk8wVkJRVUVzYVVKQlFVRTdSVUZCUVN4dlFrRkJRVHRGUVVGQkxIZENRVUZCTzBWQlFVRXNhVUpCUVVFN1JVRkJRU3d3UWtGQlFUdERWSFY0UWt3N1FWTTFlRUpETzBWQlMwa3NkVU5CUVVFN1JVRkJRU3hyUWtGQlFUdEZRVUZCTEdsQ1FVRkJPMFZCUVVFc1kwRkJRVHRGUVVGQkxIZENRVUZCTzBWQlFVRXNhVUpCUVVFN1JVRkJRU3d3UWtGQlFUdERWR2Q1UWt3N1FWTnllVUpETzBWQlMwa3NkVU5CUVVFN1JVRkJRU3huUWtGQlFUdEZRVUZCTEdsQ1FVRkJPMFZCUVVFc2EwSkJRVUU3UlVGQlFTeHhRa0ZCUVR0RlFVRkJMR2xDUVVGQk8wVkJRVUVzTUVKQlFVRTdSVUZCUVN4cFEwRkJRVHRGUVVGQkxHMUNRVUZCTzBOVU1ubENURHRCVTJoNlFrTTdSVUZMU1N4MVEwRkJRVHRGUVVGQkxHdENRVUZCTzBWQlFVRXNaVUZCUVR0RlFVRkJMRzFDUVVGQk8wVkJRVUVzYzBKQlFVRTdSVUZCUVN4cFFrRkJRVHRGUVVGQkxEQkNRVUZCTzBOVWIzcENURHRCVTNwNlFrTTdSVUZMU1N4dFEwRkJRVHRGUVVGQkxHMUNRVUZCTzBWQlFVRXNjMEpCUVVFN1JVRkJRU3hwUWtGQlFUdERWREI2UWt3N1FWTXZla0pETzBWQlMwa3NiVU5CUVVFN1JVRkJRU3h0UWtGQlFUdEZRVUZCTEhOQ1FVRkJPMFZCUVVFc2FVSkJRVUU3UTFSbk1FSk1PMEZWZW5KQ1ZUdEZSRFZKVkR0SlFVdEpMSFZEUVVGQk8wbEJRVUVzYTBKQlFVRTdTVUZCUVN4cFFrRkJRVHRKUVVGQkxHdENRVUZCTzBsQlFVRXNjVUpCUVVFN1NVRkJRU3hwUWtGQlFUdEpRVUZCTERCQ1FVRkJPMGRVTURCQ1NEdEZVeTh3UWtRN1NVRkxTU3gxUTBGQlFUdEpRVUZCTEc5Q1FVRkJPMGxCUVVFc2FVSkJRVUU3U1VGQlFTeHZRa0ZCUVR0SlFVRkJMSGRDUVVGQk8wbEJRVUVzYVVKQlFVRTdTVUZCUVN3d1FrRkJRVHRIVkcweFFrZzdSVk40TVVKRU8wbEJTMGtzZFVOQlFVRTdTVUZCUVN4dlFrRkJRVHRKUVVGQkxIRkNRVUZCTzBsQlFVRXNZMEZCUVR0SlFVRkJMSGRDUVVGQk8wbEJRVUVzYVVKQlFVRTdTVUZCUVN3d1FrRkJRVHRIVkRReFFrZzdSVk5xTWtKRU8wbEJTMGtzZFVOQlFVRTdTVUZCUVN4blFrRkJRVHRKUVVGQkxHbENRVUZCTzBsQlFVRXNhMEpCUVVFN1NVRkJRU3h4UWtGQlFUdEpRVUZCTEdsQ1FVRkJPMGxCUVVFc01FSkJRVUU3U1VGQlFTeHBRMEZCUVR0SFZITXlRa2c3UlZNek1rSkVPMGxCUzBrc2RVTkJRVUU3U1VGQlFTeHJRa0ZCUVR0SlFVRkJMR1ZCUVVFN1NVRkJRU3h0UWtGQlFUdEpRVUZCTEhOQ1FVRkJPMGxCUVVFc2FVSkJRVUU3U1VGQlFTd3dRa0ZCUVR0SFZDc3lRa2c3UlZOd00wSkVPMGxCUzBrc2JVTkJRVUU3U1VGQlFTeHRRa0ZCUVR0SlFVRkJMSE5DUVVGQk8wbEJRVUVzYVVKQlFVRTdSMVJ4TTBKSU8wVlRNVE5DUkR0SlFVdEpMRzFEUVVGQk8wbEJRVUVzYlVKQlFVRTdTVUZCUVN4elFrRkJRVHRKUVVGQkxHbENRVUZCTzBkVU1qTkNTRHREUVVOR08wRlhiRFJDUVRzN1MxaHhORUpKTzBGWGJqTkNTRHM3UzFoek0wSkhPMEZYYmpOQ1NqdEZRVU5ETEZsQlFVRTdSVUZEUVN4cFFrRkJRVHREV0hFelFrUTdRVmRzTTBKQk8wVkJRME1zYjBKQlFVRTdSVUZEUVN4WlFVRkJPMFZCUTBFc1YwRkJRVHREV0c4elFrUTdRVmQyTTBKQk8wVkJRME1zYjBKQlFVRTdSVUZEUVN4WlFVRkJPMFZCUTBFc1YwRkJRVHREV0c4elFrUTdRVmRxTTBKQk8wVkJRMFVzV1VGQlFUdERXRzB6UWtZN1FWZG9NMEpCTzBWQlEwTXNXVUZCUVR0RFdHc3pRa1E3UVZjdk1rSkJPenRGUVVWRExHVkJRVUU3UTFocE0wSkVPMEZYT1RKQ1FUdEZRVU5ETEdWQlFVRTdRMWhuTTBKRU8wRlhOekpDUVR0RlFVTkRMR05CUVVFN1JVRkRRU3hsUVVGQk8wTllLekpDUkR0QlZ6VXlRa0U3UlVGRFJ5eFpRVUZCTzBWQlEwWXNNRUpCUVVFN1ExZzRNa0pFTzBGWE16SkNRVHRGUVVOSExGbEJRVUU3UlVGRFJpd3dRa0ZCUVR0RFdEWXlRa1E3UVZjeE1rSkJPMFZCUTBNc01FSkJRVUU3UTFnME1rSkVPMEZYZWpKQ1FUczdSVUZGUXl4MVFrRkJRVHREV0RJeVFrUTdRVmQ0TWtKRE8wVkJRMFVzV1VGQlFUdERXREF5UWtnN1FWZDJNa0pCTERaRFFVRkJPMEZCUlVNN096czdPenM3UlVGRFF5eFpRVUZCTzBOWU9ESkNSanRCUkRVMFFrUTdPenM3T3pzN1IwTnZOVUpITzBGSGNqaENTRHRGUVVORExHdERRVUZCTzBOSWRUaENRVHRCUjNBNFFrUTdSVUZEUXl4cFJFRkJRVHREU0hNNFFrRTdRVWR1T0VKRU8wVkJRME1zZFVKQlFVRTdRMGh4T0VKQk8wRkhiRGhDWjBJN1JVRkRZanRKUVVGUExGZEJRVUU3UjBnMk9VSlNPMFZITlRsQ1F6dEpRVUZQTEZkQlFVRTdSMGdyT1VKU08wTkJRMFk3UVVRMU5rSkVMSFZEUVVGQk8wRmhja1ZCTzBWQlEwTXNiVUpCUVVFN1JVRkRSU3hsUVVGQk8wVkJRMFlzYTBKQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVORkxHdENRVUZCTzBOYWJ5OUNSanRCV1dvdlFrUTdSVUZEUXl4cFFrRkJRVHREV20wdlFrRTdRVmxxTDBKRU8wVkJRME1zYTBKQlFVRTdRMXB0TDBKQk8wRlpMeXRDUnp0RlFVTkpMRmRCUVVFN1JVRkRRU3hoUVVGQk8wVkJRMEVzYjBKQlFVRTdSVUZEUVN4elFrRkJRVHRGUVVOQkxIVkNRVUZCTzBOYWFTOUNVRHRCV1RrclFrYzdSVUZEU1N4aFFVRkJPMFZCUTBFc2EwSkJRVUU3UTFwbkwwSlFPMEZoTTJkRFFUczdTMkk0WjBOSk8wRmhPUzlDU2pzN096czdPenM3UlVGUlF5eDFRa0ZCUVR0RlFVTkZMRzFDUVVGQk8wVkJRMEVzYlVKQlFVRTdSVUZEUVN4elFrRkJRVHRGUVVOR0xHOUNRVUZCTzBWQlEwRXNjVUpCUVVFN1JVRkRSU3haUVVGQk8wVkJRMEVzZFVKQlFVRTdSVUZEUVN4MVFrRkJRVHRGUVVOQkxEWkNRVUZCTzBWQlEwRXNNRUpCUVVFN1JVRkZRU3hqUVVGQk8wVkJSVVlzWjBKQlFVRTdRMkk0TDBKRU8wRmhOUzlDUnpzN096czdPenM3UlVGRFNTd3lTa0ZCUVR0RFluRm5RMUE3UVdNeGFVTkJPenRMWkRacFEwazdRV016YUVOSU8wVkJRMFVzWjBKQlFVRTdRMlEyYUVOSU8wRmxNMmxEUXp0RlFVTkpMRzlDUVVGQk8wVkJRMEVzZFVKQlFVRTdSVUZEUVN4MVFrRkJRVHRGUVVOQkxIZENRVUZCTzBWQlJVRXNaVUZCUVR0RlFVTkJMSGRDUVVGQk8wVkJRMEVzTUVKQlFVRTdSVUZGUVN4dFEwRkJRVHRGUVVOQkxHZENRVUZCTzBObU1tbERURHRCWlhocFEwczdSVUZEUlN4WlFVRkJPMFZCUTBFc2IwSkJRVUU3UlVGRFFTd3dRa0ZCUVR0RFpqQnBRMUE3UVdWMmFVTkxPMFZCUTBVc1kwRkJRVHRGUVVOQkxGbEJRVUU3UlVGRFFTeHZRa0ZCUVR0RlFVTkJMREJDUVVGQk8wTm1lV2xEVUR0QlpYUnBRMHM3UlVGRFJTeGxRVUZCTzBWQlEwRXNiMEpCUVVFN1JVRkRRU3d3UWtGQlFUdEZRVU5CTEdkQ1FVRkJPME5tZDJsRFVEdEJaWEpwUTBzN1JVRkRSU3hqUVVGQk8wTm1kV2xEVUR0QlpXNXBRME03UlVGRFJTeHRRa0ZCUVR0RlFVTkJMSE5DUVVGQk8wVkJRMEVzYjBKQlFVRTdSVUZEUVN4eFFrRkJRVHREWm5GcFEwZzdRV1ZzYVVORE8wVkJRMFVzV1VGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUTBFc01FSkJRVUU3UTJadmFVTklPMEZsYkdsRFJ6dEZRVU5GTEZsQlFVRTdSVUZEUVN4dlFrRkJRVHRGUVVOQkxEQkNRVUZCTzBObWIybERURHRCWldwcFEwYzdSVUZEUlN4WlFVRkJPMFZCUTBFc2IwSkJRVUU3UlVGRFFTd3dRa0ZCUVR0RFptMXBRMHc3UVdWb2FVTkhPMFZCUTBVc1dVRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNNRUpCUVVFN1JVRkRRU3huUWtGQlFUdERabXRwUTB3N1FXVTVhRU5ETEhsR1FVRkJPMEZCYTBkQk8wVkJSVVVzYVVKQlFVRTdSVUZEUVN4bFFVRkJPME5tT0RkQ1NEdEJaVE0zUWtNN1JVRkRSU3hwUWtGQlFUdERaalkzUWtnN1FWVjBLMEpWTzBWTGEwTlVPMGxCUlVVc2FVSkJRVUU3U1VGRFFTeGxRVUZCTzBkbWN6aENSRHRGWlc0NFFrUTdTVUZEUlN4cFFrRkJRVHRIWm5FNFFrUTdRMEZEUmp0QlpXcHBRMGM3UlVGRFJTeHZRa0ZCUVR0RlFVTkJMSFZDUVVGQk8wVkJRMEVzZFVKQlFVRTdSVUZEUVN4M1FrRkJRVHRGUVVWQkxHVkJRVUU3UlVGRFFTeDNRa0ZCUVR0RlFVVkJMREJDUVVGQk8wVkJSVUVzYlVOQlFVRTdSVUZEU0N4blFrRkJRVHREWm1kcFEwWTdRV1UzYUVOTE8wVkJRMFVzV1VGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUTBFc01FSkJRVUU3UTJZcmFFTlFPMEZsTldoRFN6dEZRVU5GTEdOQlFVRTdSVUZEUVN4WlFVRkJPMFZCUTBFc2IwSkJRVUU3UlVGRFFTd3dRa0ZCUVR0RFpqaG9RMUE3UVdVemFFTkxPMFZCUTBVc1pVRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNNRUpCUVVFN1JVRkRRU3huUWtGQlFUdERaalpvUTFBN1FXVXhhRU5MTzBWQlEwVXNZMEZCUVR0RFpqUm9RMUE3UVdWNGFFTkhPMFZCUTBVc1dVRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNNRUpCUVVFN1EyWXdhRU5NTzBGbGVHaERTenRGUVVORkxGbEJRVUU3UlVGRFFTeHZRa0ZCUVR0RlFVTkJMREJDUVVGQk8wTm1NR2hEVUR0QlpYWm9RMHM3UlVGRFJTeFpRVUZCTzBWQlEwRXNiMEpCUVVFN1JVRkRRU3d3UWtGQlFUdERabmxvUTFBN1FXVjBhRU5MTzBWQlEwVXNXVUZCUVR0RlFVTkJMRzlDUVVGQk8wVkJRMEVzTUVKQlFVRTdSVUZEUVN4blFrRkJRVHREWm5kb1ExQTdRV1Z3YUVOSE8wVkJRMFVzYlVKQlFVRTdSVUZEUVN4elFrRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNjVUpCUVVFN1EyWnphRU5NTzBGbE0yeERSenRGUVVORkxHOUNRVUZCTzBWQlEwRXNkVUpCUVVFN1JVRkRRU3gxUWtGQlFUdEZRVU5CTEhkQ1FVRkJPMFZCUlVFc1pVRkJRVHRGUVVOQkxIZENRVUZCTzBWQlJVRXNNRUpCUVVFN1JVRkZRU3h0UTBGQlFUdEZRVU5JTEdkQ1FVRkJPME5tTUd4RFJqdEJaWFpzUTBzN1JVRkRSU3haUVVGQk8wVkJRMEVzYjBKQlFVRTdSVUZEUVN3d1FrRkJRVHREWm5sc1ExQTdRV1YwYkVOTE8wVkJRMFVzWTBGQlFUdEZRVU5CTEZsQlFVRTdSVUZEUVN4dlFrRkJRVHRGUVVOQkxEQkNRVUZCTzBObWQyeERVRHRCWlhKc1EwczdSVUZEUlN4bFFVRkJPMFZCUTBFc2IwSkJRVUU3UlVGRFFTd3dRa0ZCUVR0RlFVTkJMR2RDUVVGQk8wTm1kV3hEVUR0QlpYQnNRMHM3UlVGRFJTeGpRVUZCTzBObWMyeERVRHRCWld4c1EwYzdSVUZEUlN4WlFVRkJPMFZCUTBFc2IwSkJRVUU3UlVGRFFTd3dRa0ZCUVR0RFptOXNRMHc3UVdWc2JFTkxPMFZCUTBVc1dVRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNNRUpCUVVFN1EyWnZiRU5RTzBGbGFteERTenRGUVVORkxGbEJRVUU3UlVGRFFTeHZRa0ZCUVR0RlFVTkJMREJDUVVGQk8wTm1iV3hEVUR0QlpXaHNRMHM3UlVGRFJTeFpRVUZCTzBWQlEwRXNiMEpCUVVFN1JVRkRRU3d3UWtGQlFUdEZRVU5CTEdkQ1FVRkJPME5tYTJ4RFVEdEJaVGxyUTBjN1JVRkRSU3h0UWtGQlFUdEZRVU5CTEhOQ1FVRkJPMFZCUTBFc2IwSkJRVUU3UlVGRFFTeHhRa0ZCUVR0RFptZHNRMHc3UVdWeWNFTkhPMFZCUTBVc2IwSkJRVUU3UlVGRFFTeDFRa0ZCUVR0RlFVTkJMSFZDUVVGQk8wVkJRMEVzZDBKQlFVRTdSVUZGUVN4bFFVRkJPMFZCUTBFc2QwSkJRVUU3UlVGRlFTd3dRa0ZCUVR0RlFVVkJMRzFEUVVGQk8wVkJRMGdzWjBKQlFVRTdRMlp2Y0VOR08wRmxhbkJEU3p0RlFVTkZMRmxCUVVFN1JVRkRRU3h2UWtGQlFUdEZRVU5CTERCQ1FVRkJPME5tYlhCRFVEdEJaV2h3UTBzN1JVRkRSU3hqUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUTBFc01FSkJRVUU3UTJacmNFTlFPMEZsTDI5RFN6dEZRVU5GTEdWQlFVRTdSVUZEUVN4dlFrRkJRVHRGUVVOQkxEQkNRVUZCTzBWQlEwRXNaMEpCUVVFN1EyWnBjRU5RTzBGbE9XOURTenRGUVVORkxHTkJRVUU3UTJabmNFTlFPMEZsTlc5RFJ6dEZRVU5GTEZsQlFVRTdSVUZEUVN4dlFrRkJRVHRGUVVOQkxEQkNRVUZCTzBObU9HOURURHRCWlRWdlEwczdSVUZEUlN4WlFVRkJPMFZCUTBFc2IwSkJRVUU3UlVGRFFTd3dRa0ZCUVR0RFpqaHZRMUE3UVdVemIwTkxPMFZCUTBVc1dVRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNNRUpCUVVFN1EyWTJiME5RTzBGbE1XOURTenRGUVVORkxGbEJRVUU3UlVGRFFTeHZRa0ZCUVR0RlFVTkJMREJDUVVGQk8wVkJRMEVzWjBKQlFVRTdRMlkwYjBOUU8wRmxlRzlEUnp0RlFVTkZMRzFDUVVGQk8wVkJRMEVzYzBKQlFVRTdSVUZEUVN4dlFrRkJRVHRGUVVOQkxIRkNRVUZCTzBObU1HOURURHRCWlM5elEwYzdSVUZEUlN4dlFrRkJRVHRGUVVOQkxIVkNRVUZCTzBWQlEwRXNkVUpCUVVFN1JVRkRRU3gzUWtGQlFUdEZRVVZCTEZsQlFVRTdSVUZEUVN4M1FrRkJRVHRGUVVWQkxIVkNRVUZCTzBWQlJVRXNiVU5CUVVFN1JVRkRTQ3huUWtGQlFUdERaamh6UTBZN1FXVXpjME5MTzBWQlEwVXNXVUZCUVR0RlFVTkJMRzlDUVVGQk8wVkJRMEVzTUVKQlFVRTdRMlkyYzBOUU8wRmxNWE5EU3p0RlFVTkZMR05CUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzYjBKQlFVRTdSVUZEUVN3d1FrRkJRVHREWmpSelExQTdRV1Y2YzBOTE8wVkJRMFVzWlVGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUTBFc01FSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RFpqSnpRMUE3UVdWNGMwTkxPMFZCUTBVc1kwRkJRVHREWmpCelExQTdRV1YwYzBOSE8wVkJRMFVzV1VGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUTBFc01FSkJRVUU3UTJaM2MwTk1PMEZsZEhORFN6dEZRVU5GTEZsQlFVRTdSVUZEUVN4dlFrRkJRVHRGUVVOQkxEQkNRVUZCTzBObWQzTkRVRHRCWlhKelEwczdSVUZEUlN4WlFVRkJPMFZCUTBFc2IwSkJRVUU3UlVGRFFTd3dRa0ZCUVR0RFpuVnpRMUE3UVdWd2MwTkxPMFZCUTBVc1dVRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNNRUpCUVVFN1JVRkRRU3huUWtGQlFUdERabk56UTFBN1FXVnNjME5ITzBWQlEwVXNiVUpCUVVFN1JVRkRRU3h6UWtGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUTBFc2NVSkJRVUU3UTJadmMwTk1PMEZqZERCRFF6czdSVUZGU1N4WlFVRkJPMFZCUTBFc01FSkJRVUU3UlVGRFFTd3dRa0ZCUVR0RFpIY3dRMHc3UVdOME1FTkxPenRGUVVWRkxEQkNRVUZCTzBWQlEwRXNNRUpCUVVFN1EyUjNNRU5RTzBGamNqQkRTenM3UlVGRlJTd3dRa0ZCUVR0RlFVTkJMREJDUVVGQk8wTmtkVEJEVUR0QlkzQXdRMHM3TzBWQlEwVXNiVXhCUVVFN1EyUjFNRU5RTzBGamNEQkRTenM3UlVGRFJTd3dRa0ZCUVR0RlFVTkJMRzFNUVVGQk8wVkJRMEVzTUVKQlFVRTdRMlIxTUVOUU8wRmpjREJEU3pzN1JVRkRSU3hqUVVGQk8wTmtkVEJEVUR0QlkyNHdRME03UlVGRFNTeFpRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3c0UWtGQlFUdEZRVU5CTERKQ1FVRkJPME5rY1RCRFREdEJZMjR3UTBzN1JVRkRTU3hqUVVGQk8wVkJRMEVzT0VKQlFVRTdRMlJ4TUVOVU8wRmpiREJEU3p0RlFVTkpMSE5EUVVGQk8wTmtiekJEVkR0Qlkyb3dRMHM3UlVGRFNTeHhUVUZCUVR0RFpHMHdRMVE3UVdOb01FTkxPMFZCUTBrc09FSkJRVUU3UlVGRFFTeHhUVUZCUVR0RFpHc3dRMVE3UVdNdmVrTkxPMFZCUTBVc1kwRkJRVHREWkdrd1ExQTdRV2RDZGpWRFJ6dEZRVU5GTEhGQ1FVRkJPMFZCUVVFc1kwRkJRVHRGUVVOQkxIZENRVUZCTzBWQlFVRXNiMEpCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVUZCTEdGQlFVRTdSVUZGUVN4cFFrRkJRVHRGUVVWQkxGbEJRVUU3UlVGRFFTeDFRa0ZCUVR0RlFVVkJMSE5DUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZGUVN4dFEwRkJRVHRGUVVOQkxHZENRVUZCTzBOb1FuRTFRMHc3UVdkQ2JEVkRTenRGUVVORkxGbEJRVUU3UlVGRFFTeHZRa0ZCUVR0RGFFSnZOVU5RTzBGblFtbzFRMHM3UlVGRFJTeGpRVUZCTzBWQlEwRXNXVUZCUVR0RlFVTkJMRzlDUVVGQk8wVkJRMEVzTUVKQlFVRTdRMmhDYlRWRFVEdEJaMEpvTlVOTE8wVkJRMFVzWlVGQlFUdEZRVU5CTEc5Q1FVRkJPMFZCUTBFc01FSkJRVUU3UTJoQ2F6VkRVRHRCWjBJdk5FTkxPMFZCUTBVc1kwRkJRVHREYUVKcE5VTlFPMEZuUWpjMFEwYzdSVUZEUlN4bFFVRkJPMFZCUTBFc1pVRkJRVHRGUVVOQkxHZENRVUZCTzBWQlEwRXNiVUpCUVVFN1JVRkJRU3hsUVVGQk8wVkJRMEVzZFVKQlFVRTdRMmhDS3pSRFREdEJaMEkxTkVOSE8wVkJRMFVzY1VKQlFVRTdSVUZCUVN4alFVRkJPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeHhRa0ZCUVR0RlFVRkJMRFJDUVVGQk8wVkJRMEVzZFVKQlFVRTdSVUZCUVN4dlFrRkJRVHRGUVVOQkxGbEJRVUU3UlVGQlFTeFJRVUZCTzBWQlJVRXNkMEpCUVVFN1JVRkZRU3gzUTBGQlFUdERhRUkwTkVOTU8wRm5RakUwUTBzN1JVRkRSU3h2UWtGQlFUdERhRUkwTkVOUU8wRm5RbmcwUTBjN1JVRkRSU3hoUVVGQk8wVkJRMEVzWTBGQlFUdEZRVVZCTERaQ1FVRkJPMFZCUlVFc2NVSkJRVUU3UlVGQlFTeGpRVUZCTzBWQlEwRXNjMEpCUVVFN1JVRkJRU3gzUWtGQlFUdEZRVU5CTEhWQ1FVRkJPMFZCUVVFc2IwSkJRVUU3UlVGRlFTeHBRa0ZCUVR0RGFFSjFORU5NTzBGcFFtbzVRME03UlVGRFJTeGxRVUZCTzBWQlEwRXNZVUZCUVR0RlFVTkJMRzlDUVVGQk8wVkJRMEVzYlVKQlFVRTdSVUZEUVN3d1FrRkJRVHRGUVVOQkxIRkRRVUZCTzBWQlEwRXNiMEpCUVVFN1JVRkRRU3d3UWtGQlFUdEZRVU5CTEZsQlFVRTdSVUZEUVN3eVFrRkJRVHREYWtKdE9VTklPMEZwUW1nNVEwTTdPenRGUVVkRkxGbEJRVUU3UlVGRFFTd3dRa0ZCUVR0RlFVTkJMRmxCUVVFN1EycENhemxEU0R0QmEwSjBLME5CT3p0TGJFSjVLME5KTzBGclFqRTVRMGc3TzB0c1FqWTVRMGM3UVd0Q01UbERTRHRGUVVORkxHVkJRVUU3UlVGRFFTeG5RMEZCUVR0RlFVTkJMRmRCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEhOQ1FVRkJPMFZCUTBFc2QwSkJRVUU3UlVGRFFTeGxRVUZCTzBWQlEwRXNaMEpCUVVFN1EyeENORGxEU0R0QmEwSXpPVU5IT3pzN1JVRkhSU3g1UWtGQlFUdERiRUkyT1VOTU8wRnJRak01UTBjN1JVRkRSU3haUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4M1FrRkJRVHRGUVVOQkxEQkNRVUZCTzBWQlEwRXNiVUpCUVVFN1EyeENOamxEVER0QmEwSXpPVU5ITzBWQmIwTkdMRmxCUVVFN1JVRkRRU3hqUVVGQk8wVkJRMEVzYzBKQlFVRTdSVUZEUVN4blJVRkJRVHRGUVVOQkxIbENRVUZCTzBOc1FqQTNRMFE3UVd0Q0x6bERSenRGUVVORkxHOUNRVUZCTzBWQmQwTktMR0ZCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc05rSkJRVUU3UlVGRFFTeHBRa0ZCUVR0RGJFSXdOME5FTzBGclFuQXJRMGM3UlVGRFJTeGpRVUZCTzBWQlEwRXNORUpCUVVFN1EyeENjeXREVER0QmEwSnNLME5ETzBWQlEwVXNaMEpCUVVFN1EyeENieXREU0R0QmEwSnVLME5ITzBWQlEwVXNZMEZCUVR0RGJFSnhLME5NTzBGclFtNHJRMGM3UlVGRFJTeGpRVUZCTzBWQlEwRXNhVUpCUVVFN1EyeENjU3REVER0QmEwSm9LME5ITzBWQlEwVXNNRU5CUVVFN1EyeENheXREVER0QmJVSnlhVVJCT3p0TGJrSjNhVVJKTzBGdFFucG9SRWc3TzB0dVFqUm9SRWM3UVcxQ2VtaEVTRHRGUVVORkxHVkJRVUU3UlVGRFFTeFpRVUZCTzBWQlEwRXNZVUZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4aFFVRkJPMFZCUTBFc1dVRkJRVHRGUVVOQkxGbEJRVUU3UlVGRFFTeDVSa0ZCUVR0RlFVTkJMRFpDUVVGQk8wVkJRMEVzTWtKQlFVRTdSVUZEUVN3MlFrRkJRVHRGUVVOQkxHRkJRVUU3UlVGRFFTdzRRa0ZCUVR0RlFVTkJMRzFGUVVGQk8wTnVRakpvUkVnN1FXMUNlR2hFUXp0RlFVTkpMRmRCUVVFN1EyNUNNR2hFVER0QmIwSnFhMFJCT3p0TGNFSnZhMFJKTzBGdlFqTnFSRWc3TzB0d1FqaHFSRWM3UVc5Q00ycEVTanRGUVVORkxHTkJRVUU3UlVGRFFTeHhRa0ZCUVR0RlFVRkJMR05CUVVFN1JVRkRRU3h0UWtGQlFUdEZRVUZCTERCQ1FVRkJPMFZCUlVFc1owSkJRVUU3UlVGRFFTeFRRVUZCTzBWQlEwRXNVVUZCUVR0RlFVTkJMRlZCUVVFN1JVRkZRU3hsUVVGQk8wVkJRMEVzTkVKQlFVRTdRM0JDTW1wRVJqdEJiMEo0YWtSQk8wVkJRMFVzYTBKQlFVRTdRM0JDTUdwRVJpSXNJbVpwYkdVaU9pSjFhUzF5Y3kxamIzSmxMbU56Y3lJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpOHFJU0J1YjNKdFlXeHBlbVV1WTNOeklIWTBMakV1TVNCOElFMUpWQ0JNYVdObGJuTmxJSHdnWjJsMGFIVmlMbU52YlM5dVpXTnZiR0Z6TDI1dmNtMWhiR2w2WlM1amMzTWdLaTljYmx4dUx5b3FYRzRnS2lBeExpQkRhR0Z1WjJVZ2RHaGxJR1JsWm1GMWJIUWdabTl1ZENCbVlXMXBiSGtnYVc0Z1lXeHNJR0p5YjNkelpYSnpJQ2h2Y0dsdWFXOXVZWFJsWkNrdVhHNGdLaUF5TGlCRGIzSnlaV04wSUhSb1pTQnNhVzVsSUdobGFXZG9kQ0JwYmlCaGJHd2dZbkp2ZDNObGNuTXVYRzRnS2lBekxpQlFjbVYyWlc1MElHRmthblZ6ZEcxbGJuUnpJRzltSUdadmJuUWdjMmw2WlNCaFpuUmxjaUJ2Y21sbGJuUmhkR2x2YmlCamFHRnVaMlZ6SUdsdUlFbEZJR0Z1WkNCcFQxTXVYRzRnS2k5Y2JseHVhSFJ0YkNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCellXNXpMWE5sY21sbU95QXZLaUF4SUNvdlhHNGdJR3hwYm1VdGFHVnBaMmgwT2lBeExqRTFPeUF2S2lBeUlDb3ZYRzRnSUMxdGN5MTBaWGgwTFhOcGVtVXRZV1JxZFhOME9pQXhNREFsT3lBdktpQXpJQ292WEc0Z0lDMTNaV0pyYVhRdGRHVjRkQzF6YVhwbExXRmthblZ6ZERvZ01UQXdKVHNnTHlvZ015QXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCMGFHVWdiV0Z5WjJsdUlHbHVJR0ZzYkNCaWNtOTNjMlZ5Y3lBb2IzQnBibWx2Ym1GMFpXUXBMbHh1SUNvdlhHNWNibUp2WkhrZ2UxeHVJQ0J0WVhKbmFXNDZJREE3WEc1OVhHNWNiaThxSUVoVVRVdzFJR1JwYzNCc1lYa2daR1ZtYVc1cGRHbHZibk5jYmlBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JpOHFLbHh1SUNvZ1FXUmtJSFJvWlNCamIzSnlaV04wSUdScGMzQnNZWGtnYVc0Z1NVVWdPUzB1WEc0Z0tpQXhMaUJCWkdRZ2RHaGxJR052Y25KbFkzUWdaR2x6Y0d4aGVTQnBiaUJGWkdkbExDQkpSU3dnWVc1a0lFWnBjbVZtYjNndVhHNGdLaUF5TGlCQlpHUWdkR2hsSUdOdmNuSmxZM1FnWkdsemNHeGhlU0JwYmlCSlJTNWNiaUFxTDF4dVhHNWhjblJwWTJ4bExGeHVZWE5wWkdVc1hHNWtaWFJoYVd4ekxDQXZLaUF4SUNvdlhHNW1hV2RqWVhCMGFXOXVMRnh1Wm1sbmRYSmxMRnh1Wm05dmRHVnlMRnh1YUdWaFpHVnlMRnh1YldGcGJpd2dMeW9nTWlBcUwxeHViV1Z1ZFN4Y2JtNWhkaXhjYm5ObFkzUnBiMjRzWEc1emRXMXRZWEo1SUhzZ0x5b2dNU0FxTDF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JuMWNibHh1THlvcVhHNGdLaUJCWkdRZ2RHaGxJR052Y25KbFkzUWdaR2x6Y0d4aGVTQnBiaUJKUlNBNUxTNWNiaUFxTDF4dVhHNWhkV1JwYnl4Y2JtTmhiblpoY3l4Y2JuQnliMmR5WlhOekxGeHVkbWxrWlc4Z2UxeHVJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNTlYRzVjYmk4cUtseHVJQ29nUVdSa0lIUm9aU0JqYjNKeVpXTjBJR1JwYzNCc1lYa2dhVzRnYVU5VElEUXROeTVjYmlBcUwxeHVYRzVoZFdScGJ6cHViM1FvVzJOdmJuUnliMnh6WFNrZ2UxeHVJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVJQ0JvWldsbmFIUTZJREE3WEc1OVhHNWNiaThxS2x4dUlDb2dRV1JrSUhSb1pTQmpiM0p5WldOMElIWmxjblJwWTJGc0lHRnNhV2R1YldWdWRDQnBiaUJEYUhKdmJXVXNJRVpwY21WbWIzZ3NJR0Z1WkNCUGNHVnlZUzVjYmlBcUwxeHVYRzV3Y205bmNtVnpjeUI3WEc0Z0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCaVlYTmxiR2x1WlR0Y2JuMWNibHh1THlvcVhHNGdLaUJCWkdRZ2RHaGxJR052Y25KbFkzUWdaR2x6Y0d4aGVTQnBiaUJKUlNBeE1DMHVYRzRnS2lBeExpQkJaR1FnZEdobElHTnZjbkpsWTNRZ1pHbHpjR3hoZVNCcGJpQkpSUzVjYmlBcUwxeHVYRzUwWlcxd2JHRjBaU3dnTHlvZ01TQXFMMXh1VzJocFpHUmxibDBnZTF4dUlDQmthWE53YkdGNU9pQnViMjVsTzF4dWZWeHVYRzR2S2lCTWFXNXJjMXh1SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUx5b3FYRzRnS2lBeExpQlNaVzF2ZG1VZ2RHaGxJR2R5WVhrZ1ltRmphMmR5YjNWdVpDQnZiaUJoWTNScGRtVWdiR2x1YTNNZ2FXNGdTVVVnTVRBdVhHNGdLaUF5TGlCU1pXMXZkbVVnWjJGd2N5QnBiaUJzYVc1cmN5QjFibVJsY214cGJtVWdhVzRnYVU5VElEZ3JJR0Z1WkNCVFlXWmhjbWtnT0NzdVhHNGdLaTljYmx4dVlTQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1ME95QXZLaUF4SUNvdlhHNGdJQzEzWldKcmFYUXRkR1Y0ZEMxa1pXTnZjbUYwYVc5dUxYTnJhWEE2SUc5aWFtVmpkSE03SUM4cUlESWdLaTljYm4xY2JseHVMeW9xWEc0Z0tpQlNaVzF2ZG1VZ2RHaGxJRzkxZEd4cGJtVWdiMjRnWm05amRYTmxaQ0JzYVc1cmN5QjNhR1Z1SUhSb1pYa2dZWEpsSUdGc2MyOGdZV04wYVhabElHOXlJR2h2ZG1WeVpXUmNiaUFxSUdsdUlHRnNiQ0JpY205M2MyVnljeUFvYjNCcGJtbHZibUYwWldRcExseHVJQ292WEc1Y2JtRTZZV04wYVhabExGeHVZVHBvYjNabGNpQjdYRzRnSUc5MWRHeHBibVV0ZDJsa2RHZzZJREE3WEc1OVhHNWNiaThxSUZSbGVIUXRiR1YyWld3Z2MyVnRZVzUwYVdOelhHNGdJQ0E5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzR2S2lwY2JpQXFJREV1SUZKbGJXOTJaU0IwYUdVZ1ltOTBkRzl0SUdKdmNtUmxjaUJwYmlCR2FYSmxabTk0SURNNUxTNWNiaUFxSURJdUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCMFpYaDBJR1JsWTI5eVlYUnBiMjRnYVc0Z1EyaHliMjFsTENCRlpHZGxMQ0JKUlN3Z1QzQmxjbUVzSUdGdVpDQlRZV1poY21rdVhHNGdLaTljYmx4dVlXSmljbHQwYVhSc1pWMGdlMXh1SUNCaWIzSmtaWEl0WW05MGRHOXRPaUJ1YjI1bE95QXZLaUF4SUNvdlhHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dkVzVrWlhKc2FXNWxPeUF2S2lBeUlDb3ZYRzRnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nZFc1a1pYSnNhVzVsSUdSdmRIUmxaRHNnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGQnlaWFpsYm5RZ2RHaGxJR1IxY0d4cFkyRjBaU0JoY0hCc2FXTmhkR2x2YmlCdlppQmdZbTlzWkdWeVlDQmllU0IwYUdVZ2JtVjRkQ0J5ZFd4bElHbHVJRk5oWm1GeWFTQTJMbHh1SUNvdlhHNWNibUlzWEc1emRISnZibWNnZTF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nYVc1b1pYSnBkRHRjYm4xY2JseHVMeW9xWEc0Z0tpQkJaR1FnZEdobElHTnZjbkpsWTNRZ1ptOXVkQ0IzWldsbmFIUWdhVzRnUTJoeWIyMWxMQ0JGWkdkbExDQmhibVFnVTJGbVlYSnBMbHh1SUNvdlhHNWNibUlzWEc1emRISnZibWNnZTF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nWW05c1pHVnlPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCbWIyNTBJSE4wZVd4bElHbHVJRUZ1WkhKdmFXUWdOQzR6TFM1Y2JpQXFMMXh1WEc1a1ptNGdlMXh1SUNCbWIyNTBMWE4wZVd4bE9pQnBkR0ZzYVdNN1hHNTlYRzVjYmk4cUtseHVJQ29nUTI5eWNtVmpkQ0IwYUdVZ1ptOXVkQ0J6YVhwbElHRnVaQ0J0WVhKbmFXNGdiMjRnWUdneFlDQmxiR1Z0Wlc1MGN5QjNhWFJvYVc0Z1lITmxZM1JwYjI1Z0lHRnVaRnh1SUNvZ1lHRnlkR2xqYkdWZ0lHTnZiblJsZUhSeklHbHVJRU5vY205dFpTd2dSbWx5WldadmVDd2dZVzVrSUZOaFptRnlhUzVjYmlBcUwxeHVYRzVvTVNCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTW1WdE8xeHVJQ0J0WVhKbmFXNDZJREF1TmpkbGJTQXdPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCaVlXTnJaM0p2ZFc1a0lHRnVaQ0JqYjJ4dmNpQnBiaUJKUlNBNUxTNWNiaUFxTDF4dVhHNXRZWEpySUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMlptTUR0Y2JpQWdZMjlzYjNJNklDTXdNREE3WEc1OVhHNWNiaThxS2x4dUlDb2dRV1JrSUhSb1pTQmpiM0p5WldOMElHWnZiblFnYzJsNlpTQnBiaUJoYkd3Z1luSnZkM05sY25NdVhHNGdLaTljYmx4dWMyMWhiR3dnZTF4dUlDQm1iMjUwTFhOcGVtVTZJRGd3SlR0Y2JuMWNibHh1THlvcVhHNGdLaUJRY21WMlpXNTBJR0J6ZFdKZ0lHRnVaQ0JnYzNWd1lDQmxiR1Z0Wlc1MGN5Qm1jbTl0SUdGbVptVmpkR2x1WnlCMGFHVWdiR2x1WlNCb1pXbG5hSFFnYVc1Y2JpQXFJR0ZzYkNCaWNtOTNjMlZ5Y3k1Y2JpQXFMMXh1WEc1emRXSXNYRzV6ZFhBZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURjMUpUdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklEQTdYRzRnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklHSmhjMlZzYVc1bE8xeHVmVnh1WEc1emRXSWdlMXh1SUNCaWIzUjBiMjA2SUMwd0xqSTFaVzA3WEc1OVhHNWNibk4xY0NCN1hHNGdJSFJ2Y0RvZ0xUQXVOV1Z0TzF4dWZWeHVYRzR2S2lCRmJXSmxaR1JsWkNCamIyNTBaVzUwWEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCMGFHVWdZbTl5WkdWeUlHOXVJR2x0WVdkbGN5QnBibk5wWkdVZ2JHbHVhM01nYVc0Z1NVVWdNVEF0TGx4dUlDb3ZYRzVjYm1sdFp5QjdYRzRnSUdKdmNtUmxjaTF6ZEhsc1pUb2dibTl1WlR0Y2JuMWNibHh1THlvcVhHNGdLaUJJYVdSbElIUm9aU0J2ZG1WeVpteHZkeUJwYmlCSlJTNWNiaUFxTDF4dVhHNXpkbWM2Ym05MEtEcHliMjkwS1NCN1hHNGdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYRzU5WEc1Y2JpOHFJRWR5YjNWd2FXNW5JR052Ym5SbGJuUmNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk4cUtseHVJQ29nTVM0Z1EyOXljbVZqZENCMGFHVWdhVzVvWlhKcGRHRnVZMlVnWVc1a0lITmpZV3hwYm1jZ2IyWWdabTl1ZENCemFYcGxJR2x1SUdGc2JDQmljbTkzYzJWeWN5NWNiaUFxSURJdUlFTnZjbkpsWTNRZ2RHaGxJRzlrWkNCZ1pXMWdJR1p2Ym5RZ2MybDZhVzVuSUdsdUlHRnNiQ0JpY205M2MyVnljeTVjYmlBcUwxeHVYRzVqYjJSbExGeHVhMkprTEZ4dWNISmxMRnh1YzJGdGNDQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQnRiMjV2YzNCaFkyVXNJRzF2Ym05emNHRmpaVHNnTHlvZ01TQXFMMXh1SUNCbWIyNTBMWE5wZW1VNklERmxiVHNnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCdFlYSm5hVzRnYVc0Z1NVVWdPQzVjYmlBcUwxeHVYRzVtYVdkMWNtVWdlMXh1SUNCdFlYSm5hVzQ2SURGbGJTQTBNSEI0TzF4dWZWeHVYRzR2S2lwY2JpQXFJREV1SUVGa1pDQjBhR1VnWTI5eWNtVmpkQ0JpYjNnZ2MybDZhVzVuSUdsdUlFWnBjbVZtYjNndVhHNGdLaUF5TGlCVGFHOTNJSFJvWlNCdmRtVnlabXh2ZHlCcGJpQkZaR2RsSUdGdVpDQkpSUzVjYmlBcUwxeHVYRzVvY2lCN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdOdmJuUmxiblF0WW05NE95QXZLaUF4SUNvdlhHNGdJR2hsYVdkb2REb2dNRHNnTHlvZ01TQXFMMXh1SUNCdmRtVnlabXh2ZHpvZ2RtbHphV0pzWlRzZ0x5b2dNaUFxTDF4dWZWeHVYRzR2S2lCR2IzSnRjMXh1SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUx5b3FYRzRnS2lBeExpQkRhR0Z1WjJVZ1ptOXVkQ0J3Y205d1pYSjBhV1Z6SUhSdklHQnBibWhsY21sMFlDQnBiaUJoYkd3Z1luSnZkM05sY25NZ0tHOXdhVzVwYjI1aGRHVmtLUzVjYmlBcUlESXVJRkpsYlc5MlpTQjBhR1VnYldGeVoybHVJR2x1SUVacGNtVm1iM2dnWVc1a0lGTmhabUZ5YVM1Y2JpQXFMMXh1WEc1aWRYUjBiMjRzWEc1cGJuQjFkQ3hjYm05d2RHZHliM1Z3TEZ4dWMyVnNaV04wTEZ4dWRHVjRkR0Z5WldFZ2UxeHVJQ0JtYjI1ME9pQnBibWhsY21sME95QXZLaUF4SUNvdlhHNGdJRzFoY21kcGJqb2dNRHNnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGSmxjM1J2Y21VZ2RHaGxJR1p2Ym5RZ2QyVnBaMmgwSUhWdWMyVjBJR0o1SUhSb1pTQndjbVYyYVc5MWN5QnlkV3hsTGx4dUlDb3ZYRzVjYm05d2RHZHliM1Z3SUh0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUTdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1UyaHZkeUIwYUdVZ2IzWmxjbVpzYjNjZ2FXNGdTVVV1WEc0Z0tpQXhMaUJUYUc5M0lIUm9aU0J2ZG1WeVpteHZkeUJwYmlCRlpHZGxMbHh1SUNvdlhHNWNibUoxZEhSdmJpeGNibWx1Y0hWMElIc2dMeW9nTVNBcUwxeHVJQ0J2ZG1WeVpteHZkem9nZG1semFXSnNaVHRjYm4xY2JseHVMeW9xWEc0Z0tpQlNaVzF2ZG1VZ2RHaGxJR2x1YUdWeWFYUmhibU5sSUc5bUlIUmxlSFFnZEhKaGJuTm1iM0p0SUdsdUlFVmtaMlVzSUVacGNtVm1iM2dzSUdGdVpDQkpSUzVjYmlBcUlERXVJRkpsYlc5MlpTQjBhR1VnYVc1b1pYSnBkR0Z1WTJVZ2IyWWdkR1Y0ZENCMGNtRnVjMlp2Y20wZ2FXNGdSbWx5WldadmVDNWNiaUFxTDF4dVhHNWlkWFIwYjI0c1hHNXpaV3hsWTNRZ2V5QXZLaUF4SUNvdlhHNGdJSFJsZUhRdGRISmhibk5tYjNKdE9pQnViMjVsTzF4dWZWeHVYRzR2S2lwY2JpQXFJREV1SUZCeVpYWmxiblFnWVNCWFpXSkxhWFFnWW5WbklIZG9aWEpsSUNneUtTQmtaWE4wY205NWN5QnVZWFJwZG1VZ1lHRjFaR2x2WUNCaGJtUWdZSFpwWkdWdllGeHVJQ29nSUNBZ1kyOXVkSEp2YkhNZ2FXNGdRVzVrY205cFpDQTBMbHh1SUNvZ01pNGdRMjl5Y21WamRDQjBhR1VnYVc1aFltbHNhWFI1SUhSdklITjBlV3hsSUdOc2FXTnJZV0pzWlNCMGVYQmxjeUJwYmlCcFQxTWdZVzVrSUZOaFptRnlhUzVjYmlBcUwxeHVYRzVpZFhSMGIyNHNYRzVvZEcxc0lGdDBlWEJsUFZ3aVluVjBkRzl1WENKZExDQXZLaUF4SUNvdlhHNWJkSGx3WlQxY0luSmxjMlYwWENKZExGeHVXM1I1Y0dVOVhDSnpkV0p0YVhSY0lsMGdlMXh1SUNBdGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNklHSjFkSFJ2YmpzZ0x5b2dNaUFxTDF4dWZWeHVYRzR2S2lwY2JpQXFJRkpsYlc5MlpTQjBhR1VnYVc1dVpYSWdZbTl5WkdWeUlHRnVaQ0J3WVdSa2FXNW5JR2x1SUVacGNtVm1iM2d1WEc0Z0tpOWNibHh1WW5WMGRHOXVPam90Ylc5NkxXWnZZM1Z6TFdsdWJtVnlMRnh1VzNSNWNHVTlYQ0ppZFhSMGIyNWNJbDA2T2kxdGIzb3RabTlqZFhNdGFXNXVaWElzWEc1YmRIbHdaVDFjSW5KbGMyVjBYQ0pkT2pvdGJXOTZMV1p2WTNWekxXbHVibVZ5TEZ4dVczUjVjR1U5WENKemRXSnRhWFJjSWwwNk9pMXRiM290Wm05amRYTXRhVzV1WlhJZ2UxeHVJQ0JpYjNKa1pYSXRjM1I1YkdVNklHNXZibVU3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1VtVnpkRzl5WlNCMGFHVWdabTlqZFhNZ2MzUjViR1Z6SUhWdWMyVjBJR0o1SUhSb1pTQndjbVYyYVc5MWN5QnlkV3hsTGx4dUlDb3ZYRzVjYm1KMWRIUnZiam90Ylc5NkxXWnZZM1Z6Y21sdVp5eGNibHQwZVhCbFBWd2lZblYwZEc5dVhDSmRPaTF0YjNvdFptOWpkWE55YVc1bkxGeHVXM1I1Y0dVOVhDSnlaWE5sZEZ3aVhUb3RiVzk2TFdadlkzVnpjbWx1Wnl4Y2JsdDBlWEJsUFZ3aWMzVmliV2wwWENKZE9pMXRiM290Wm05amRYTnlhVzVuSUh0Y2JpQWdiM1YwYkdsdVpUb2dNWEI0SUdSdmRIUmxaQ0JDZFhSMGIyNVVaWGgwTzF4dWZWeHVYRzR2S2lwY2JpQXFJRU5vWVc1blpTQjBhR1VnWW05eVpHVnlMQ0J0WVhKbmFXNHNJR0Z1WkNCd1lXUmthVzVuSUdsdUlHRnNiQ0JpY205M2MyVnljeUFvYjNCcGJtbHZibUYwWldRcExseHVJQ292WEc1Y2JtWnBaV3hrYzJWMElIdGNiaUFnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSTJNd1l6QmpNRHRjYmlBZ2JXRnlaMmx1T2lBd0lESndlRHRjYmlBZ2NHRmtaR2x1WnpvZ01DNHpOV1Z0SURBdU5qSTFaVzBnTUM0M05XVnRPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlERXVJRU52Y25KbFkzUWdkR2hsSUhSbGVIUWdkM0poY0hCcGJtY2dhVzRnUldSblpTQmhibVFnU1VVdVhHNGdLaUF5TGlCRGIzSnlaV04wSUhSb1pTQmpiMnh2Y2lCcGJtaGxjbWwwWVc1alpTQm1jbTl0SUdCbWFXVnNaSE5sZEdBZ1pXeGxiV1Z1ZEhNZ2FXNGdTVVV1WEc0Z0tpQXpMaUJTWlcxdmRtVWdkR2hsSUhCaFpHUnBibWNnYzI4Z1pHVjJaV3h2Y0dWeWN5QmhjbVVnYm05MElHTmhkV2RvZENCdmRYUWdkMmhsYmlCMGFHVjVJSHBsY204Z2IzVjBYRzRnS2lBZ0lDQmdabWxsYkdSelpYUmdJR1ZzWlcxbGJuUnpJR2x1SUdGc2JDQmljbTkzYzJWeWN5NWNiaUFxTDF4dVhHNXNaV2RsYm1RZ2UxeHVJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE95QXZLaUF4SUNvdlhHNGdJR052Ykc5eU9pQnBibWhsY21sME95QXZLaUF5SUNvdlhHNGdJR1JwYzNCc1lYazZJSFJoWW14bE95QXZLaUF4SUNvdlhHNGdJRzFoZUMxM2FXUjBhRG9nTVRBd0pUc2dMeW9nTVNBcUwxeHVJQ0J3WVdSa2FXNW5PaUF3T3lBdktpQXpJQ292WEc0Z0lIZG9hWFJsTFhOd1lXTmxPaUJ1YjNKdFlXdzdJQzhxSURFZ0tpOWNibjFjYmx4dUx5b3FYRzRnS2lCU1pXMXZkbVVnZEdobElHUmxabUYxYkhRZ2RtVnlkR2xqWVd3Z2MyTnliMnhzWW1GeUlHbHVJRWxGTGx4dUlDb3ZYRzVjYm5SbGVIUmhjbVZoSUh0Y2JpQWdiM1psY21ac2IzYzZJR0YxZEc4N1hHNTlYRzVjYmk4cUtseHVJQ29nTVM0Z1FXUmtJSFJvWlNCamIzSnlaV04wSUdKdmVDQnphWHBwYm1jZ2FXNGdTVVVnTVRBdExseHVJQ29nTWk0Z1VtVnRiM1psSUhSb1pTQndZV1JrYVc1bklHbHVJRWxGSURFd0xTNWNiaUFxTDF4dVhHNWJkSGx3WlQxY0ltTm9aV05yWW05NFhDSmRMRnh1VzNSNWNHVTlYQ0p5WVdScGIxd2lYU0I3WEc0Z0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3SUM4cUlERWdLaTljYmlBZ2NHRmtaR2x1WnpvZ01Ec2dMeW9nTWlBcUwxeHVmVnh1WEc0dktpcGNiaUFxSUVOdmNuSmxZM1FnZEdobElHTjFjbk52Y2lCemRIbHNaU0J2WmlCcGJtTnlaVzFsYm5RZ1lXNWtJR1JsWTNKbGJXVnVkQ0JpZFhSMGIyNXpJR2x1SUVOb2NtOXRaUzVjYmlBcUwxeHVYRzViZEhsd1pUMWNJbTUxYldKbGNsd2lYVG82TFhkbFltdHBkQzFwYm01bGNpMXpjR2x1TFdKMWRIUnZiaXhjYmx0MGVYQmxQVndpYm5WdFltVnlYQ0pkT2pvdGQyVmlhMmwwTFc5MWRHVnlMWE53YVc0dFluVjBkRzl1SUh0Y2JpQWdhR1ZwWjJoME9pQmhkWFJ2TzF4dWZWeHVYRzR2S2lwY2JpQXFJREV1SUVOdmNuSmxZM1FnZEdobElHOWtaQ0JoY0hCbFlYSmhibU5sSUdsdUlFTm9jbTl0WlNCaGJtUWdVMkZtWVhKcExseHVJQ29nTWk0Z1EyOXljbVZqZENCMGFHVWdiM1YwYkdsdVpTQnpkSGxzWlNCcGJpQlRZV1poY21rdVhHNGdLaTljYmx4dVczUjVjR1U5WENKelpXRnlZMmhjSWwwZ2UxeHVJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUhSbGVIUm1hV1ZzWkRzZ0x5b2dNU0FxTDF4dUlDQnZkWFJzYVc1bExXOW1abk5sZERvZ0xUSndlRHNnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCMGFHVWdhVzV1WlhJZ2NHRmtaR2x1WnlCaGJtUWdZMkZ1WTJWc0lHSjFkSFJ2Ym5NZ2FXNGdRMmh5YjIxbElHRnVaQ0JUWVdaaGNta2diMjRnVDFNZ1dDNWNiaUFxTDF4dVhHNWJkSGx3WlQxY0luTmxZWEpqYUZ3aVhUbzZMWGRsWW10cGRDMXpaV0Z5WTJndFkyRnVZMlZzTFdKMWRIUnZiaXhjYmx0MGVYQmxQVndpYzJWaGNtTm9YQ0pkT2pvdGQyVmlhMmwwTFhObFlYSmphQzFrWldOdmNtRjBhVzl1SUh0Y2JpQWdMWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPaUJ1YjI1bE8xeHVmVnh1WEc0dktpcGNiaUFxSUVOdmNuSmxZM1FnZEdobElIUmxlSFFnYzNSNWJHVWdiMllnY0d4aFkyVm9iMnhrWlhKeklHbHVJRU5vY205dFpTd2dSV1JuWlN3Z1lXNWtJRk5oWm1GeWFTNWNiaUFxTDF4dVhHNDZPaTEzWldKcmFYUXRhVzV3ZFhRdGNHeGhZMlZvYjJ4a1pYSWdlMXh1SUNCamIyeHZjam9nYVc1b1pYSnBkRHRjYmlBZ2IzQmhZMmwwZVRvZ01DNDFORHRjYm4xY2JseHVMeW9xWEc0Z0tpQXhMaUJEYjNKeVpXTjBJSFJvWlNCcGJtRmlhV3hwZEhrZ2RHOGdjM1I1YkdVZ1kyeHBZMnRoWW14bElIUjVjR1Z6SUdsdUlHbFBVeUJoYm1RZ1UyRm1ZWEpwTGx4dUlDb2dNaTRnUTJoaGJtZGxJR1p2Ym5RZ2NISnZjR1Z5ZEdsbGN5QjBieUJnYVc1b1pYSnBkR0FnYVc0Z1UyRm1ZWEpwTGx4dUlDb3ZYRzVjYmpvNkxYZGxZbXRwZEMxbWFXeGxMWFZ3Ykc5aFpDMWlkWFIwYjI0Z2UxeHVJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUdKMWRIUnZianNnTHlvZ01TQXFMMXh1SUNCbWIyNTBPaUJwYm1obGNtbDBPeUF2S2lBeUlDb3ZYRzU5WEc0aUxDSXZLbHh1SUNvZ1UzUjViR1VnYzJWMGRYQWdabTl5SUhKbFpITnBablF0ZFdrZ1ltRnpaV1FnYzJsbWRITXVYRzRnS2x4dUlDb2dMU0JRY205MmFXUmxjenBjYmlBcUlDQWdMaUJ5WldGa2VTMTBieTExYzJVZ1ZVa2dZMjl0Y0c5dVpXNTBjMXh1SUNvZ0lDQXVJSEpsYzNCdmJuTnBkbVVnZEhsd1pTQnplWE4wWlcxY2JpQXFJQ0FnTGlCaWNtVmhhM0J2YVc1MElITmxkSFZ3SUNoMmFXRWdKM0oxY0hSMWNtVW5LVnh1SUNvZ0lDQXVJR052YlcxdmJpQm1kVzVqZEdsdmJtRnNhWFI1SUd4cGEyVWdjbVZ6WlhRc0lIQmhkSFJsY201eklHRnVaQ0JtYjI1MGMxeHVJQ3BjYmlBcUlDMGdWWE5sWkNCaWVUcGNiaUFxSUNBZ0xpQnlaV1J6YVdaMExXeHBaMmgwWEc0Z0tpQWdJQzRnY21Wa2MybG1kQzFrWVhKclhHNGdLbHh1SUNvZ0xTQkdiMnhrWlhJZ2MzUnlkV04wZFhKbE9seHVJQ3BjYmlBcUlDQWdMaTlzYVdJZ0lDQWdJQ0FnSUMwK0lHMXBlR2x1SUdGdVpDQm1kVzVqZEdsdmJpQnNhV0p5WVhKNVhHNGdLaUFnSUM0dlkyOXRiVzl1SUNBZ0lDQXRQaUJEVTFNZ2MyVjBkWEFnWVc1a0lHTnZiVzF2YmlCamJHRnpjMlZ6WEc0Z0tpQWdJQzR2WTI5dGNHOXVaVzUwY3lBdFBpQlZTU0JqYjIxd2IyNWxiblJ6WEc0Z0tpOWNibHh1THlwY2JpQXFJRU52Ym1acFozVnlZWFJwYjI0Z2RtbGhJRzlpYW1WamRDQW5KSFZwTFhKekxXTnZjbVVuWEc0Z0tpOWNia0JwYlhCdmNuUWdKeTR2YzNSNWJHVnpMMk52Ym1acFp5NXBiWEJ2Y25RdWMzUjViQ2M3WEc1Y2JpOHFYRzRnS2lCTmFYaHBiaTltZFc1amRHbHZibk1nYkdsaWNtRnllVnh1SUNwY2JpQXFJRU52YlcxdmJpQnRhWGhwYm5NZ1lXNWtJR1oxYm1OMGFXOXVjeUIxYzJWa0lHSjVJSEpsWkhOcFpuUXRkV2t1WEc0Z0tpOWNia0JwYlhCdmNuUWdKeTR2YzNSNWJHVnpMMnhwWWk5allYSmtjeTVwYlhCdmNuUXVjM1I1YkNkY2JrQnBiWEJ2Y25RZ0p5NHZjM1I1YkdWekwyeHBZaTluY21Ga2FXVnVkSE11YVcxd2IzSjBMbk4wZVd3blhHNUFhVzF3YjNKMElDY3VMM04wZVd4bGN5OXNhV0l2YVcxaFoyVnpMbWx0Y0c5eWRDNXpkSGxzSjF4dVhHNHZLbHh1SUNvZ1FtRnpaU0JqYjI1bWFXZDFjbUYwYVc5dUlHRnVaQ0JqYjIxdGIyNGdZMnhoYzNObGN6cGNiaUFxWEc0Z0tpQkRVMU1nWW1GelpTQnpaWFIxY0NCaGJtUWdZMjl0Ylc5dUlFTlRVeUJqYkdGemMyVnpMbHh1SUNvdlhHNUFhVzF3YjNKMElDY3VMM04wZVd4bGN5OWpiMjF0YjI0dmNtVnpaWFF1YVcxd2IzSjBMbk4wZVd3blhHNUFhVzF3YjNKMElDY3VMM04wZVd4bGN5OWpiMjF0YjI0dlptOXVkSE11YVcxd2IzSjBMbk4wZVd3blhHNUFhVzF3YjNKMElDY3VMM04wZVd4bGN5OWpiMjF0YjI0dmNHRjBkR1Z5Ym5NdWFXMXdiM0owTG5OMGVXd25YRzVBYVcxd2IzSjBJQ2N1TDNOMGVXeGxjeTlqYjIxdGIyNHZZbkpsWVd0d2IybHVkSE11YVcxd2IzSjBMbk4wZVd3blhHNUFhVzF3YjNKMElDY3VMM04wZVd4bGN5OWpiMjF0YjI0dllXNXBiV0YwYVc5dUxtbHRjRzl5ZEM1emRIbHNKMXh1UUdsdGNHOXlkQ0FuTGk5emRIbHNaWE12WTI5dGJXOXVMMkpoYzJVdWFXMXdiM0owTG5OMGVXd25YRzVBYVcxd2IzSjBJQ2N1TDNOMGVXeGxjeTlqYjIxdGIyNHZkSGx3WlhNdWFXMXdiM0owTG5OMGVXd25YRzVBYVcxd2IzSjBJQ2N1TDNOMGVXeGxjeTlqYjIxd2IyNWxiblJ6TDJOdmJHOTFjaTVwYlhCdmNuUXVjM1I1YkNkY2JrQnBiWEJ2Y25RZ0p5NHZjM1I1YkdWekwyTnZiVzF2Ymk5cFkyOXVjeTVwYlhCdmNuUXVjM1I1YkNkY2JseHVjMlYwZFhBdFptOXVkQzFtWVdObGN5Z3BYRzVqY21WaGRHVXRZMkZ5WkhNb0oyTmhjbVJ6Snl3Z1ptRnNjMlVwWEc1elpYUjFjQzEwZVhCbGN5Z2tkV2t0Y25NdFkyOXlaUzUwZVhCbGN5NW1iMjUwY3l3Z0pIVnBMWEp6TFdOdmNtVXVkSGx3WlhNdWMyVjBkR2x1WjNNcE8xeHVjMlYwZFhBdFkyOXNiM0l0YzNsemRHVnRLQ1IxYVMxeWN5MWpiM0psTG5Sb1pXMWxjeTVzYVdkb2RDbGNibHh1THlwY2JpQXFJRlZKSUdOdmJYQnZibVZ1ZEhNNlhHNGdLbHh1SUNvZ1JXRmphQ0JWU1NCamIyMXdiMjVsYm5RZ2FYTWdaVzVqWVhCemRXeGhkR1ZrSUhkcGRHaHBiaUJoSUhObGRIVndJR1oxYm1OMGFXOXVJSGRvYVdOb0lIUmhhMlZ6SUdGdVhHNGdLaUJ2Y0dsMGFXOXVZV3dnYzJWMGRHbHVaM01nYUdGemFDNGdTV1lnYjIxcGRIUmxaQ0IwYUdVZ1pHVm1ZWFZzZENCelpYUjBhVzVuY3lCaGRtRnBiR0ZpYkdVZ2FXNGdkR2hsWEc0Z0tpQnlaWE53WldOMGFYWmxJR052YlhCdmJtVnVkQ0JtYVd4bElHRnlaU0IxYzJWa0xpQlVhR2x6SUdGc2JHOTNjeUJoSUNoMGFHVnRaU2tnWkdWMlpXeHZjR1Z5SUhSdlhHNGdLaUJqZFhOMGIyMXBlbVVnWTI5dGNHOXVaVzUwY3lCbWIzSWdkR2hsYVhJZ2IzZHVJSE5wWm5SeklHRnVaQ0J3Y205cVpXTjBjeTVjYmlBcUwxeHVRR2x0Y0c5eWRDQW5MaTl6ZEhsc1pYTXZZMjl0Y0c5dVpXNTBjeTlwYm5CMWRITXVhVzF3YjNKMExuTjBlV3duWEc1QWFXMXdiM0owSUNjdUwzTjBlV3hsY3k5amIyMXdiMjVsYm5SekwySjFkSFJ2Ym5NdWFXMXdiM0owTG5OMGVXd25YRzVBYVcxd2IzSjBJQ2N1TDNOMGVXeGxjeTlqYjIxd2IyNWxiblJ6TDJsamIyNHRZblYwZEc5dWN5NXBiWEJ2Y25RdWMzUjViQ2RjYmtCcGJYQnZjblFnSnk0dmMzUjViR1Z6TDJOdmJYQnZibVZ1ZEhNdlpHRnVaMlZ5TFdKMWRIUnZibk11YVcxd2IzSjBMbk4wZVd3blhHNUFhVzF3YjNKMElDY3VMM04wZVd4bGN5OWpiMjF3YjI1bGJuUnpMM05zYVdSbGNuTXVhVzF3YjNKMExuTjBlV3duWEc1QWFXMXdiM0owSUNjdUwzTjBlV3hsY3k5amIyMXdiMjVsYm5SekwzZHBaR2RsZEhNdWFXMXdiM0owTG5OMGVXd25YRzVjYmx4dVFHbHRjRzl5ZENBbkxpOXpkSGxzWlhNdlkyOXRjRzl1Wlc1MGN5OXpkSGxzWlMxemQybDBZMmhsY2k1cGJYQnZjblF1YzNSNWJDZGNiaThxSUVaSldGaE5SVG9nY21WbVlXTjBiM0lnYVc1MGJ5QmpiMjF3YjI1bGJuUnpJU0FxTDF4dVFHbHRjRzl5ZENBbkxpOXpkSGxzWlhNdlkyOXRjRzl1Wlc1MGN5OWtNeTVwYlhCdmNuUXVjM1I1YkNkY2JseHVjMlYwZFhBdGFXNXdkWFJ6S0NSMWFTMXljeTFqYjNKbExtbHVjSFYwY3lsY2JuTmxkSFZ3TFdKMWRIUnZibk1vSkhWcExYSnpMV052Y21VdVluVjBkRzl1Y3k1c2FXZG9kQ2xjYm5ObGRIVndMV1JsWm1GMWJIUXRhV052YmkxaWRYUjBiMjRvSkhWcExYSnpMV052Y21VdWFXTnZia0oxZEhSdmJuTXViR2xuYUhRdWMzUjViR1VzSUNSMWFTMXljeTFqYjNKbExtSjFkSFJ2Ym5NdWJHbG5hSFF1WW14aFkyc3BPMXh1YzJWMGRYQXRaR1ZtWVhWc2RDMWtZVzVuWlhJdFluVjBkRzl1S0NsY2JuTmxkSFZ3TFhOc2FXUmxjbk1vSkhWcExYSnpMV052Y21VdWMyeHBaR1Z5Y3k1c2FXZG9kQ2xjYmx4dWMyVjBkWEF0ZDJsa1oyVjBYMTlrYjNkdUxXRnljbTkzS0NsY2JuTmxkSFZ3TFhOMGVXeGxMWE4zYVhSamFHVnlLQ2xjYmlJc0lpOHFJU0J1YjNKdFlXeHBlbVV1WTNOeklIWTBMakV1TVNCOElFMUpWQ0JNYVdObGJuTmxJSHdnWjJsMGFIVmlMbU52YlM5dVpXTnZiR0Z6TDI1dmNtMWhiR2w2WlM1amMzTWdLaTljYmx4dUx5b3FYRzRnS2lBeExpQkRhR0Z1WjJVZ2RHaGxJR1JsWm1GMWJIUWdabTl1ZENCbVlXMXBiSGtnYVc0Z1lXeHNJR0p5YjNkelpYSnpJQ2h2Y0dsdWFXOXVZWFJsWkNrdVhHNGdLaUF5TGlCRGIzSnlaV04wSUhSb1pTQnNhVzVsSUdobGFXZG9kQ0JwYmlCaGJHd2dZbkp2ZDNObGNuTXVYRzRnS2lBekxpQlFjbVYyWlc1MElHRmthblZ6ZEcxbGJuUnpJRzltSUdadmJuUWdjMmw2WlNCaFpuUmxjaUJ2Y21sbGJuUmhkR2x2YmlCamFHRnVaMlZ6SUdsdUlFbEZJR0Z1WkNCcFQxTXVYRzRnS2k5Y2JseHVhSFJ0YkNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCellXNXpMWE5sY21sbU95QXZLaUF4SUNvdlhHNGdJR3hwYm1VdGFHVnBaMmgwT2lBeExqRTFPeUF2S2lBeUlDb3ZYRzRnSUMxdGN5MTBaWGgwTFhOcGVtVXRZV1JxZFhOME9pQXhNREFsT3lBdktpQXpJQ292WEc0Z0lDMTNaV0pyYVhRdGRHVjRkQzF6YVhwbExXRmthblZ6ZERvZ01UQXdKVHNnTHlvZ015QXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCMGFHVWdiV0Z5WjJsdUlHbHVJR0ZzYkNCaWNtOTNjMlZ5Y3lBb2IzQnBibWx2Ym1GMFpXUXBMbHh1SUNvdlhHNWNibUp2WkhrZ2UxeHVJQ0J0WVhKbmFXNDZJREE3WEc1OVhHNWNiaThxSUVoVVRVdzFJR1JwYzNCc1lYa2daR1ZtYVc1cGRHbHZibk5jYmlBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JpOHFLbHh1SUNvZ1FXUmtJSFJvWlNCamIzSnlaV04wSUdScGMzQnNZWGtnYVc0Z1NVVWdPUzB1WEc0Z0tpQXhMaUJCWkdRZ2RHaGxJR052Y25KbFkzUWdaR2x6Y0d4aGVTQnBiaUJGWkdkbExDQkpSU3dnWVc1a0lFWnBjbVZtYjNndVhHNGdLaUF5TGlCQlpHUWdkR2hsSUdOdmNuSmxZM1FnWkdsemNHeGhlU0JwYmlCSlJTNWNiaUFxTDF4dVhHNWhjblJwWTJ4bExGeHVZWE5wWkdVc1hHNWtaWFJoYVd4ekxDQXZLaUF4SUNvdlhHNW1hV2RqWVhCMGFXOXVMRnh1Wm1sbmRYSmxMRnh1Wm05dmRHVnlMRnh1YUdWaFpHVnlMRnh1YldGcGJpd2dMeW9nTWlBcUwxeHViV1Z1ZFN4Y2JtNWhkaXhjYm5ObFkzUnBiMjRzWEc1emRXMXRZWEo1SUhzZ0x5b2dNU0FxTDF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JuMWNibHh1THlvcVhHNGdLaUJCWkdRZ2RHaGxJR052Y25KbFkzUWdaR2x6Y0d4aGVTQnBiaUJKUlNBNUxTNWNiaUFxTDF4dVhHNWhkV1JwYnl4Y2JtTmhiblpoY3l4Y2JuQnliMmR5WlhOekxGeHVkbWxrWlc4Z2UxeHVJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNTlYRzVjYmk4cUtseHVJQ29nUVdSa0lIUm9aU0JqYjNKeVpXTjBJR1JwYzNCc1lYa2dhVzRnYVU5VElEUXROeTVjYmlBcUwxeHVYRzVoZFdScGJ6cHViM1FvVzJOdmJuUnliMnh6WFNrZ2UxeHVJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVJQ0JvWldsbmFIUTZJREE3WEc1OVhHNWNiaThxS2x4dUlDb2dRV1JrSUhSb1pTQmpiM0p5WldOMElIWmxjblJwWTJGc0lHRnNhV2R1YldWdWRDQnBiaUJEYUhKdmJXVXNJRVpwY21WbWIzZ3NJR0Z1WkNCUGNHVnlZUzVjYmlBcUwxeHVYRzV3Y205bmNtVnpjeUI3WEc0Z0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCaVlYTmxiR2x1WlR0Y2JuMWNibHh1THlvcVhHNGdLaUJCWkdRZ2RHaGxJR052Y25KbFkzUWdaR2x6Y0d4aGVTQnBiaUJKUlNBeE1DMHVYRzRnS2lBeExpQkJaR1FnZEdobElHTnZjbkpsWTNRZ1pHbHpjR3hoZVNCcGJpQkpSUzVjYmlBcUwxeHVYRzUwWlcxd2JHRjBaU3dnTHlvZ01TQXFMMXh1VzJocFpHUmxibDBnZTF4dUlDQmthWE53YkdGNU9pQnViMjVsTzF4dWZWeHVYRzR2S2lCTWFXNXJjMXh1SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUx5b3FYRzRnS2lBeExpQlNaVzF2ZG1VZ2RHaGxJR2R5WVhrZ1ltRmphMmR5YjNWdVpDQnZiaUJoWTNScGRtVWdiR2x1YTNNZ2FXNGdTVVVnTVRBdVhHNGdLaUF5TGlCU1pXMXZkbVVnWjJGd2N5QnBiaUJzYVc1cmN5QjFibVJsY214cGJtVWdhVzRnYVU5VElEZ3JJR0Z1WkNCVFlXWmhjbWtnT0NzdVhHNGdLaTljYmx4dVlTQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1ME95QXZLaUF4SUNvdlhHNGdJQzEzWldKcmFYUXRkR1Y0ZEMxa1pXTnZjbUYwYVc5dUxYTnJhWEE2SUc5aWFtVmpkSE03SUM4cUlESWdLaTljYm4xY2JseHVMeW9xWEc0Z0tpQlNaVzF2ZG1VZ2RHaGxJRzkxZEd4cGJtVWdiMjRnWm05amRYTmxaQ0JzYVc1cmN5QjNhR1Z1SUhSb1pYa2dZWEpsSUdGc2MyOGdZV04wYVhabElHOXlJR2h2ZG1WeVpXUmNiaUFxSUdsdUlHRnNiQ0JpY205M2MyVnljeUFvYjNCcGJtbHZibUYwWldRcExseHVJQ292WEc1Y2JtRTZZV04wYVhabExGeHVZVHBvYjNabGNpQjdYRzRnSUc5MWRHeHBibVV0ZDJsa2RHZzZJREE3WEc1OVhHNWNiaThxSUZSbGVIUXRiR1YyWld3Z2MyVnRZVzUwYVdOelhHNGdJQ0E5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzR2S2lwY2JpQXFJREV1SUZKbGJXOTJaU0IwYUdVZ1ltOTBkRzl0SUdKdmNtUmxjaUJwYmlCR2FYSmxabTk0SURNNUxTNWNiaUFxSURJdUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCMFpYaDBJR1JsWTI5eVlYUnBiMjRnYVc0Z1EyaHliMjFsTENCRlpHZGxMQ0JKUlN3Z1QzQmxjbUVzSUdGdVpDQlRZV1poY21rdVhHNGdLaTljYmx4dVlXSmljbHQwYVhSc1pWMGdlMXh1SUNCaWIzSmtaWEl0WW05MGRHOXRPaUJ1YjI1bE95QXZLaUF4SUNvdlhHNGdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dkVzVrWlhKc2FXNWxPeUF2S2lBeUlDb3ZYRzRnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nZFc1a1pYSnNhVzVsSUdSdmRIUmxaRHNnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGQnlaWFpsYm5RZ2RHaGxJR1IxY0d4cFkyRjBaU0JoY0hCc2FXTmhkR2x2YmlCdlppQmdZbTlzWkdWeVlDQmllU0IwYUdVZ2JtVjRkQ0J5ZFd4bElHbHVJRk5oWm1GeWFTQTJMbHh1SUNvdlhHNWNibUlzWEc1emRISnZibWNnZTF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nYVc1b1pYSnBkRHRjYm4xY2JseHVMeW9xWEc0Z0tpQkJaR1FnZEdobElHTnZjbkpsWTNRZ1ptOXVkQ0IzWldsbmFIUWdhVzRnUTJoeWIyMWxMQ0JGWkdkbExDQmhibVFnVTJGbVlYSnBMbHh1SUNvdlhHNWNibUlzWEc1emRISnZibWNnZTF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nWW05c1pHVnlPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCbWIyNTBJSE4wZVd4bElHbHVJRUZ1WkhKdmFXUWdOQzR6TFM1Y2JpQXFMMXh1WEc1a1ptNGdlMXh1SUNCbWIyNTBMWE4wZVd4bE9pQnBkR0ZzYVdNN1hHNTlYRzVjYmk4cUtseHVJQ29nUTI5eWNtVmpkQ0IwYUdVZ1ptOXVkQ0J6YVhwbElHRnVaQ0J0WVhKbmFXNGdiMjRnWUdneFlDQmxiR1Z0Wlc1MGN5QjNhWFJvYVc0Z1lITmxZM1JwYjI1Z0lHRnVaRnh1SUNvZ1lHRnlkR2xqYkdWZ0lHTnZiblJsZUhSeklHbHVJRU5vY205dFpTd2dSbWx5WldadmVDd2dZVzVrSUZOaFptRnlhUzVjYmlBcUwxeHVYRzVvTVNCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTW1WdE8xeHVJQ0J0WVhKbmFXNDZJREF1TmpkbGJTQXdPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCaVlXTnJaM0p2ZFc1a0lHRnVaQ0JqYjJ4dmNpQnBiaUJKUlNBNUxTNWNiaUFxTDF4dVhHNXRZWEpySUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMlptTUR0Y2JpQWdZMjlzYjNJNklDTXdNREE3WEc1OVhHNWNiaThxS2x4dUlDb2dRV1JrSUhSb1pTQmpiM0p5WldOMElHWnZiblFnYzJsNlpTQnBiaUJoYkd3Z1luSnZkM05sY25NdVhHNGdLaTljYmx4dWMyMWhiR3dnZTF4dUlDQm1iMjUwTFhOcGVtVTZJRGd3SlR0Y2JuMWNibHh1THlvcVhHNGdLaUJRY21WMlpXNTBJR0J6ZFdKZ0lHRnVaQ0JnYzNWd1lDQmxiR1Z0Wlc1MGN5Qm1jbTl0SUdGbVptVmpkR2x1WnlCMGFHVWdiR2x1WlNCb1pXbG5hSFFnYVc1Y2JpQXFJR0ZzYkNCaWNtOTNjMlZ5Y3k1Y2JpQXFMMXh1WEc1emRXSXNYRzV6ZFhBZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURjMUpUdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklEQTdYRzRnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklHSmhjMlZzYVc1bE8xeHVmVnh1WEc1emRXSWdlMXh1SUNCaWIzUjBiMjA2SUMwd0xqSTFaVzA3WEc1OVhHNWNibk4xY0NCN1hHNGdJSFJ2Y0RvZ0xUQXVOV1Z0TzF4dWZWeHVYRzR2S2lCRmJXSmxaR1JsWkNCamIyNTBaVzUwWEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCMGFHVWdZbTl5WkdWeUlHOXVJR2x0WVdkbGN5QnBibk5wWkdVZ2JHbHVhM01nYVc0Z1NVVWdNVEF0TGx4dUlDb3ZYRzVjYm1sdFp5QjdYRzRnSUdKdmNtUmxjaTF6ZEhsc1pUb2dibTl1WlR0Y2JuMWNibHh1THlvcVhHNGdLaUJJYVdSbElIUm9aU0J2ZG1WeVpteHZkeUJwYmlCSlJTNWNiaUFxTDF4dVhHNXpkbWM2Ym05MEtEcHliMjkwS1NCN1hHNGdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYRzU5WEc1Y2JpOHFJRWR5YjNWd2FXNW5JR052Ym5SbGJuUmNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk4cUtseHVJQ29nTVM0Z1EyOXljbVZqZENCMGFHVWdhVzVvWlhKcGRHRnVZMlVnWVc1a0lITmpZV3hwYm1jZ2IyWWdabTl1ZENCemFYcGxJR2x1SUdGc2JDQmljbTkzYzJWeWN5NWNiaUFxSURJdUlFTnZjbkpsWTNRZ2RHaGxJRzlrWkNCZ1pXMWdJR1p2Ym5RZ2MybDZhVzVuSUdsdUlHRnNiQ0JpY205M2MyVnljeTVjYmlBcUwxeHVYRzVqYjJSbExGeHVhMkprTEZ4dWNISmxMRnh1YzJGdGNDQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQnRiMjV2YzNCaFkyVXNJRzF2Ym05emNHRmpaVHNnTHlvZ01TQXFMMXh1SUNCbWIyNTBMWE5wZW1VNklERmxiVHNnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFRmtaQ0IwYUdVZ1kyOXljbVZqZENCdFlYSm5hVzRnYVc0Z1NVVWdPQzVjYmlBcUwxeHVYRzVtYVdkMWNtVWdlMXh1SUNCdFlYSm5hVzQ2SURGbGJTQTBNSEI0TzF4dWZWeHVYRzR2S2lwY2JpQXFJREV1SUVGa1pDQjBhR1VnWTI5eWNtVmpkQ0JpYjNnZ2MybDZhVzVuSUdsdUlFWnBjbVZtYjNndVhHNGdLaUF5TGlCVGFHOTNJSFJvWlNCdmRtVnlabXh2ZHlCcGJpQkZaR2RsSUdGdVpDQkpSUzVjYmlBcUwxeHVYRzVvY2lCN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdOdmJuUmxiblF0WW05NE95QXZLaUF4SUNvdlhHNGdJR2hsYVdkb2REb2dNRHNnTHlvZ01TQXFMMXh1SUNCdmRtVnlabXh2ZHpvZ2RtbHphV0pzWlRzZ0x5b2dNaUFxTDF4dWZWeHVYRzR2S2lCR2IzSnRjMXh1SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUx5b3FYRzRnS2lBeExpQkRhR0Z1WjJVZ1ptOXVkQ0J3Y205d1pYSjBhV1Z6SUhSdklHQnBibWhsY21sMFlDQnBiaUJoYkd3Z1luSnZkM05sY25NZ0tHOXdhVzVwYjI1aGRHVmtLUzVjYmlBcUlESXVJRkpsYlc5MlpTQjBhR1VnYldGeVoybHVJR2x1SUVacGNtVm1iM2dnWVc1a0lGTmhabUZ5YVM1Y2JpQXFMMXh1WEc1aWRYUjBiMjRzWEc1cGJuQjFkQ3hjYm05d2RHZHliM1Z3TEZ4dWMyVnNaV04wTEZ4dWRHVjRkR0Z5WldFZ2UxeHVJQ0JtYjI1ME9pQnBibWhsY21sME95QXZLaUF4SUNvdlhHNGdJRzFoY21kcGJqb2dNRHNnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGSmxjM1J2Y21VZ2RHaGxJR1p2Ym5RZ2QyVnBaMmgwSUhWdWMyVjBJR0o1SUhSb1pTQndjbVYyYVc5MWN5QnlkV3hsTGx4dUlDb3ZYRzVjYm05d2RHZHliM1Z3SUh0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUTdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1UyaHZkeUIwYUdVZ2IzWmxjbVpzYjNjZ2FXNGdTVVV1WEc0Z0tpQXhMaUJUYUc5M0lIUm9aU0J2ZG1WeVpteHZkeUJwYmlCRlpHZGxMbHh1SUNvdlhHNWNibUoxZEhSdmJpeGNibWx1Y0hWMElIc2dMeW9nTVNBcUwxeHVJQ0J2ZG1WeVpteHZkem9nZG1semFXSnNaVHRjYm4xY2JseHVMeW9xWEc0Z0tpQlNaVzF2ZG1VZ2RHaGxJR2x1YUdWeWFYUmhibU5sSUc5bUlIUmxlSFFnZEhKaGJuTm1iM0p0SUdsdUlFVmtaMlVzSUVacGNtVm1iM2dzSUdGdVpDQkpSUzVjYmlBcUlERXVJRkpsYlc5MlpTQjBhR1VnYVc1b1pYSnBkR0Z1WTJVZ2IyWWdkR1Y0ZENCMGNtRnVjMlp2Y20wZ2FXNGdSbWx5WldadmVDNWNiaUFxTDF4dVhHNWlkWFIwYjI0c1hHNXpaV3hsWTNRZ2V5QXZLaUF4SUNvdlhHNGdJSFJsZUhRdGRISmhibk5tYjNKdE9pQnViMjVsTzF4dWZWeHVYRzR2S2lwY2JpQXFJREV1SUZCeVpYWmxiblFnWVNCWFpXSkxhWFFnWW5WbklIZG9aWEpsSUNneUtTQmtaWE4wY205NWN5QnVZWFJwZG1VZ1lHRjFaR2x2WUNCaGJtUWdZSFpwWkdWdllGeHVJQ29nSUNBZ1kyOXVkSEp2YkhNZ2FXNGdRVzVrY205cFpDQTBMbHh1SUNvZ01pNGdRMjl5Y21WamRDQjBhR1VnYVc1aFltbHNhWFI1SUhSdklITjBlV3hsSUdOc2FXTnJZV0pzWlNCMGVYQmxjeUJwYmlCcFQxTWdZVzVrSUZOaFptRnlhUzVjYmlBcUwxeHVYRzVpZFhSMGIyNHNYRzVvZEcxc0lGdDBlWEJsUFZ3aVluVjBkRzl1WENKZExDQXZLaUF4SUNvdlhHNWJkSGx3WlQxY0luSmxjMlYwWENKZExGeHVXM1I1Y0dVOVhDSnpkV0p0YVhSY0lsMGdlMXh1SUNBdGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNklHSjFkSFJ2YmpzZ0x5b2dNaUFxTDF4dWZWeHVYRzR2S2lwY2JpQXFJRkpsYlc5MlpTQjBhR1VnYVc1dVpYSWdZbTl5WkdWeUlHRnVaQ0J3WVdSa2FXNW5JR2x1SUVacGNtVm1iM2d1WEc0Z0tpOWNibHh1WW5WMGRHOXVPam90Ylc5NkxXWnZZM1Z6TFdsdWJtVnlMRnh1VzNSNWNHVTlYQ0ppZFhSMGIyNWNJbDA2T2kxdGIzb3RabTlqZFhNdGFXNXVaWElzWEc1YmRIbHdaVDFjSW5KbGMyVjBYQ0pkT2pvdGJXOTZMV1p2WTNWekxXbHVibVZ5TEZ4dVczUjVjR1U5WENKemRXSnRhWFJjSWwwNk9pMXRiM290Wm05amRYTXRhVzV1WlhJZ2UxeHVJQ0JpYjNKa1pYSXRjM1I1YkdVNklHNXZibVU3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1VtVnpkRzl5WlNCMGFHVWdabTlqZFhNZ2MzUjViR1Z6SUhWdWMyVjBJR0o1SUhSb1pTQndjbVYyYVc5MWN5QnlkV3hsTGx4dUlDb3ZYRzVjYm1KMWRIUnZiam90Ylc5NkxXWnZZM1Z6Y21sdVp5eGNibHQwZVhCbFBWd2lZblYwZEc5dVhDSmRPaTF0YjNvdFptOWpkWE55YVc1bkxGeHVXM1I1Y0dVOVhDSnlaWE5sZEZ3aVhUb3RiVzk2TFdadlkzVnpjbWx1Wnl4Y2JsdDBlWEJsUFZ3aWMzVmliV2wwWENKZE9pMXRiM290Wm05amRYTnlhVzVuSUh0Y2JpQWdiM1YwYkdsdVpUb2dNWEI0SUdSdmRIUmxaQ0JDZFhSMGIyNVVaWGgwTzF4dWZWeHVYRzR2S2lwY2JpQXFJRU5vWVc1blpTQjBhR1VnWW05eVpHVnlMQ0J0WVhKbmFXNHNJR0Z1WkNCd1lXUmthVzVuSUdsdUlHRnNiQ0JpY205M2MyVnljeUFvYjNCcGJtbHZibUYwWldRcExseHVJQ292WEc1Y2JtWnBaV3hrYzJWMElIdGNiaUFnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSTJNd1l6QmpNRHRjYmlBZ2JXRnlaMmx1T2lBd0lESndlRHRjYmlBZ2NHRmtaR2x1WnpvZ01DNHpOV1Z0SURBdU5qSTFaVzBnTUM0M05XVnRPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlERXVJRU52Y25KbFkzUWdkR2hsSUhSbGVIUWdkM0poY0hCcGJtY2dhVzRnUldSblpTQmhibVFnU1VVdVhHNGdLaUF5TGlCRGIzSnlaV04wSUhSb1pTQmpiMnh2Y2lCcGJtaGxjbWwwWVc1alpTQm1jbTl0SUdCbWFXVnNaSE5sZEdBZ1pXeGxiV1Z1ZEhNZ2FXNGdTVVV1WEc0Z0tpQXpMaUJTWlcxdmRtVWdkR2hsSUhCaFpHUnBibWNnYzI4Z1pHVjJaV3h2Y0dWeWN5QmhjbVVnYm05MElHTmhkV2RvZENCdmRYUWdkMmhsYmlCMGFHVjVJSHBsY204Z2IzVjBYRzRnS2lBZ0lDQmdabWxsYkdSelpYUmdJR1ZzWlcxbGJuUnpJR2x1SUdGc2JDQmljbTkzYzJWeWN5NWNiaUFxTDF4dVhHNXNaV2RsYm1RZ2UxeHVJQ0JpYjNndGMybDZhVzVuT2lCaWIzSmtaWEl0WW05NE95QXZLaUF4SUNvdlhHNGdJR052Ykc5eU9pQnBibWhsY21sME95QXZLaUF5SUNvdlhHNGdJR1JwYzNCc1lYazZJSFJoWW14bE95QXZLaUF4SUNvdlhHNGdJRzFoZUMxM2FXUjBhRG9nTVRBd0pUc2dMeW9nTVNBcUwxeHVJQ0J3WVdSa2FXNW5PaUF3T3lBdktpQXpJQ292WEc0Z0lIZG9hWFJsTFhOd1lXTmxPaUJ1YjNKdFlXdzdJQzhxSURFZ0tpOWNibjFjYmx4dUx5b3FYRzRnS2lCU1pXMXZkbVVnZEdobElHUmxabUYxYkhRZ2RtVnlkR2xqWVd3Z2MyTnliMnhzWW1GeUlHbHVJRWxGTGx4dUlDb3ZYRzVjYm5SbGVIUmhjbVZoSUh0Y2JpQWdiM1psY21ac2IzYzZJR0YxZEc4N1hHNTlYRzVjYmk4cUtseHVJQ29nTVM0Z1FXUmtJSFJvWlNCamIzSnlaV04wSUdKdmVDQnphWHBwYm1jZ2FXNGdTVVVnTVRBdExseHVJQ29nTWk0Z1VtVnRiM1psSUhSb1pTQndZV1JrYVc1bklHbHVJRWxGSURFd0xTNWNiaUFxTDF4dVhHNWJkSGx3WlQxY0ltTm9aV05yWW05NFhDSmRMRnh1VzNSNWNHVTlYQ0p5WVdScGIxd2lYU0I3WEc0Z0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3SUM4cUlERWdLaTljYmlBZ2NHRmtaR2x1WnpvZ01Ec2dMeW9nTWlBcUwxeHVmVnh1WEc0dktpcGNiaUFxSUVOdmNuSmxZM1FnZEdobElHTjFjbk52Y2lCemRIbHNaU0J2WmlCcGJtTnlaVzFsYm5RZ1lXNWtJR1JsWTNKbGJXVnVkQ0JpZFhSMGIyNXpJR2x1SUVOb2NtOXRaUzVjYmlBcUwxeHVYRzViZEhsd1pUMWNJbTUxYldKbGNsd2lYVG82TFhkbFltdHBkQzFwYm01bGNpMXpjR2x1TFdKMWRIUnZiaXhjYmx0MGVYQmxQVndpYm5WdFltVnlYQ0pkT2pvdGQyVmlhMmwwTFc5MWRHVnlMWE53YVc0dFluVjBkRzl1SUh0Y2JpQWdhR1ZwWjJoME9pQmhkWFJ2TzF4dWZWeHVYRzR2S2lwY2JpQXFJREV1SUVOdmNuSmxZM1FnZEdobElHOWtaQ0JoY0hCbFlYSmhibU5sSUdsdUlFTm9jbTl0WlNCaGJtUWdVMkZtWVhKcExseHVJQ29nTWk0Z1EyOXljbVZqZENCMGFHVWdiM1YwYkdsdVpTQnpkSGxzWlNCcGJpQlRZV1poY21rdVhHNGdLaTljYmx4dVczUjVjR1U5WENKelpXRnlZMmhjSWwwZ2UxeHVJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUhSbGVIUm1hV1ZzWkRzZ0x5b2dNU0FxTDF4dUlDQnZkWFJzYVc1bExXOW1abk5sZERvZ0xUSndlRHNnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCMGFHVWdhVzV1WlhJZ2NHRmtaR2x1WnlCaGJtUWdZMkZ1WTJWc0lHSjFkSFJ2Ym5NZ2FXNGdRMmh5YjIxbElHRnVaQ0JUWVdaaGNta2diMjRnVDFNZ1dDNWNiaUFxTDF4dVhHNWJkSGx3WlQxY0luTmxZWEpqYUZ3aVhUbzZMWGRsWW10cGRDMXpaV0Z5WTJndFkyRnVZMlZzTFdKMWRIUnZiaXhjYmx0MGVYQmxQVndpYzJWaGNtTm9YQ0pkT2pvdGQyVmlhMmwwTFhObFlYSmphQzFrWldOdmNtRjBhVzl1SUh0Y2JpQWdMWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPaUJ1YjI1bE8xeHVmVnh1WEc0dktpcGNiaUFxSUVOdmNuSmxZM1FnZEdobElIUmxlSFFnYzNSNWJHVWdiMllnY0d4aFkyVm9iMnhrWlhKeklHbHVJRU5vY205dFpTd2dSV1JuWlN3Z1lXNWtJRk5oWm1GeWFTNWNiaUFxTDF4dVhHNDZPaTEzWldKcmFYUXRhVzV3ZFhRdGNHeGhZMlZvYjJ4a1pYSWdlMXh1SUNCamIyeHZjam9nYVc1b1pYSnBkRHRjYmlBZ2IzQmhZMmwwZVRvZ01DNDFORHRjYm4xY2JseHVMeW9xWEc0Z0tpQXhMaUJEYjNKeVpXTjBJSFJvWlNCcGJtRmlhV3hwZEhrZ2RHOGdjM1I1YkdVZ1kyeHBZMnRoWW14bElIUjVjR1Z6SUdsdUlHbFBVeUJoYm1RZ1UyRm1ZWEpwTGx4dUlDb2dNaTRnUTJoaGJtZGxJR1p2Ym5RZ2NISnZjR1Z5ZEdsbGN5QjBieUJnYVc1b1pYSnBkR0FnYVc0Z1UyRm1ZWEpwTGx4dUlDb3ZYRzVjYmpvNkxYZGxZbXRwZEMxbWFXeGxMWFZ3Ykc5aFpDMWlkWFIwYjI0Z2UxeHVJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUdKMWRIUnZianNnTHlvZ01TQXFMMXh1SUNCbWIyNTBPaUJwYm1obGNtbDBPeUF2S2lBeUlDb3ZYRzU5WEc1Y2JpOHFYRzRnS2lCVGRIbHNaU0J6WlhSMWNDQm1iM0lnY21Wa2MybG1kQzExYVNCaVlYTmxaQ0J6YVdaMGN5NWNiaUFxWEc0Z0tpQXRJRkJ5YjNacFpHVnpPbHh1SUNvZ0lDQXVJSEpsWVdSNUxYUnZMWFZ6WlNCVlNTQmpiMjF3YjI1bGJuUnpYRzRnS2lBZ0lDNGdjbVZ6Y0c5dWMybDJaU0IwZVhCbElITjVjM1JsYlZ4dUlDb2dJQ0F1SUdKeVpXRnJjRzlwYm5RZ2MyVjBkWEFnS0hacFlTQW5jblZ3ZEhWeVpTY3BYRzRnS2lBZ0lDNGdZMjl0Ylc5dUlHWjFibU4wYVc5dVlXeHBkSGtnYkdsclpTQnlaWE5sZEN3Z2NHRjBkR1Z5Ym5NZ1lXNWtJR1p2Ym5SelhHNGdLbHh1SUNvZ0xTQlZjMlZrSUdKNU9seHVJQ29nSUNBdUlISmxaSE5wWm5RdGJHbG5hSFJjYmlBcUlDQWdMaUJ5WldSemFXWjBMV1JoY210Y2JpQXFYRzRnS2lBdElFWnZiR1JsY2lCemRISjFZM1IxY21VNlhHNGdLbHh1SUNvZ0lDQXVMMnhwWWlBZ0lDQWdJQ0FnTFQ0Z2JXbDRhVzRnWVc1a0lHWjFibU4wYVc5dUlHeHBZbkpoY25sY2JpQXFJQ0FnTGk5amIyMXRiMjRnSUNBZ0lDMCtJRU5UVXlCelpYUjFjQ0JoYm1RZ1kyOXRiVzl1SUdOc1lYTnpaWE5jYmlBcUlDQWdMaTlqYjIxd2IyNWxiblJ6SUMwK0lGVkpJR052YlhCdmJtVnVkSE5jYmlBcUwxeHVMeXBjYmlBcUlFTnZibVpwWjNWeVlYUnBiMjRnZG1saElHOWlhbVZqZENBbkpIVnBMWEp6TFdOdmNtVW5YRzRnS2k5Y2JpOHFYRzRnS2lCTmFYaHBiaTltZFc1amRHbHZibk1nYkdsaWNtRnllVnh1SUNwY2JpQXFJRU52YlcxdmJpQnRhWGhwYm5NZ1lXNWtJR1oxYm1OMGFXOXVjeUIxYzJWa0lHSjVJSEpsWkhOcFpuUXRkV2t1WEc0Z0tpOWNiaThxWEc0Z0tpQkNZWE5sSUdOdmJtWnBaM1Z5WVhScGIyNGdZVzVrSUdOdmJXMXZiaUJqYkdGemMyVnpPbHh1SUNwY2JpQXFJRU5UVXlCaVlYTmxJSE5sZEhWd0lHRnVaQ0JqYjIxdGIyNGdRMU5USUdOc1lYTnpaWE11WEc0Z0tpOWNibUp2WkhrZ2UxeHVJQ0J0WVhKbmFXNDZJREE3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzRnSUcxcGJpMW9aV2xuYUhRNklERXdNQ1U3WEc1OVhHNHVMWEJoZEhSbGNtNHRaRzkzYmkxaGNuSnZkeTFuY21WbGJpQjdYRzRnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJaTlwWTI5dWN5OWtiM2R1TFdGeWNtOTNMV2R5WldWdUxuTjJaMXdpS1R0Y2JpQWdZbUZqYTJkeWIzVnVaQzF5WlhCbFlYUTZJSEpsY0dWaGREdGNiaUFnWW1GamEyZHliM1Z1WkMxemFYcGxPaUF4TW5CNElEZHdlRHRjYm4xY2JpNHRjR0YwZEdWeWJpMXlaV1J6YVdaMExXeHZaMjhnZTF4dUlDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQjFjbXdvWENJdmFXTnZibk12Y21Wa2MybG1kQzFzYjJkdkxYSmxaQzA0TGpFdWMzWm5YQ0lwTzF4dUlDQmlZV05yWjNKdmRXNWtMWEpsY0dWaGREb2djbVZ3WldGME8xeHVJQ0JpWVdOclozSnZkVzVrTFhOcGVtVTZJRGR3ZUNBM2NIZzdYRzU5WEc0dVlXNXBiV0YwWlMxdmNHRmphWFI1SUh0Y2JpQWdkSEpoYm5OcGRHbHZiam9nYjNCaFkybDBlU0JsWVhObExXbHVJRFF3TUcxek8xeHVmVnh1TG1aaFpHVXRhVzRnZTF4dUlDQmhibWx0WVhScGIyNDZJR1poWkdWcGJpQTBNREJ0Y3lCbFlYTmxMV2x1SURCeklERWdibTl5YldGc0lHSnZkR2c3WEc1OVhHNHVaR1ZzWVhrZ2UxeHVJQ0JoYm1sdFlYUnBiMjR0WkdWc1lYazZJRFF3TUcxek8xeHVmVnh1UUMxdGIzb3RhMlY1Wm5KaGJXVnpJR1poWkdWcGJpQjdYRzRnSUdaeWIyMGdlMXh1SUNBZ0lHOXdZV05wZEhrNklEQTdYRzRnSUgxY2JpQWdkRzhnZTF4dUlDQWdJRzl3WVdOcGRIazZJREU3WEc0Z0lIMWNibjFjYmtBdGQyVmlhMmwwTFd0bGVXWnlZVzFsY3lCbVlXUmxhVzRnZTF4dUlDQm1jbTl0SUh0Y2JpQWdJQ0J2Y0dGamFYUjVPaUF3TzF4dUlDQjlYRzRnSUhSdklIdGNiaUFnSUNCdmNHRmphWFI1T2lBeE8xeHVJQ0I5WEc1OVhHNUFMVzh0YTJWNVpuSmhiV1Z6SUdaaFpHVnBiaUI3WEc0Z0lHWnliMjBnZTF4dUlDQWdJRzl3WVdOcGRIazZJREE3WEc0Z0lIMWNiaUFnZEc4Z2UxeHVJQ0FnSUc5d1lXTnBkSGs2SURFN1hHNGdJSDFjYm4xY2JrQnJaWGxtY21GdFpYTWdabUZrWldsdUlIdGNiaUFnWm5KdmJTQjdYRzRnSUNBZ2IzQmhZMmwwZVRvZ01EdGNiaUFnZlZ4dUlDQjBieUI3WEc0Z0lDQWdiM0JoWTJsMGVUb2dNVHRjYmlBZ2ZWeHVmVnh1TG1ocFpHUmxiaUI3WEc0Z0lHOXdZV05wZEhrNklEQTdYRzU5WEc0dWFHRnphQ0I3WEc0Z0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklISmxjR1ZoZEdsdVp5MXNhVzVsWVhJdFozSmhaR2xsYm5Rb01USTFaR1ZuTENCMGNtRnVjM0JoY21WdWRDd2dkSEpoYm5Od1lYSmxiblFnTW5CNExDQnlaMkpoS0RBc01Dd3dMREF1TWlrZ01uQjRMQ0J5WjJKaEtEQXNNQ3d3TERBdU1pa2dNM0I0TENCMGNtRnVjM0JoY21WdWRDQXpjSGdzSUhSeVlXNXpjR0Z5Wlc1MElEVndlQ3dnY21kaVlTZ3dMREFzTUN3d0xqSXBJRFZ3ZUNrN1hHNTlYRzR1TFhKekxXbGpiMjR0Y21Wa2MybG1kQzF5WldRZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b1hDSm9kSFJ3Y3pvdkwzTjBZWFJwWXk1eVpXUnphV1owTG1sdkwyRnpjMlYwY3k5MWFTMXljeTFqYjNKbEwybGpiMjV6THkxeWN5MXBZMjl1TFhKbFpITnBablF0Y21Wa0xuTjJaMXdpS1R0Y2JpQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nTlRBbElEVXdKVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lBek1IQjRPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2JtOHRjbVZ3WldGME8xeHVmVnh1TG5KekxXbGpiMjR0Y21Wa2MybG1kQzFqYkc5MVpDQjdYRzRnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJbWgwZEhCek9pOHZjM1JoZEdsakxuSmxaSE5wWm5RdWFXOHZZWE56WlhSekwzVnBMWEp6TFdOdmNtVXZhV052Ym5NdkxYSnpMV2xqYjI0dGNtVmtjMmxtZEMxamJHOTFaQzV6ZG1kY0lpazdYRzRnSUdKaFkydG5jbTkxYm1RdGNHOXphWFJwYjI0NklEVXdKU0ExTUNVN1hHNGdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dNekJ3ZUR0Y2JpQWdZbUZqYTJkeWIzVnVaQzF5WlhCbFlYUTZJRzV2TFhKbGNHVmhkRHRjYm4xY2JpNHRjbk10YVdOdmJpMXlaV1J6YVdaMExYZG9hWFJsSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dkWEpzS0Z3aWFIUjBjSE02THk5emRHRjBhV011Y21Wa2MybG1kQzVwYnk5aGMzTmxkSE12ZFdrdGNuTXRZMjl5WlM5cFkyOXVjeTh0Y25NdGFXTnZiaTF5WldSemFXWjBMWGRvYVhSbExuTjJaMXdpS1R0Y2JpQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nTlRBbElEVXdKVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lBek1IQjRPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2JtOHRjbVZ3WldGME8xeHVmVnh1TGkxeWN5MXBZMjl1TFdkcGRHaDFZaUI3WEc0Z0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklIVnliQ2hjSW1oMGRIQnpPaTh2YzNSaGRHbGpMbkpsWkhOcFpuUXVhVzh2WVhOelpYUnpMM1ZwTFhKekxXTnZjbVV2YVcxaFoyVnpMMmxqYjI0dFoybDBhSFZpTG5OMloxd2lLVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dOVEFsSURVd0pUdGNiaUFnWW1GamEyZHliM1Z1WkMxemFYcGxPaUF6TUhCNE8xeHVJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwTzF4dWZWeHVMaTF5Y3kxcFkyOXVMV2R2YjJkc1pTQjdYRzRnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJbWgwZEhCek9pOHZjM1JoZEdsakxuSmxaSE5wWm5RdWFXOHZZWE56WlhSekwzVnBMWEp6TFdOdmNtVXZhVzFoWjJWekwybGpiMjR0WjI5dloyeGxMbk4yWjF3aUtUdGNiaUFnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ05UQWxJRFV3SlR0Y2JpQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQXpNSEI0TzF4dUlDQmlZV05yWjNKdmRXNWtMWEpsY0dWaGREb2dibTh0Y21Wd1pXRjBPMXh1ZlZ4dUxpMXljeTFwWTI5dUxYTnNZV05ySUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dkWEpzS0Z3aWFIUjBjSE02THk5emRHRjBhV011Y21Wa2MybG1kQzVwYnk5aGMzTmxkSE12ZFdrdGNuTXRZMjl5WlM5cGJXRm5aWE12YVdOdmJpMXpiR0ZqYXk1d2JtZGNJaWs3WEc0Z0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJRFV3SlNBMU1DVTdYRzRnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nTXpCd2VEdGNiaUFnWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2JuMWNiaTR0Y25NdGFXTnZiaTEwZDJsMGRHVnlJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2RYSnNLRndpYUhSMGNITTZMeTl6ZEdGMGFXTXVjbVZrYzJsbWRDNXBieTloYzNObGRITXZkV2t0Y25NdFkyOXlaUzlwYldGblpYTXZhV052YmkxMGQybDBkR1Z5TG5OMloxd2lLVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dOVEFsSURVd0pUdGNiaUFnWW1GamEyZHliM1Z1WkMxemFYcGxPaUF6TUhCNE8xeHVJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwTzF4dWZWeHVMaTF5Y3kxcFkyOXVMWE5sZEhScGJtZHpJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2RYSnNLRndpYUhSMGNITTZMeTl6ZEdGMGFXTXVjbVZrYzJsbWRDNXBieTloYzNObGRITXZkV2t0Y25NdFkyOXlaUzlwYldGblpYTXZhV052YmkxelpYUjBhVzVuY3k1emRtZGNJaWs3WEc0Z0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJRFV3SlNBMU1DVTdYRzRnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nTXpCd2VEdGNiaUFnWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2JuMWNiaTR0Y25NdGFXTnZiaTFsZUdsMElIdGNiaUFnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tGd2lhSFIwY0hNNkx5OXpkR0YwYVdNdWNtVmtjMmxtZEM1cGJ5OWhjM05sZEhNdmRXa3Rjbk10WTI5eVpTOXBiV0ZuWlhNdmFXTnZiaTFsZUdsMExuTjJaMXdpS1R0Y2JpQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nTlRBbElEVXdKVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lBek1IQjRPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2JtOHRjbVZ3WldGME8xeHVmVnh1TGkxeWN5MXBZMjl1TFhCeWIyWnBiR1VnZTF4dUlDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQjFjbXdvWENKb2RIUndjem92TDNOMFlYUnBZeTV5WldSemFXWjBMbWx2TDJGemMyVjBjeTkxYVMxeWN5MWpiM0psTDJsdFlXZGxjeTlwWTI5dUxYQnliMlpwYkdVdWMzWm5YQ0lwTzF4dUlDQmlZV05yWjNKdmRXNWtMWEJ2YzJsMGFXOXVPaUExTUNVZ05UQWxPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SURNd2NIZzdYRzRnSUdKaFkydG5jbTkxYm1RdGNtVndaV0YwT2lCdWJ5MXlaWEJsWVhRN1hHNTlYRzR1TFhKekxXbGpiMjR0Wkc5M2JpMWhjbkp2ZHkxbmNtVmxiaUI3WEc0Z0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklIVnliQ2hjSW1oMGRIQnpPaTh2YzNSaGRHbGpMbkpsWkhOcFpuUXVhVzh2WVhOelpYUnpMM1ZwTFhKekxXTnZjbVV2YVcxaFoyVnpMMmxqYjI0dFpHOTNiaTFoY25KdmR5MW5jbVZsYmk1emRtZGNJaWs3WEc0Z0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJRFV3SlNBMU1DVTdYRzRnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nTXpCd2VEdGNiaUFnWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2JuMWNiaTR0Y25NdGFXTnZiaTFzYjJkdmRYUWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29YQ0pvZEhSd2N6b3ZMM04wWVhScFl5NXlaV1J6YVdaMExtbHZMMkZ6YzJWMGN5OTFhUzF5Y3kxamIzSmxMMmxqYjI1ekx5MXljeTFwWTI5dUxXeHZaMjkxZEM1emRtZGNJaWs3WEc0Z0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJRFV3SlNBMU1DVTdYRzRnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nTXpCd2VEdGNiaUFnWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2JuMWNiaTR0Y25NdGFXTnZiaTF3Y205bWFXeGxJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2RYSnNLRndpYUhSMGNITTZMeTl6ZEdGMGFXTXVjbVZrYzJsbWRDNXBieTloYzNObGRITXZkV2t0Y25NdFkyOXlaUzlwWTI5dWN5OHRjbk10YVdOdmJpMXdjbTltYVd4bExuTjJaMXdpS1R0Y2JpQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nTlRBbElEVXdKVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lBek1IQjRPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2JtOHRjbVZ3WldGME8xeHVmVnh1TGkxeWN5MXBZMjl1TFdSaGMyaGliMkZ5WkNCN1hHNGdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNoY0ltaDBkSEJ6T2k4dmMzUmhkR2xqTG5KbFpITnBablF1YVc4dllYTnpaWFJ6TDNWcExYSnpMV052Y21VdmFXTnZibk12TFhKekxXbGpiMjR0WkdGemFHSnZZWEprTG5OMloxd2lLVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dOVEFsSURVd0pUdGNiaUFnWW1GamEyZHliM1Z1WkMxemFYcGxPaUF5TkhCNE8xeHVJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwTzF4dWZWeHVMaTF5Y3kxcFkyOXVMV05oZEdGc2IyZDFaU0I3WEc0Z0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklIVnliQ2hjSW1oMGRIQnpPaTh2YzNSaGRHbGpMbkpsWkhOcFpuUXVhVzh2WVhOelpYUnpMM1ZwTFhKekxXTnZjbVV2YVdOdmJuTXZMWEp6TFdsamIyNHRZMkYwWVd4dlozVmxMbk4yWjF3aUtUdGNiaUFnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ05UQWxJRFV3SlR0Y2JpQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQXlOSEI0TzF4dUlDQmlZV05yWjNKdmRXNWtMWEpsY0dWaGREb2dibTh0Y21Wd1pXRjBPMXh1ZlZ4dUxpMXljeTFwWTI5dUxYZHZjbXR6YUc5d0lIdGNiaUFnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tGd2lhSFIwY0hNNkx5OXpkR0YwYVdNdWNtVmtjMmxtZEM1cGJ5OWhjM05sZEhNdmRXa3Rjbk10WTI5eVpTOXBZMjl1Y3k4dGNuTXRhV052YmkxM2IzSnJjMmh2Y0M1emRtZGNJaWs3WEc0Z0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJRFV3SlNBMU1DVTdYRzRnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nTWpSd2VEdGNiaUFnWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2JuMWNiaTR0Y25NdGFXTnZiaTEzYVhKbFpuSmhiV1V0WW14MVpTQjdYRzRnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJbWgwZEhCek9pOHZjM1JoZEdsakxuSmxaSE5wWm5RdWFXOHZZWE56WlhSekwzVnBMWEp6TFdOdmNtVXZhV052Ym5NdkxYSnpMV2xqYjI0dGQybHlaV1p5WVcxbExXSnNkV1V1YzNablhDSXBPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQTFNQ1VnTlRBbE8xeHVJQ0JpWVdOclozSnZkVzVrTFhOcGVtVTZJRE13Y0hnN1hHNGdJR0poWTJ0bmNtOTFibVF0Y21Wd1pXRjBPaUJ1YnkxeVpYQmxZWFE3WEc1OVhHNHVMWEp6TFdsamIyNHRaWGh3WVc1a0lIdGNiaUFnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tGd2lhSFIwY0hNNkx5OXpkR0YwYVdNdWNtVmtjMmxtZEM1cGJ5OWhjM05sZEhNdmRXa3Rjbk10WTI5eVpTOXBZMjl1Y3k4dGNuTXRhV052YmkxbGVIQmhibVF1YzNablhDSXBPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYQnZjMmwwYVc5dU9pQTFNQ1VnTlRBbE8xeHVJQ0JpWVdOclozSnZkVzVrTFhOcGVtVTZJRE13Y0hnN1hHNGdJR0poWTJ0bmNtOTFibVF0Y21Wd1pXRjBPaUJ1YnkxeVpYQmxZWFE3WEc1OVhHNHVMWEp6TFdsamIyNHRaWGh3WVc1a0xYTndiR2wwSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dkWEpzS0Z3aWFIUjBjSE02THk5emRHRjBhV011Y21Wa2MybG1kQzVwYnk5aGMzTmxkSE12ZFdrdGNuTXRZMjl5WlM5cFkyOXVjeTh0Y25NdGFXTnZiaTFsZUhCaGJtUXRjM0JzYVhRdWMzWm5YQ0lwTzF4dUlDQmlZV05yWjNKdmRXNWtMWEJ2YzJsMGFXOXVPaUExTUNVZ05UQWxPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SURNd2NIZzdYRzRnSUdKaFkydG5jbTkxYm1RdGNtVndaV0YwT2lCdWJ5MXlaWEJsWVhRN1hHNTlYRzR1TFhKekxXbGpiMjR0WlhocGRDQjdYRzRnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJbWgwZEhCek9pOHZjM1JoZEdsakxuSmxaSE5wWm5RdWFXOHZZWE56WlhSekwzVnBMWEp6TFdOdmNtVXZhV052Ym5NdkxYSnpMV2xqYjI0dFpYaHBkQzV6ZG1kY0lpazdYRzRnSUdKaFkydG5jbTkxYm1RdGNHOXphWFJwYjI0NklEVXdKU0ExTUNVN1hHNGdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dNekJ3ZUR0Y2JpQWdZbUZqYTJkeWIzVnVaQzF5WlhCbFlYUTZJRzV2TFhKbGNHVmhkRHRjYm4xY2JpOHFJRWhsWVdScGJtY2dabTl1ZENCQWFXMXdiM0owSUhWeWJDaGNJbWgwZEhCek9pOHZabTl1ZEhNdVoyOXZaMnhsWVhCcGN5NWpiMjB2WTNOelAyWmhiV2xzZVQxU1lXeGxkMkY1T2pJd01Gd2lLVHNnS2k5Y2JpOHFJR3hoZEdsdUlDb3ZYRzVBWm05dWRDMW1ZV05sSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNkU1lXeGxkMkY1Snp0Y2JpQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dNakF3TzF4dUlDQnpjbU02SUd4dlkyRnNLQ2RTWVd4bGQyRjVJRVY0ZEhKaFRHbG5hSFFuS1N3Z2JHOWpZV3dvSjFKaGJHVjNZWGt0UlhoMGNtRk1hV2RvZENjcExDQjFjbXdvWENKb2RIUndjem92TDJadmJuUnpMbWR6ZEdGMGFXTXVZMjl0TDNNdmNtRnNaWGRoZVM5Mk1URXZPRXRvV21RelZsRkNkRmhVUVhwdWRrdHFkeTFyTnpOb2NIY3pjR2Q1TW1kQmFTMUpjRGRYVUUxcE1DNTNiMlptWENJcElHWnZjbTFoZENnbmQyOW1aaWNwTENCMWNtd29YQ0pvZEhSd2N6b3ZMMlp2Ym5SekxtZHpkR0YwYVdNdVkyOXRMM012Y21Gc1pYZGhlUzkyTVRFdk9FdG9XbVF6VmxGQ2RGaFVRWHB1ZGt0cWR5MXJlVE5WVTBKdVUzWndhMjl3VVdGVlVpMHljamRwVlM1MGRHWmNJaWtnWm05eWJXRjBLQ2QwY25WbGRIbHdaU2NwTzF4dWZWeHVRR1p2Ym5RdFptRmpaU0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUFuVW1Gc1pYZGhlU2M3WEc0Z0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNiaUFnWm05dWRDMTNaV2xuYUhRNklESXdNRHRjYmlBZ2MzSmpPaUJzYjJOaGJDZ25VbUZzWlhkaGVTQkZlSFJ5WVV4cFoyaDBKeWtzSUd4dlkyRnNLQ2RTWVd4bGQyRjVMVVY0ZEhKaFRHbG5hSFFuS1N3Z2RYSnNLRndpYUhSMGNITTZMeTltYjI1MGN5NW5jM1JoZEdsakxtTnZiUzl6TDNKaGJHVjNZWGt2ZGpFeEx6aExhRnBrTTFaUlFuUllWRUY2Ym5aTGFuY3RhM2Q2ZVVSTldHaGtSRGh6UVdvMlQwRktWRVp6UWtrdWQyOW1aakpjSWlrZ1ptOXliV0YwS0NkM2IyWm1NaWNwTzF4dUlDQjFibWxqYjJSbExYSmhibWRsT2lCVkt6QXdNREF0TURCR1Jpd2dWU3N3TVRNeExDQlZLekF4TlRJdE1ERTFNeXdnVlNzd01rTTJMQ0JWS3pBeVJFRXNJRlVyTURKRVF5d2dWU3N5TURBd0xUSXdOa1lzSUZVck1qQTNOQ3dnVlNzeU1FRkRMQ0JWS3pJeU1USXNJRlVyTWpJeE5Td2dWU3RGTUVaR0xDQlZLMFZHUmtRc0lGVXJSakF3TUR0Y2JuMWNia0JtYjI1MExXWmhZMlVnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSjBWc1pXTjBjbTlzYVhwbEp6dGNiaUFnWm05dWRDMXpkSGxzWlRvZ2JtOXliV0ZzTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0J6Y21NNklHeHZZMkZzS0NkRmJHVmpkSEp2YkdsNlpTY3BMQ0JzYjJOaGJDZ25SV3hsWTNSeWIyeHBlbVV0VW1WbmRXeGhjaWNwTENCMWNtd29YQ0pvZEhSd2N6b3ZMMlp2Ym5SekxtZHpkR0YwYVdNdVkyOXRMM012Wld4bFkzUnliMnhwZW1VdmRqVXZSRVI1T1hOblZUSlZOMU0wZUVGM1NEVjBhRzVLTjNKSllTMDNZV05OUVdWRVFsWjFZMnh6YVRaSFl5NTNiMlptWENJcElHWnZjbTFoZENnbmQyOW1aaWNwTENCMWNtd29YQ0pvZEhSd2N6b3ZMMlp2Ym5SekxtZHpkR0YwYVdNdVkyOXRMM012Wld4bFkzUnliMnhwZW1VdmRqVXZSRVI1T1hOblZUSlZOMU0wZUVGM1NEVjBhRzVLZVhkc2FXUklTbWRCWjIxVWFrOUZSWHAzZFRGTU9DNTBkR1pjSWlrZ1ptOXliV0YwS0NkMGNuVmxkSGx3WlNjcE8xeHVmVnh1UUdadmJuUXRabUZqWlNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lBblJXeGxZM1J5YjJ4cGVtVW5PMXh1SUNCbWIyNTBMWE4wZVd4bE9pQnViM0p0WVd3N1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBME1EQTdYRzRnSUhOeVl6b2diRzlqWVd3b0owVnNaV04wY205c2FYcGxKeWtzSUd4dlkyRnNLQ2RGYkdWamRISnZiR2w2WlMxU1pXZDFiR0Z5Snlrc0lIVnliQ2hjSW1oMGRIQnpPaTh2Wm05dWRITXVaM04wWVhScFl5NWpiMjB2Y3k5bGJHVmpkSEp2YkdsNlpTOTJOUzlFUkhrNWMyZFZNbFUzVXpSNFFYZElOWFJvYmtvMFozQTVVVGhuWWxseWFIRkhiRkpoZGw5SldHWnJMbmR2Wm1ZeVhDSXBJR1p2Y20xaGRDZ25kMjltWmpJbktUdGNiaUFnZFc1cFkyOWtaUzF5WVc1blpUb2dWU3N3TURBd0xUQXdSa1lzSUZVck1ERXpNU3dnVlNzd01UVXlMVEF4TlRNc0lGVXJNREpETml3Z1ZTc3dNa1JCTENCVkt6QXlSRU1zSUZVck1qQXdNQzB5TURaR0xDQlZLekl3TnpRc0lGVXJNakJCUXl3Z1ZTc3lNakV5TENCVkt6SXlNVFVzSUZVclJUQkdSaXdnVlN0RlJrWkVMQ0JWSzBZd01EQTdYRzU5WEc1QVptOXVkQzFtWVdObElIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklDZFRiM1Z5WTJVZ1EyOWtaU0JRY204bk8xeHVJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUF6TURBN1hHNGdJSE55WXpvZ2JHOWpZV3dvSjFOdmRYSmpaU0JEYjJSbElGQnlieUJNYVdkb2RDY3BMQ0JzYjJOaGJDZ25VMjkxY21ObFEyOWtaVkJ5YnkxTWFXZG9kQ2NwTENCMWNtd29YQ0pvZEhSd2N6b3ZMMlp2Ym5SekxtZHpkR0YwYVdNdVkyOXRMM012YzI5MWNtTmxZMjlrWlhCeWJ5OTJOaTlzWlhGMk0zWXRlVlJ6U2s1RE4yNUdlbTVUVFhGalZrNTBiMjAwVVd4RlJFNUtZWEZ4Y1hweFpGTnpMbmR2Wm1aY0lpa2dabTl5YldGMEtDZDNiMlptSnlrc0lIVnliQ2hjSW1oMGRIQnpPaTh2Wm05dWRITXVaM04wWVhScFl5NWpiMjB2Y3k5emIzVnlZMlZqYjJSbGNISnZMM1kyTDJ4bGNYWXpkaTE1VkhOS1RrTTNia1o2YmxOTmNXWlROREozUzNweVpUQmplRzFQTlcwMVIzbFVjMWt1ZEhSbVhDSXBJR1p2Y20xaGRDZ25kSEoxWlhSNWNHVW5LVHRjYm4xY2JrQm1iMjUwTFdaaFkyVWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dKMU52ZFhKalpTQkRiMlJsSUZCeWJ5YzdYRzRnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNiaUFnYzNKak9pQnNiMk5oYkNnblUyOTFjbU5sSUVOdlpHVWdVSEp2Snlrc0lHeHZZMkZzS0NkVGIzVnlZMlZEYjJSbFVISnZMVkpsWjNWc1lYSW5LU3dnZFhKc0tGd2lhSFIwY0hNNkx5OW1iMjUwY3k1bmMzUmhkR2xqTG1OdmJTOXpMM052ZFhKalpXTnZaR1Z3Y204dmRqWXZiWEpzT0dwclRURTRUMnhQVVU0NFNreG5ZWE5FT1VoeExVWkdaMjlFVGxZelIxUkxjRWgzZFhaMFNTNTNiMlptWENJcElHWnZjbTFoZENnbmQyOW1aaWNwTENCMWNtd29YQ0pvZEhSd2N6b3ZMMlp2Ym5SekxtZHpkR0YwYVdNdVkyOXRMM012YzI5MWNtTmxZMjlrWlhCeWJ5OTJOaTl0Y213NGFtdE5NVGhQYkU5UlRqaEtUR2RoYzBRd1dUWkdkVE01VkhRNVdHdHRkRk52YzJGTmIwVkJMblIwWmx3aUtTQm1iM0p0WVhRb0ozUnlkV1YwZVhCbEp5azdYRzU5WEc1QVptOXVkQzFtWVdObElIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklDZFRiM1Z5WTJVZ1EyOWtaU0JRY204bk8xeHVJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEzTURBN1hHNGdJSE55WXpvZ2JHOWpZV3dvSjFOdmRYSmpaU0JEYjJSbElGQnlieUJDYjJ4a0p5a3NJR3h2WTJGc0tDZFRiM1Z5WTJWRGIyUmxVSEp2TFVKdmJHUW5LU3dnZFhKc0tGd2lhSFIwY0hNNkx5OW1iMjUwY3k1bmMzUmhkR2xqTG1OdmJTOXpMM052ZFhKalpXTnZaR1Z3Y204dmRqWXZiR1Z4ZGpOMkxYbFVjMHBPUXpkdVJucHVVMDF4V1hGcVIxbEtWWGxQV0dOQ2QxVlJZbEpoVGtnMll5NTNiMlptWENJcElHWnZjbTFoZENnbmQyOW1aaWNwTENCMWNtd29YQ0pvZEhSd2N6b3ZMMlp2Ym5SekxtZHpkR0YwYVdNdVkyOXRMM012YzI5MWNtTmxZMjlrWlhCeWJ5OTJOaTlzWlhGMk0zWXRlVlJ6U2s1RE4yNUdlbTVUVFhGaWJHTk5jazV5YzI1TU9XUm5RVVJ1V0dkWlNtcHpMblIwWmx3aUtTQm1iM0p0WVhRb0ozUnlkV1YwZVhCbEp5azdYRzU5WEc0dktpQnNZWFJwYmkxbGVIUWdLaTljYmtCbWIyNTBMV1poWTJVZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0oxTnZkWEpqWlNCRGIyUmxJRkJ5YnljN1hHNGdJR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRE13TUR0Y2JpQWdjM0pqT2lCc2IyTmhiQ2duVTI5MWNtTmxJRU52WkdVZ1VISnZJRXhwWjJoMEp5a3NJR3h2WTJGc0tDZFRiM1Z5WTJWRGIyUmxVSEp2TFV4cFoyaDBKeWtzSUhWeWJDaGNJbWgwZEhCek9pOHZabTl1ZEhNdVozTjBZWFJwWXk1amIyMHZjeTl6YjNWeVkyVmpiMlJsY0hKdkwzWTJMMnhsY1hZemRpMTVWSE5LVGtNM2JrWjZibE5OY1ZSUFJtNUtUbmxuU1d0eVNHTnBRemhDVjNwaVEzb3pja2RXZEhOVWExQnpZa1JoYW5WUE5YVmxVWGN1ZDI5bVpqSmNJaWtnWm05eWJXRjBLQ2QzYjJabU1pY3BPMXh1SUNCMWJtbGpiMlJsTFhKaGJtZGxPaUJWS3pBeE1EQXRNREkwUml3Z1ZTc3hSVEF3TFRGRlJrWXNJRlVyTWpCQk1DMHlNRUZDTENCVkt6SXdRVVF0TWpCRFJpd2dWU3N5UXpZd0xUSkROMFlzSUZVclFUY3lNQzFCTjBaR08xeHVmVnh1THlvZ2JHRjBhVzRnS2k5Y2JrQm1iMjUwTFdaaFkyVWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dKMU52ZFhKalpTQkRiMlJsSUZCeWJ5YzdYRzRnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURNd01EdGNiaUFnYzNKak9pQnNiMk5oYkNnblUyOTFjbU5sSUVOdlpHVWdVSEp2SUV4cFoyaDBKeWtzSUd4dlkyRnNLQ2RUYjNWeVkyVkRiMlJsVUhKdkxVeHBaMmgwSnlrc0lIVnliQ2hjSW1oMGRIQnpPaTh2Wm05dWRITXVaM04wWVhScFl5NWpiMjB2Y3k5emIzVnlZMlZqYjJSbGNISnZMM1kyTDJ4bGNYWXpkaTE1VkhOS1RrTTNia1o2YmxOTmNWTlFNa3hGYXpac1RYcFpjMUp4Y2pOa1NFWkpiVUV1ZDI5bVpqSmNJaWtnWm05eWJXRjBLQ2QzYjJabU1pY3BPMXh1SUNCMWJtbGpiMlJsTFhKaGJtZGxPaUJWS3pBd01EQXRNREJHUml3Z1ZTc3dNVE14TENCVkt6QXhOVEl0TURFMU15d2dWU3N3TWtNMkxDQlZLekF5UkVFc0lGVXJNREpFUXl3Z1ZTc3lNREF3TFRJd05rWXNJRlVyTWpBM05Dd2dWU3N5TUVGRExDQlZLekl5TVRJc0lGVXJNakl4TlN3Z1ZTdEZNRVpHTENCVkswVkdSa1FzSUZVclJqQXdNRHRjYm4xY2JpOHFJR3hoZEdsdUxXVjRkQ0FxTDF4dVFHWnZiblF0Wm1GalpTQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQW5VMjkxY21ObElFTnZaR1VnVUhKdkp6dGNiaUFnWm05dWRDMXpkSGxzWlRvZ2JtOXliV0ZzTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0J6Y21NNklHeHZZMkZzS0NkVGIzVnlZMlVnUTI5a1pTQlFjbThuS1N3Z2JHOWpZV3dvSjFOdmRYSmpaVU52WkdWUWNtOHRVbVZuZFd4aGNpY3BMQ0IxY213b1hDSm9kSFJ3Y3pvdkwyWnZiblJ6TG1kemRHRjBhV011WTI5dEwzTXZjMjkxY21ObFkyOWtaWEJ5Ynk5Mk5pOXRjbXc0YW10Tk1UaFBiRTlSVGpoS1RHZGhjMFEwWVRGWlJIUnZZWEo2ZDFOWWVGUklaMmRGV0UxM0xuZHZabVl5WENJcElHWnZjbTFoZENnbmQyOW1aakluS1R0Y2JpQWdkVzVwWTI5a1pTMXlZVzVuWlRvZ1ZTc3dNVEF3TFRBeU5FWXNJRlVyTVVVd01DMHhSVVpHTENCVkt6SXdRVEF0TWpCQlFpd2dWU3N5TUVGRUxUSXdRMFlzSUZVck1rTTJNQzB5UXpkR0xDQlZLMEUzTWpBdFFUZEdSanRjYm4xY2JpOHFJR3hoZEdsdUlDb3ZYRzVBWm05dWRDMW1ZV05sSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNkVGIzVnlZMlVnUTI5a1pTQlFjbThuTzF4dUlDQm1iMjUwTFhOMGVXeGxPaUJ1YjNKdFlXdzdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTBNREE3WEc0Z0lITnlZem9nYkc5allXd29KMU52ZFhKalpTQkRiMlJsSUZCeWJ5Y3BMQ0JzYjJOaGJDZ25VMjkxY21ObFEyOWtaVkJ5YnkxU1pXZDFiR0Z5Snlrc0lIVnliQ2hjSW1oMGRIQnpPaTh2Wm05dWRITXVaM04wWVhScFl5NWpiMjB2Y3k5emIzVnlZMlZqYjJSbGNISnZMM1kyTDIxeWJEaHFhMDB4T0U5c1QxRk9PRXBNWjJGelJEVmlVRVprZFVsWmRHOU1lbmRUVkRZNGRXaDZYMWt1ZDI5bVpqSmNJaWtnWm05eWJXRjBLQ2QzYjJabU1pY3BPMXh1SUNCMWJtbGpiMlJsTFhKaGJtZGxPaUJWS3pBd01EQXRNREJHUml3Z1ZTc3dNVE14TENCVkt6QXhOVEl0TURFMU15d2dWU3N3TWtNMkxDQlZLekF5UkVFc0lGVXJNREpFUXl3Z1ZTc3lNREF3TFRJd05rWXNJRlVyTWpBM05Dd2dWU3N5TUVGRExDQlZLekl5TVRJc0lGVXJNakl4TlN3Z1ZTdEZNRVpHTENCVkswVkdSa1FzSUZVclJqQXdNRHRjYm4xY2JpOHFJR3hoZEdsdUxXVjRkQ0FxTDF4dVFHWnZiblF0Wm1GalpTQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQW5VMjkxY21ObElFTnZaR1VnVUhKdkp6dGNiaUFnWm05dWRDMXpkSGxzWlRvZ2JtOXliV0ZzTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTnpBd08xeHVJQ0J6Y21NNklHeHZZMkZzS0NkVGIzVnlZMlVnUTI5a1pTQlFjbThnUW05c1pDY3BMQ0JzYjJOaGJDZ25VMjkxY21ObFEyOWtaVkJ5YnkxQ2IyeGtKeWtzSUhWeWJDaGNJbWgwZEhCek9pOHZabTl1ZEhNdVozTjBZWFJwWXk1amIyMHZjeTl6YjNWeVkyVmpiMlJsY0hKdkwzWTJMMnhsY1hZemRpMTVWSE5LVGtNM2JrWjZibE5OY1dVMGN6RlZlRFJRZFVsdFYxQnJOV1pUY2paSVVFd3pja2RXZEhOVWExQnpZa1JoYW5WUE5YVmxVWGN1ZDI5bVpqSmNJaWtnWm05eWJXRjBLQ2QzYjJabU1pY3BPMXh1SUNCMWJtbGpiMlJsTFhKaGJtZGxPaUJWS3pBeE1EQXRNREkwUml3Z1ZTc3hSVEF3TFRGRlJrWXNJRlVyTWpCQk1DMHlNRUZDTENCVkt6SXdRVVF0TWpCRFJpd2dWU3N5UXpZd0xUSkROMFlzSUZVclFUY3lNQzFCTjBaR08xeHVmVnh1THlvZ2JHRjBhVzRnS2k5Y2JrQm1iMjUwTFdaaFkyVWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dKMU52ZFhKalpTQkRiMlJsSUZCeWJ5YzdYRzRnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURjd01EdGNiaUFnYzNKak9pQnNiMk5oYkNnblUyOTFjbU5sSUVOdlpHVWdVSEp2SUVKdmJHUW5LU3dnYkc5allXd29KMU52ZFhKalpVTnZaR1ZRY204dFFtOXNaQ2NwTENCMWNtd29YQ0pvZEhSd2N6b3ZMMlp2Ym5SekxtZHpkR0YwYVdNdVkyOXRMM012YzI5MWNtTmxZMjlrWlhCeWJ5OTJOaTlzWlhGMk0zWXRlVlJ6U2s1RE4yNUdlbTVUVFhGYWEwWTRTRGg1WlRRM2QzTm1jRmQ1ZDJSaE9HOW5MbmR2Wm1ZeVhDSXBJR1p2Y20xaGRDZ25kMjltWmpJbktUdGNiaUFnZFc1cFkyOWtaUzF5WVc1blpUb2dWU3N3TURBd0xUQXdSa1lzSUZVck1ERXpNU3dnVlNzd01UVXlMVEF4TlRNc0lGVXJNREpETml3Z1ZTc3dNa1JCTENCVkt6QXlSRU1zSUZVck1qQXdNQzB5TURaR0xDQlZLekl3TnpRc0lGVXJNakJCUXl3Z1ZTc3lNakV5TENCVkt6SXlNVFVzSUZVclJUQkdSaXdnVlN0RlJrWkVMQ0JWSzBZd01EQTdYRzU5WEc1a2FYWXVZMkZ5WkhNZ2UxeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JtYkdWNExYZHlZWEE2SUhkeVlYQTdYRzRnSUdac1pYZ3RaR2x5WldOMGFXOXVPaUJ5YjNjN1hHNTlYRzVrYVhZdVkyRnlaSE1nUG1ScGRpQjdYRzRnSUdac1pYZ3RaM0p2ZHpvZ01EdGNiaUFnWm14bGVDMXphSEpwYm1zNklEQTdYRzRnSUdac1pYZ3RZbUZ6YVhNNklHRjFkRzg3WEc1OVhHNHZLbHh1SUNBZ0tpQkVaV1poZFd4MElITmxkSFJwYm1kek9seHVJQ0FnS2k5Y2JpOHFJRTVQVkVVNklFbDBKM01nYm1WalpYTnpZWEo1SUhSdklIVnpaU0JsTG1jdUlIUm9aU0FrWm05dWRFNXZjbTFoYkNCMllYSnBZV0pzWlNCb1pYSmxMaUJFWldacGJtbHVaMXh1SUNBZ0tpQnRkV3gwYVhCc1pTQm1iMjUwY3lCa2FYSmxZM1JzZVNCcGJpQm9aWEpsSUhscFpXeGtjeUJoSUhOMGVXeDFjeUJqYjIxd2FXeGxjaUJsY25KdmNpNWNiaUFnSUNvdlhHNHZLbHh1SUNBZ0tpQkNjbVZoYTNCdmFXNTBJSE5sZEhWd09seHVJQ0FnS2k5Y2JtSnZaSGtnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSjFKaGJHVjNZWGtuTENCellXNXpMWE5sY21sbU8xeHVJQ0JtYjI1MExYTnBlbVU2SURFdU1qVnlaVzA3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUF6TURBN1hHNTlYRzVpZFhSMGIyNGdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dKMFZzWldOMGNtOXNhWHBsSnl3Z2MyRnVjeTF6WlhKcFpqdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEUXdNRHRjYm4xY2JpNXZkbVZ5YkdGNVpXUWdlMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOREF3TzF4dWZWeHVZMjlrWlNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lBblUyOTFjbU5sSUVOdlpHVWdVSEp2Snl3Z2JXOXViM053WVdObE8xeHVJQ0IzYUdsMFpTMXpjR0ZqWlRvZ2JtOTNjbUZ3TzF4dWZWeHVjSEpsSUdOdlpHVWdlMXh1SUNCM2FHbDBaUzF6Y0dGalpUb2djSEpsTFhkeVlYQTdYRzU5WEc1d0lHTnZaR1VnZTF4dUlDQndZV1JrYVc1bk9pQXdPMXh1SUNCd1lXUmthVzVuTFhSdmNEb2dNQzR5WlcwN1hHNGdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQXdMakpsYlR0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ00zQjRPMXh1ZlZ4dWNDQmpiMlJsT2pwaVpXWnZjbVVzWEc1d0lHTnZaR1U2T21GbWRHVnlJSHRjYmlBZ2JHVjBkR1Z5TFhOd1lXTnBibWM2SUMwd0xqSmxiVHRjYmlBZ1kyOXVkR1Z1ZERvZ1hDSmNYREF3WVRCY0lqdGNibjFjYm5CeVpTQjdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRE53ZUR0Y2JpQWdjR0ZrWkdsdVp6b2dNV1Z0TzF4dWZWeHVhREVnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nSjBWc1pXTjBjbTlzYVhwbEp5d2djMkZ1Y3kxelpYSnBaanRjYmlBZ1ptOXVkQzF6YVhwbE9pQXljbVZ0TzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTVM0eU8xeHVJQ0J0WVhKbmFXNHRkRzl3T2lBd0xqRmxiVHRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUM0eFpXMDdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTBNREE3WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNTlYRzVvTWlCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lBblJXeGxZM1J5YjJ4cGVtVW5MQ0J6WVc1ekxYTmxjbWxtTzF4dUlDQm1iMjUwTFhOcGVtVTZJREV1TkhKbGJUdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERXVOVHRjYmlBZ2JXRnlaMmx1TFhSdmNEb2dNUzR5TlhKbGJUdGNiaUFnYldGeVoybHVMV0p2ZEhSdmJUb2dNQzQyTWpWeVpXMDdYRzRnSUdadmJuUXRkMlZwWjJoME9pQTBNREE3WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNTlYRzVvTXlCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lBblJXeGxZM1J5YjJ4cGVtVW5MQ0J6WVc1ekxYTmxjbWxtTzF4dUlDQm1iMjUwTFhOcGVtVTZJREV1TkhKbGJUdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERXVOVHRjYmlBZ2JXRnlaMmx1TFhSdmNEb2dNRHRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUM0Mk1qVnlaVzA3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEwTURBN1hHNGdJSFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVTdYRzU5WEc1b05DQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQW5SV3hsWTNSeWIyeHBlbVVuTENCellXNXpMWE5sY21sbU8xeHVJQ0JtYjI1MExYTnBlbVU2SURGeVpXMDdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhMalU3WEc0Z0lHMWhjbWRwYmkxMGIzQTZJREF1TjJWdE8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXdMamRsYlR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNiaUFnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjYmlBZ1ltOXlaR1Z5TFdKdmRIUnZiVG9nTVhCNElITnZiR2xrSUNNME1qUXlOREk3WEc0Z0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNibjFjYm1nMUlIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklDZEZiR1ZqZEhKdmJHbDZaU2NzSUhOaGJuTXRjMlZ5YVdZN1hHNGdJR1p2Ym5RdGMybDZaVG9nTUM0NWNtVnRPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNVHRjYmlBZ2JXRnlaMmx1TFhSdmNEb2dNQzQzTldWdE8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXdMamMxWlcwN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBME1EQTdYRzRnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEc1OVhHNXdJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ2RTWVd4bGQyRjVKeXdnYzJGdWN5MXpaWEpwWmp0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TGpJMWNtVnRPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNUzQ0TnpWeVpXMDdYRzRnSUdadmJuUXRkMlZwWjJoME9pQXlNREE3WEc1OVhHNWhJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ2RTWVd4bGQyRjVKeXdnYzJGdWN5MXpaWEpwWmp0Y2JpQWdabTl1ZEMxemFYcGxPaUF4TGpJMWNtVnRPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNUzQ0TnpWeVpXMDdYRzRnSUdadmJuUXRkMlZwWjJoME9pQXlNREE3WEc1OVhHNUFiV1ZrYVdFZ2IyNXNlU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklEUTRaVzBwSUh0Y2JpQWdhREVnZTF4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lBblJXeGxZM1J5YjJ4cGVtVW5MQ0J6WVc1ekxYTmxjbWxtTzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTXk0NGNtVnRPMXh1SUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TGpJN1hHNGdJQ0FnYldGeVoybHVMWFJ2Y0RvZ01DNHhaVzA3WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01DNHhaVzA3WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNiaUFnSUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4dUlDQjlYRzRnSUdneUlIdGNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dKMFZzWldOMGNtOXNhWHBsSnl3Z2MyRnVjeTF6WlhKcFpqdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklESXVNemMxY21WdE8xeHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXhMalU3WEc0Z0lDQWdiV0Z5WjJsdUxYUnZjRG9nTVM0eU5YSmxiVHRjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBd0xqWXlOWEpsYlR0Y2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh1SUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNGdJSDFjYmlBZ2FETWdlMXh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUFuUld4bFkzUnliMnhwZW1VbkxDQnpZVzV6TFhObGNtbG1PMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNUzQ0TnpWeVpXMDdYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREl1TnpWeVpXMDdYRzRnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNRHRjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBd0xqWXlOWEpsYlR0Y2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh1SUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNGdJSDFjYmlBZ2FEUWdlMXh1SUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUFuUld4bFkzUnliMnhwZW1VbkxDQnpZVzV6TFhObGNtbG1PMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNWEpsYlR0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01TNDFPMXh1SUNBZ0lHMWhjbWRwYmkxMGIzQTZJREF1TjJWdE8xeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREF1TjJWdE8xeHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTBNREE3WEc0Z0lDQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNiaUFnSUNCaWIzSmtaWEl0WW05MGRHOXRPaUF4Y0hnZ2MyOXNhV1FnSXpReU5ESTBNanRjYmlBZ2ZWeHVJQ0JvTlNCN1hHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDZEZiR1ZqZEhKdmJHbDZaU2NzSUhOaGJuTXRjMlZ5YVdZN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBd0xqbHlaVzA3WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFN1hHNGdJQ0FnYldGeVoybHVMWFJ2Y0RvZ01DNDNOV1Z0TzF4dUlDQWdJRzFoY21kcGJpMWliM1IwYjIwNklEQXVOelZsYlR0Y2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh1SUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJVN1hHNGdJSDFjYmlBZ2NDQjdYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJQ2RTWVd4bGQyRjVKeXdnYzJGdWN5MXpaWEpwWmp0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFdU1qVnlaVzA3WEc0Z0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFdU9EYzFjbVZ0TzF4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBeU1EQTdYRzRnSUgxY2JpQWdZU0I3WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNkU1lXeGxkMkY1Snl3Z2MyRnVjeTF6WlhKcFpqdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklERXVNalZ5WlcwN1hHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXVPRGMxY21WdE8xeHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQXlNREE3WEc0Z0lIMWNibjFjYmk4cVhHNGdJQ0FxSUVSbFptRjFiSFFnYzJWMGRHbHVaM002WEc0Z0lDQXFMMXh1THlwY2JpQWdJQ29nUW5KbFlXdHdiMmx1ZENCelpYUjFjRHBjYmlBZ0lDb3ZYRzVpYjJSNUlIdGNiaUFnWTI5c2IzSTZJQ016TXpNN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNObVptWTdYRzU5WEc0Nk9uTmxiR1ZqZEdsdmJpQjdYRzRnSUdKaFkydG5jbTkxYm1RNklDTmxNVEV3TVRBN1hHNGdJR052Ykc5eU9pQWpabVptTzF4dUlDQm1hV3hzT2lBalptWm1PMXh1ZlZ4dVlTQjdYRzRnSUdOdmJHOXlPaUFqTXpNek8xeHVmVnh1WVRwMmFYTnBkR1ZrSUh0Y2JpQWdZMjlzYjNJNklDTXpNek03WEc1OVhHNWhPbWh2ZG1WeUxGeHVZVHAyYVhOcGRHVmtPbWh2ZG1WeUlIdGNiaUFnWTI5c2IzSTZJQ05sTVRFd01UQTdYRzU5WEc1aE9tRmpkR2wyWlNCN1hHNGdJR052Ykc5eU9pQWpObUV3TURBd08xeHVmVnh1WVRwbWIyTjFjeUI3WEc0Z0lHOTFkR3hwYm1VNklHNXZibVU3WEc0Z0lHTnZiRzl5T2lBalpURXhNREV3TzF4dWZWeHVjQ0JqYjJSbElIdGNiaUFnWTI5c2IzSTZJQ016TXpNN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tTjJZM1pqYzdYRzU5WEc1d2NtVWdlMXh1SUNCamIyeHZjam9nSXpNek16dGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTJZM1pqZG1OenRjYm4xY2JpNWpiMjUwWlc1MElIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTJZM1pqZG1OenRjYm4xY2JpNWpiMjUwWlc1MFgxOWpiMjUwWVdsdVpYSXNYRzR1WTI5dWRHVnVkRjlmWTI5dWRHRnBibVZ5TFMxbGVIQmhibVFnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpabVptTzF4dWZWeHVMbWx1Wm05eWJXRjBhVzl1WVd3Z2UxeHVJQ0JqYjJ4dmNqb2dJMkppWWp0Y2JuMWNiaThxSUVsdFlXZGxjeUJ6YnlCaGMzTjFiV1VnZDJocGRHVWdkR1Y0ZENCcGN5QnlaWEYxYVhKbFpDQXFMMXh1TG1obGNtOGdhREVzWEc0dWFHVnlieUJvTWl4Y2JpNW9aWEp2SUdnekxGeHVMbWhsY204Z2FEUXNYRzR1YUdWeWJ5Qm9OU3hjYmk1b1pYSnZJSEFzWEc0dWFHVnlieUJqYjJSbElIdGNiaUFnWTI5c2IzSTZJQ05tWm1ZN1hHNTlYRzR2S2x4dUlDb2dWVWtnWTI5dGNHOXVaVzUwY3pwY2JpQXFYRzRnS2lCRllXTm9JRlZKSUdOdmJYQnZibVZ1ZENCcGN5QmxibU5oY0hOMWJHRjBaV1FnZDJsMGFHbHVJR0VnYzJWMGRYQWdablZ1WTNScGIyNGdkMmhwWTJnZ2RHRnJaWE1nWVc1Y2JpQXFJRzl3YVhScGIyNWhiQ0J6WlhSMGFXNW5jeUJvWVhOb0xpQkpaaUJ2YldsMGRHVmtJSFJvWlNCa1pXWmhkV3gwSUhObGRIUnBibWR6SUdGMllXbHNZV0pzWlNCcGJpQjBhR1ZjYmlBcUlISmxjM0JsWTNScGRtVWdZMjl0Y0c5dVpXNTBJR1pwYkdVZ1lYSmxJSFZ6WldRdUlGUm9hWE1nWVd4c2IzZHpJR0VnS0hSb1pXMWxLU0JrWlhabGJHOXdaWElnZEc5Y2JpQXFJR04xYzNSdmJXbDZaU0JqYjIxd2IyNWxiblJ6SUdadmNpQjBhR1ZwY2lCdmQyNGdjMmxtZEhNZ1lXNWtJSEJ5YjJwbFkzUnpMbHh1SUNvdlhHNHVZVzVwYldGMFpTMXZjR0ZqYVhSNUlIdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ2IzQmhZMmwwZVNCbFlYTmxMV2x1SURRd01HMXpPMXh1ZlZ4dUxtWmhaR1V0YVc0Z2UxeHVJQ0JoYm1sdFlYUnBiMjQ2SUdaaFpHVnBiaUEwTURCdGN5QmxZWE5sTFdsdUlEQnpJREVnYm05eWJXRnNJR0p2ZEdnN1hHNTlYRzR1WkdWc1lYa2dlMXh1SUNCaGJtbHRZWFJwYjI0dFpHVnNZWGs2SURRd01HMXpPMXh1ZlZ4dVFDMXRiM290YTJWNVpuSmhiV1Z6SUdaaFpHVnBiaUI3WEc0Z0lHWnliMjBnZTF4dUlDQWdJRzl3WVdOcGRIazZJREE3WEc0Z0lIMWNiaUFnZEc4Z2UxeHVJQ0FnSUc5d1lXTnBkSGs2SURFN1hHNGdJSDFjYm4xY2JrQXRkMlZpYTJsMExXdGxlV1p5WVcxbGN5Qm1ZV1JsYVc0Z2UxeHVJQ0JtY205dElIdGNiaUFnSUNCdmNHRmphWFI1T2lBd08xeHVJQ0I5WEc0Z0lIUnZJSHRjYmlBZ0lDQnZjR0ZqYVhSNU9pQXhPMXh1SUNCOVhHNTlYRzVBTFc4dGEyVjVabkpoYldWeklHWmhaR1ZwYmlCN1hHNGdJR1p5YjIwZ2UxeHVJQ0FnSUc5d1lXTnBkSGs2SURBN1hHNGdJSDFjYmlBZ2RHOGdlMXh1SUNBZ0lHOXdZV05wZEhrNklERTdYRzRnSUgxY2JuMWNia0JyWlhsbWNtRnRaWE1nWm1Ga1pXbHVJSHRjYmlBZ1puSnZiU0I3WEc0Z0lDQWdiM0JoWTJsMGVUb2dNRHRjYmlBZ2ZWeHVJQ0IwYnlCN1hHNGdJQ0FnYjNCaFkybDBlVG9nTVR0Y2JpQWdmVnh1ZlZ4dUx5b2dSa2xZV0UxRk9pQnlaV1poWTNSdmNpQnBiblJ2SUdOdmJYQnZibVZ1ZEhNaElDb3ZYRzR1YzNabkxXTmxiblJsY2kxNElIdGNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdiV0Z5WjJsdUxXeGxablE2SUdGMWRHODdYRzRnSUcxaGNtZHBiaTF5YVdkb2REb2dZWFYwYnp0Y2JpQWdjR0ZrWkdsdVp5MXNaV1owT2lBMU1DVTdYRzU5WEc0dWMzWm5MWEJoWkdScGJtY3RkRzl3SUh0Y2JpQWdjR0ZrWkdsdVp5MTBiM0E2SURGbGJUdGNibjFjYmk1emRtY3RjR0ZrWkdsdVp5MXNaV1owSUh0Y2JpQWdjR0ZrWkdsdVp5MXNaV1owT2lBeFpXMDdYRzU5WEc0dWNtVjFjMkZpYkdVZ2NHRjBhQ0I3WEc0Z0lHWnBiR3c2SUc1dmJtVTdYRzRnSUhOMGNtOXJaVG9nSXpBd01EdGNiaUFnYzNSeWIydGxMWGRwWkhSb09pQXhMalZ3ZUR0Y2JpQWdjM1J5YjJ0bExXeHBibVZqWVhBNklISnZkVzVrTzF4dUlDQnpkSEp2YTJVdGJHbHVaV3B2YVc0NklISnZkVzVrTzF4dWZWeHVMbkpsZFhOaFlteGxJSEJoZEdndVltZHpkSEp2YTJVZ2UxeHVJQ0J6ZEhKdmEyVTZJQ05tWm1ZN1hHNGdJSE4wY205clpTMTNhV1IwYURvZ00zQjRPMXh1ZlZ4dUx5cGNiaUFnSUNvZ1JHVm1ZWFZzZENCelpYUjBhVzVuY3pwY2JpQWdJQ292WEc1cGJuQjFkRnQwZVhCbFBWd2lkR1Y0ZEZ3aVhTeGNibWx1Y0hWMFczUjVjR1U5WENKd1lYTnpkMjl5WkZ3aVhTeGNibWx1Y0hWMFczUjVjR1U5WENKbGJXRnBiRndpWFN4Y2JtbHVjSFYwVzNSNWNHVTlYQ0p1ZFcxaVpYSmNJbDBzWEc1cGJuQjFkRnQwZVhCbFBWd2lkR1ZzWENKZExGeHVhVzV3ZFhSYmRIbHdaVDFjSW5WeWJGd2lYU3hjYm5ObGJHVmpkQ3hjYm5SbGVIUmhjbVZoSUh0Y2JpQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JpQWdiV2x1TFdobGFXZG9kRG9nTWk0M05XVnRPMXh1SUNCd1lXUmthVzVuTFhSdmNEb2dNQzQxWlcwN1hHNGdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQXdMalZsYlR0Y2JpQWdjR0ZrWkdsdVp5MXNaV1owT2lBd0xqVmxiVHRjYmlBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTUM0MVpXMDdYRzRnSUdOdmJHOXlPaUFqTXpNek8xeHVJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dZbTkwZEc5dE8xeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqWm1abU8xeHVJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwTzF4dUlDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWpaRGhrT0dRNE8xeHVJQ0J2ZFhSc2FXNWxPaUJ1YjI1bE8xeHVJQ0JtYjI1MExYTnBlbVU2SURGeVpXMDdYRzU5WEc1cGJuQjFkRnQwZVhCbFBWd2lkR1Y0ZEZ3aVhUcGthWE5oWW14bFpDeGNibWx1Y0hWMFczUjVjR1U5WENKd1lYTnpkMjl5WkZ3aVhUcGthWE5oWW14bFpDeGNibWx1Y0hWMFczUjVjR1U5WENKbGJXRnBiRndpWFRwa2FYTmhZbXhsWkN4Y2JtbHVjSFYwVzNSNWNHVTlYQ0p1ZFcxaVpYSmNJbDA2WkdsellXSnNaV1FzWEc1cGJuQjFkRnQwZVhCbFBWd2lkR1ZzWENKZE9tUnBjMkZpYkdWa0xGeHVhVzV3ZFhSYmRIbHdaVDFjSW5WeWJGd2lYVHBrYVhOaFlteGxaQ3hjYm5ObGJHVmpkRHBrYVhOaFlteGxaQ3hjYm5SbGVIUmhjbVZoT21ScGMyRmliR1ZrSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2djbVZ3WldGMGFXNW5MV3hwYm1WaGNpMW5jbUZrYVdWdWRDZ3hNalZrWldjc0lIUnlZVzV6Y0dGeVpXNTBMQ0IwY21GdWMzQmhjbVZ1ZENBeWNIZ3NJQ05tTVdZeFpqRWdNbkI0TENBalpqRm1NV1l4SUROd2VDd2dkSEpoYm5Od1lYSmxiblFnTTNCNExDQjBjbUZ1YzNCaGNtVnVkQ0ExY0hnc0lDTm1NV1l4WmpFZ05YQjRLVHRjYm4xY2JpOHFYRzRnSUNBcUlFUmxabUYxYkhRZ2MyVjBkR2x1WjNNNlhHNGdJQ0FxTDF4dVluVjBkRzl1SUh0Y2JpQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVmVnh1WW5WMGRHOXVJSHRjYmlBZ2NHRmtaR2x1WnkxMGIzQTZJREF1TnpWbGJUdGNiaUFnY0dGa1pHbHVaeTFpYjNSMGIyMDZJREF1TnpWbGJUdGNiaUFnY0dGa1pHbHVaeTFzWldaME9pQXhMamt6TnpWbGJUdGNiaUFnY0dGa1pHbHVaeTF5YVdkb2REb2dNUzQ1TXpjMVpXMDdYRzRnSUdOdmJHOXlPaUFqWlRFeE1ERXdPMXh1SUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0kyVXhNVEF4TUR0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNkU1lXeGxkMkY1Snl3Z2MyRnVjeTF6WlhKcFpqdGNiaUFnWm05dWRDMXphWHBsT2lBeGNtVnRPMXh1ZlZ4dVluVjBkRzl1T21odmRtVnlJSHRjYmlBZ1kyOXNiM0k2SUNObVptWTdYRzRnSUdKaFkydG5jbTkxYm1RNklDTmxNVEV3TVRBN1hHNGdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ05sTVRFd01UQTdYRzU5WEc1aWRYUjBiMjQ2WVdOMGFYWmxJSHRjYmlBZ2IzVjBiR2x1WlRvZ2JtOXVaVHRjYmlBZ1kyOXNiM0k2SUNObVptWTdYRzRnSUdKaFkydG5jbTkxYm1RNklDTTJZVEF3TURBN1hHNGdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ00yWVRBd01EQTdYRzU5WEc1aWRYUjBiMjQ2WkdsellXSnNaV1FnZTF4dUlDQmpiMnh2Y2pvZ0l6ZG1OMlkzWmp0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nSTJOaFkyRmpZVHRjYmlBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0kyTmhZMkZqWVR0Y2JpQWdZM1Z5YzI5eU9pQmtaV1poZFd4ME8xeHVmVnh1WW5WMGRHOXVPbVp2WTNWeklIdGNiaUFnYjNWMGJHbHVaVG9nYm05dVpUdGNibjFjYm1KMWRIUnZiaTV5Y3kxaWRHNHRMWE50WVd4c0lIdGNiaUFnY0dGa1pHbHVaeTEwYjNBNklEQXVOV1Z0TzF4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ01DNDFaVzA3WEc0Z0lIQmhaR1JwYm1jdGJHVm1kRG9nTUM0MVpXMDdYRzRnSUhCaFpHUnBibWN0Y21sbmFIUTZJREF1TldWdE8xeHVmVnh1WW5WMGRHOXVMbkp6TFdKMGJpMHRjMlZzWldOMFpXUWdlMXh1SUNCamIyeHZjam9nSTJabVpqdGNiaUFnWW1GamEyZHliM1Z1WkRvZ0kyVXhNVEF4TUR0Y2JpQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdJMlV4TVRBeE1EdGNibjFjYm1KMWRIUnZiaTV5Y3kxaWRHNHRMWE5sYkdWamRHVmtPbWh2ZG1WeUlIdGNiaUFnWTI5c2IzSTZJQ05tWm1ZN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNNMllUQXdNREE3WEc0Z0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDTTJZVEF3TURBN1hHNTlYRzVpZFhSMGIyNHVjbk10WW5SdUxTMXpaV3hsWTNSbFpEcGhZM1JwZG1VZ2UxeHVJQ0JqYjJ4dmNqb2dJMlptWmp0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nSTJVeE1UQXhNRHRjYmlBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0kyVXhNVEF4TUR0Y2JuMWNibUoxZEhSdmJpNXljeTFpZEc0dExYTmxiR1ZqZEdWa09taHZkbVZ5T21ScGMyRmliR1ZrSUh0Y2JpQWdZMjlzYjNJNklDTm1abVk3WEc0Z0lHSmhZMnRuY205MWJtUTZJQ05sTVRFd01UQTdYRzRnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNObE1URXdNVEE3WEc0Z0lHTjFjbk52Y2pvZ1pHVm1ZWFZzZER0Y2JuMWNiaThxSUZOMGVXeHBibWNnZEdobElHSmhjMlVnWW5WMGRHOXVJSGRwYkd3Z2FYTWdhVzF3YkdsamFYUnNlU0JoY0hCc2VXbHVaeUIwYUdVZ2MzUjViR1Z6SUhSdklIUm9aU0FuWW1WdEp5QmlkWFIwYjI1eklDb3ZYRzV3SUdKMWRIUnZiaUI3WEc0Z0lHMWhjbWRwYmpvZ01DNDJNalZ5WlcwN1hHNGdJR3hwYm1VdGFHVnBaMmgwT2lBeE8xeHVmVnh1Y0NCaWRYUjBiMjR1Y25NdFluUnVMUzF6YldGc2JDQjdYRzRnSUcxaGNtZHBiam9nTUM0ek56VnlaVzA3WEc1OVhHNUFiV1ZrYVdFZ2IyNXNlU0J6WTNKbFpXNGdZVzVrSUNodGFXNHRkMmxrZEdnNklEUTRaVzBwSUh0Y2JpQWdjQ0JpZFhSMGIyNGdlMXh1SUNBZ0lHMWhjbWRwYmpvZ01DNDJNalZ5WlcwN1hHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERTdYRzRnSUgxY2JpQWdjQ0JpZFhSMGIyNHVjbk10WW5SdUxTMXpiV0ZzYkNCN1hHNGdJQ0FnYldGeVoybHVPaUF3TGpNM05YSmxiVHRjYmlBZ2ZWeHVmVnh1TG5KekxXSjBiaTB0Y21Wa0lIdGNiaUFnY0dGa1pHbHVaeTEwYjNBNklEQXVOelZsYlR0Y2JpQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEQXVOelZsYlR0Y2JpQWdjR0ZrWkdsdVp5MXNaV1owT2lBeExqa3pOelZsYlR0Y2JpQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ01TNDVNemMxWlcwN1hHNGdJR052Ykc5eU9pQWpaVEV4TURFd08xeHVJQ0JpWVdOclozSnZkVzVrT2lCMGNtRnVjM0JoY21WdWREdGNiaUFnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSTJVeE1UQXhNRHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ2RTWVd4bGQyRjVKeXdnYzJGdWN5MXpaWEpwWmp0Y2JpQWdabTl1ZEMxemFYcGxPaUF4Y21WdE8xeHVmVnh1TG5KekxXSjBiaTB0Y21Wa09taHZkbVZ5SUh0Y2JpQWdZMjlzYjNJNklDTm1abVk3WEc0Z0lHSmhZMnRuY205MWJtUTZJQ05sTVRFd01UQTdYRzRnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNObE1URXdNVEE3WEc1OVhHNHVjbk10WW5SdUxTMXlaV1E2WVdOMGFYWmxJSHRjYmlBZ2IzVjBiR2x1WlRvZ2JtOXVaVHRjYmlBZ1kyOXNiM0k2SUNObVptWTdYRzRnSUdKaFkydG5jbTkxYm1RNklDTTJZVEF3TURBN1hHNGdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ00yWVRBd01EQTdYRzU5WEc0dWNuTXRZblJ1TFMxeVpXUTZaR2x6WVdKc1pXUWdlMXh1SUNCamIyeHZjam9nSXpkbU4yWTNaanRjYmlBZ1ltRmphMmR5YjNWdVpEb2dJMk5oWTJGallUdGNiaUFnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSTJOaFkyRmpZVHRjYmlBZ1kzVnljMjl5T2lCa1pXWmhkV3gwTzF4dWZWeHVMbkp6TFdKMGJpMHRjbVZrT21adlkzVnpJSHRjYmlBZ2IzVjBiR2x1WlRvZ2JtOXVaVHRjYm4xY2JpNXljeTFpZEc0dExYSmxaQzV5Y3kxaWRHNHRMWE5sYkdWamRHVmtJSHRjYmlBZ1kyOXNiM0k2SUNObVptWTdYRzRnSUdKaFkydG5jbTkxYm1RNklDTmxNVEV3TVRBN1hHNGdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ05sTVRFd01UQTdYRzU5WEc0dWNuTXRZblJ1TFMxeVpXUXVjbk10WW5SdUxTMXpaV3hsWTNSbFpEcG9iM1psY2lCN1hHNGdJR052Ykc5eU9pQWpabVptTzF4dUlDQmlZV05yWjNKdmRXNWtPaUFqTm1Fd01EQXdPMXh1SUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBak5tRXdNREF3TzF4dWZWeHVMbkp6TFdKMGJpMHRjbVZrTG5KekxXSjBiaTB0YzJWc1pXTjBaV1E2WVdOMGFYWmxJSHRjYmlBZ1kyOXNiM0k2SUNObVptWTdYRzRnSUdKaFkydG5jbTkxYm1RNklDTmxNVEV3TVRBN1hHNGdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ05sTVRFd01UQTdYRzU5WEc0dWNuTXRZblJ1TFMxeVpXUXVjbk10WW5SdUxTMXpaV3hsWTNSbFpEcG9iM1psY2pwa2FYTmhZbXhsWkNCN1hHNGdJR052Ykc5eU9pQWpabVptTzF4dUlDQmlZV05yWjNKdmRXNWtPaUFqWlRFeE1ERXdPMXh1SUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBalpURXhNREV3TzF4dUlDQmpkWEp6YjNJNklHUmxabUYxYkhRN1hHNTlYRzR1Y25NdFluUnVMUzF6YldGc2JDQjdYRzRnSUhCaFpHUnBibWN0ZEc5d09pQXdMalZsYlR0Y2JpQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklEQXVOV1Z0TzF4dUlDQndZV1JrYVc1bkxXeGxablE2SURBdU5XVnRPMXh1SUNCd1lXUmthVzVuTFhKcFoyaDBPaUF3TGpWbGJUdGNibjFjYmk1eWN5MWlkRzR0TFdkeVpXVnVJSHRjYmlBZ2NHRmtaR2x1WnkxMGIzQTZJREF1TnpWbGJUdGNiaUFnY0dGa1pHbHVaeTFpYjNSMGIyMDZJREF1TnpWbGJUdGNiaUFnY0dGa1pHbHVaeTFzWldaME9pQXhMamt6TnpWbGJUdGNiaUFnY0dGa1pHbHVaeTF5YVdkb2REb2dNUzQ1TXpjMVpXMDdYRzRnSUdOdmJHOXlPaUFqTUdGaU9UTmhPMXh1SUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0l6QmhZamt6WVR0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNkU1lXeGxkMkY1Snl3Z2MyRnVjeTF6WlhKcFpqdGNiaUFnWm05dWRDMXphWHBsT2lBeGNtVnRPMXh1ZlZ4dUxuSnpMV0owYmkwdFozSmxaVzQ2YUc5MlpYSWdlMXh1SUNCamIyeHZjam9nSTJabVpqdGNiaUFnWW1GamEyZHliM1Z1WkRvZ0l6QmhZamt6WVR0Y2JpQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdJekJoWWprellUdGNibjFjYmk1eWN5MWlkRzR0TFdkeVpXVnVPbUZqZEdsMlpTQjdYRzRnSUc5MWRHeHBibVU2SUc1dmJtVTdYRzRnSUdOdmJHOXlPaUFqWm1abU8xeHVJQ0JpWVdOclozSnZkVzVrT2lBak1EZzNPVEkzTzF4dUlDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWpNRGczT1RJM08xeHVmVnh1TG5KekxXSjBiaTB0WjNKbFpXNDZaR2x6WVdKc1pXUWdlMXh1SUNCamIyeHZjam9nSXpkbU4yWTNaanRjYmlBZ1ltRmphMmR5YjNWdVpEb2dJMk5oWTJGallUdGNiaUFnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSTJOaFkyRmpZVHRjYmlBZ1kzVnljMjl5T2lCa1pXWmhkV3gwTzF4dWZWeHVMbkp6TFdKMGJpMHRaM0psWlc0NlptOWpkWE1nZTF4dUlDQnZkWFJzYVc1bE9pQnViMjVsTzF4dWZWeHVMbkp6TFdKMGJpMHRaM0psWlc0dWNuTXRZblJ1TFMxelpXeGxZM1JsWkNCN1hHNGdJR052Ykc5eU9pQWpabVptTzF4dUlDQmlZV05yWjNKdmRXNWtPaUFqTUdGaU9UTmhPMXh1SUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBak1HRmlPVE5oTzF4dWZWeHVMbkp6TFdKMGJpMHRaM0psWlc0dWNuTXRZblJ1TFMxelpXeGxZM1JsWkRwb2IzWmxjaUI3WEc0Z0lHTnZiRzl5T2lBalptWm1PMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWpNRGczT1RJM08xeHVJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FqTURnM09USTNPMXh1ZlZ4dUxuSnpMV0owYmkwdFozSmxaVzR1Y25NdFluUnVMUzF6Wld4bFkzUmxaRHBoWTNScGRtVWdlMXh1SUNCamIyeHZjam9nSTJabVpqdGNiaUFnWW1GamEyZHliM1Z1WkRvZ0l6QmhZamt6WVR0Y2JpQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdJekJoWWprellUdGNibjFjYmk1eWN5MWlkRzR0TFdkeVpXVnVMbkp6TFdKMGJpMHRjMlZzWldOMFpXUTZhRzkyWlhJNlpHbHpZV0pzWldRZ2UxeHVJQ0JqYjJ4dmNqb2dJMlptWmp0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nSXpCaFlqa3pZVHRjYmlBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0l6QmhZamt6WVR0Y2JpQWdZM1Z5YzI5eU9pQmtaV1poZFd4ME8xeHVmVnh1TG5KekxXSjBiaTB0YzIxaGJHd2dlMXh1SUNCd1lXUmthVzVuTFhSdmNEb2dNQzQxWlcwN1hHNGdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQXdMalZsYlR0Y2JpQWdjR0ZrWkdsdVp5MXNaV1owT2lBd0xqVmxiVHRjYmlBZ2NHRmtaR2x1WnkxeWFXZG9kRG9nTUM0MVpXMDdYRzU5WEc0dWNuTXRZblJ1TFMxaWJIVmxJSHRjYmlBZ2NHRmtaR2x1WnkxMGIzQTZJREF1TnpWbGJUdGNiaUFnY0dGa1pHbHVaeTFpYjNSMGIyMDZJREF1TnpWbGJUdGNiaUFnY0dGa1pHbHVaeTFzWldaME9pQXhMamt6TnpWbGJUdGNiaUFnY0dGa1pHbHVaeTF5YVdkb2REb2dNUzQ1TXpjMVpXMDdYRzRnSUdOdmJHOXlPaUFqTVRZM01XWTBPMXh1SUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0l6RTJOekZtTkR0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNkU1lXeGxkMkY1Snl3Z2MyRnVjeTF6WlhKcFpqdGNiaUFnWm05dWRDMXphWHBsT2lBeGNtVnRPMXh1ZlZ4dUxuSnpMV0owYmkwdFlteDFaVHBvYjNabGNpQjdYRzRnSUdOdmJHOXlPaUFqWm1abU8xeHVJQ0JpWVdOclozSnZkVzVrT2lBak1UWTNNV1kwTzF4dUlDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWpNVFkzTVdZME8xeHVmVnh1TG5KekxXSjBiaTB0WW14MVpUcGhZM1JwZG1VZ2UxeHVJQ0J2ZFhSc2FXNWxPaUJ1YjI1bE8xeHVJQ0JqYjJ4dmNqb2dJMlptWmp0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nSXpCaU5EbGhNanRjYmlBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0l6QmlORGxoTWp0Y2JuMWNiaTV5Y3kxaWRHNHRMV0pzZFdVNlpHbHpZV0pzWldRZ2UxeHVJQ0JqYjJ4dmNqb2dJemRtTjJZM1pqdGNiaUFnWW1GamEyZHliM1Z1WkRvZ0kyTmhZMkZqWVR0Y2JpQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdJMk5oWTJGallUdGNiaUFnWTNWeWMyOXlPaUJrWldaaGRXeDBPMXh1ZlZ4dUxuSnpMV0owYmkwdFlteDFaVHBtYjJOMWN5QjdYRzRnSUc5MWRHeHBibVU2SUc1dmJtVTdYRzU5WEc0dWNuTXRZblJ1TFMxaWJIVmxMbkp6TFdKMGJpMHRjMlZzWldOMFpXUWdlMXh1SUNCamIyeHZjam9nSTJabVpqdGNiaUFnWW1GamEyZHliM1Z1WkRvZ0l6RTJOekZtTkR0Y2JpQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdJekUyTnpGbU5EdGNibjFjYmk1eWN5MWlkRzR0TFdKc2RXVXVjbk10WW5SdUxTMXpaV3hsWTNSbFpEcG9iM1psY2lCN1hHNGdJR052Ykc5eU9pQWpabVptTzF4dUlDQmlZV05yWjNKdmRXNWtPaUFqTUdJME9XRXlPMXh1SUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBak1HSTBPV0V5TzF4dWZWeHVMbkp6TFdKMGJpMHRZbXgxWlM1eWN5MWlkRzR0TFhObGJHVmpkR1ZrT21GamRHbDJaU0I3WEc0Z0lHTnZiRzl5T2lBalptWm1PMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWpNVFkzTVdZME8xeHVJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FqTVRZM01XWTBPMXh1ZlZ4dUxuSnpMV0owYmkwdFlteDFaUzV5Y3kxaWRHNHRMWE5sYkdWamRHVmtPbWh2ZG1WeU9tUnBjMkZpYkdWa0lIdGNiaUFnWTI5c2IzSTZJQ05tWm1ZN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNNeE5qY3haalE3WEc0Z0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDTXhOamN4WmpRN1hHNGdJR04xY25OdmNqb2daR1ZtWVhWc2REdGNibjFjYmk1eWN5MWlkRzR0TFhOdFlXeHNJSHRjYmlBZ2NHRmtaR2x1WnkxMGIzQTZJREF1TldWdE8xeHVJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dNQzQxWlcwN1hHNGdJSEJoWkdScGJtY3RiR1ZtZERvZ01DNDFaVzA3WEc0Z0lIQmhaR1JwYm1jdGNtbG5hSFE2SURBdU5XVnRPMXh1ZlZ4dUxuSnpMV0owYmkwdFlteGhZMnNnZTF4dUlDQndZV1JrYVc1bkxYUnZjRG9nTUM0M05XVnRPMXh1SUNCd1lXUmthVzVuTFdKdmRIUnZiVG9nTUM0M05XVnRPMXh1SUNCd1lXUmthVzVuTFd4bFpuUTZJREV1T1RNM05XVnRPMXh1SUNCd1lXUmthVzVuTFhKcFoyaDBPaUF4TGprek56VmxiVHRjYmlBZ1kyOXNiM0k2SUNNd01EQTdYRzRnSUdKaFkydG5jbTkxYm1RNklIUnlZVzV6Y0dGeVpXNTBPMXh1SUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBak1EQXdPMXh1SUNCbWIyNTBMV1poYldsc2VUb2dKMUpoYkdWM1lYa25MQ0J6WVc1ekxYTmxjbWxtTzF4dUlDQm1iMjUwTFhOcGVtVTZJREZ5WlcwN1hHNTlYRzR1Y25NdFluUnVMUzFpYkdGamF6cG9iM1psY2lCN1hHNGdJR052Ykc5eU9pQWpabVptTzF4dUlDQmlZV05yWjNKdmRXNWtPaUFqTUdGaU9UTmhPMXh1SUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBak1HRmlPVE5oTzF4dWZWeHVMbkp6TFdKMGJpMHRZbXhoWTJzNllXTjBhWFpsSUh0Y2JpQWdiM1YwYkdsdVpUb2dibTl1WlR0Y2JpQWdZMjlzYjNJNklDTm1abVk3WEc0Z0lHSmhZMnRuY205MWJtUTZJQ013T0RjNU1qYzdYRzRnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNNd09EYzVNamM3WEc1OVhHNHVjbk10WW5SdUxTMWliR0ZqYXpwa2FYTmhZbXhsWkNCN1hHNGdJR052Ykc5eU9pQWpOMlkzWmpkbU8xeHVJQ0JpWVdOclozSnZkVzVrT2lBalkyRmpZV05oTzF4dUlDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWpZMkZqWVdOaE8xeHVJQ0JqZFhKemIzSTZJR1JsWm1GMWJIUTdYRzU5WEc0dWNuTXRZblJ1TFMxaWJHRmphenBtYjJOMWN5QjdYRzRnSUc5MWRHeHBibVU2SUc1dmJtVTdYRzU5WEc0dWNuTXRZblJ1TFMxaWJHRmpheTV5Y3kxaWRHNHRMWE5sYkdWamRHVmtJSHRjYmlBZ1kyOXNiM0k2SUNObVptWTdYRzRnSUdKaFkydG5jbTkxYm1RNklDTXdZV0k1TTJFN1hHNGdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ013WVdJNU0yRTdYRzU5WEc0dWNuTXRZblJ1TFMxaWJHRmpheTV5Y3kxaWRHNHRMWE5sYkdWamRHVmtPbWh2ZG1WeUlIdGNiaUFnWTI5c2IzSTZJQ05tWm1ZN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNNd09EYzVNamM3WEc0Z0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDTXdPRGM1TWpjN1hHNTlYRzR1Y25NdFluUnVMUzFpYkdGamF5NXljeTFpZEc0dExYTmxiR1ZqZEdWa09tRmpkR2wyWlNCN1hHNGdJR052Ykc5eU9pQWpabVptTzF4dUlDQmlZV05yWjNKdmRXNWtPaUFqTUdGaU9UTmhPMXh1SUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBak1HRmlPVE5oTzF4dWZWeHVMbkp6TFdKMGJpMHRZbXhoWTJzdWNuTXRZblJ1TFMxelpXeGxZM1JsWkRwb2IzWmxjanBrYVhOaFlteGxaQ0I3WEc0Z0lHTnZiRzl5T2lBalptWm1PMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWpNR0ZpT1ROaE8xeHVJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FqTUdGaU9UTmhPMXh1SUNCamRYSnpiM0k2SUdSbFptRjFiSFE3WEc1OVhHNHVjbk10WW5SdUxTMXpiV0ZzYkNCN1hHNGdJSEJoWkdScGJtY3RkRzl3T2lBd0xqVmxiVHRjYmlBZ2NHRmtaR2x1WnkxaWIzUjBiMjA2SURBdU5XVnRPMXh1SUNCd1lXUmthVzVuTFd4bFpuUTZJREF1TldWdE8xeHVJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQXdMalZsYlR0Y2JuMWNiaTVvWlhKdklHSjFkSFJ2Ymk1a1lXNW5aWElzWEc1aWRYUjBiMjR1WkdGdVoyVnlJSHRjYmlBZ1kyOXNiM0k2SUNObVptWTdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNObE1URXdNVEE3WEc0Z0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDTmxNVEV3TVRBN1hHNTlYRzR1YUdWeWJ5QmlkWFIwYjI0dVpHRnVaMlZ5T21odmRtVnlMRnh1WW5WMGRHOXVMbVJoYm1kbGNqcG9iM1psY2lCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05sTVRFd01UQTdYRzRnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNObE1URXdNVEE3WEc1OVhHNHVhR1Z5YnlCaWRYUjBiMjR1WkdGdVoyVnlPbUZqZEdsMlpTeGNibUoxZEhSdmJpNWtZVzVuWlhJNllXTjBhWFpsSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJelpoTURBd01EdGNiaUFnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSXpaaE1EQXdNRHRjYm4xY2JpNW9aWEp2SUdKMWRIUnZiaTVrWVc1blpYSTZaR2x6WVdKc1pXUXNYRzVpZFhSMGIyNHVaR0Z1WjJWeU9tUnBjMkZpYkdWa0lIdGNiaUFnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nY21Wd1pXRjBhVzVuTFd4cGJtVmhjaTFuY21Ga2FXVnVkQ2d4TWpWa1pXY3NJSFJ5WVc1emNHRnlaVzUwTENCMGNtRnVjM0JoY21WdWRDQXljSGdzSUhKblltRW9NQ3d3TERBc01DNHlLU0F5Y0hnc0lISm5ZbUVvTUN3d0xEQXNNQzR5S1NBemNIZ3NJSFJ5WVc1emNHRnlaVzUwSUROd2VDd2dkSEpoYm5Od1lYSmxiblFnTlhCNExDQnlaMkpoS0RBc01Dd3dMREF1TWlrZ05YQjRLVHRjYm4xY2JpNW9aWEp2SUdKMWRIUnZiaTVrWVc1blpYSTZaR2x6WVdKc1pXUTZhRzkyWlhJc1hHNWlkWFIwYjI0dVpHRnVaMlZ5T21ScGMyRmliR1ZrT21odmRtVnlJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kyVXhNVEF4TUR0Y2JpQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2djbVZ3WldGMGFXNW5MV3hwYm1WaGNpMW5jbUZrYVdWdWRDZ3hNalZrWldjc0lIUnlZVzV6Y0dGeVpXNTBMQ0IwY21GdWMzQmhjbVZ1ZENBeWNIZ3NJSEpuWW1Fb01Dd3dMREFzTUM0eUtTQXljSGdzSUhKblltRW9NQ3d3TERBc01DNHlLU0F6Y0hnc0lIUnlZVzV6Y0dGeVpXNTBJRE53ZUN3Z2RISmhibk53WVhKbGJuUWdOWEI0TENCeVoySmhLREFzTUN3d0xEQXVNaWtnTlhCNEtUdGNiaUFnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSTJVeE1UQXhNRHRjYm4xY2JpNW9aWEp2SUdKMWRIUnZiaTVrWVc1blpYSTZabTlqZFhNc1hHNWlkWFIwYjI0dVpHRnVaMlZ5T21adlkzVnpJSHRjYmlBZ2IzVjBiR2x1WlRvZ2JtOXVaVHRjYm4xY2JpNW9aWEp2SUdKMWRIUnZiaUI3WEc0Z0lHTnZiRzl5T2lBalptWm1PMXh1SUNCbWIyNTBMWE5wZW1VNklERXVNbVZ0TzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ1ltOTRMWE5vWVdSdmR6b2dNQ0F3SURBZ01YQjRJQ05tWm1ZN1hHNTlYRzR1YUdWeWJ5QmlkWFIwYjI0NlptOWpkWE1nZTF4dUlDQnZkWFJzYVc1bE9pQnViMjVsTzF4dUlDQmliM2d0YzJoaFpHOTNPaUF3SURBZ01DQXhjSGdnSTJVeE1UQXhNRHRjYm4xY2JpNW9aWEp2SUdKMWRIUnZianBvYjNabGNpQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhKblltRW9NalUxTERJMU5Td3lOVFVzTUNrN1hHNTlYRzR1YUdWeWJ5QmlkWFIwYjI0NlpHbHpZV0pzWldRZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUJ5WlhCbFlYUnBibWN0YkdsdVpXRnlMV2R5WVdScFpXNTBLREV5TldSbFp5d2dkSEpoYm5Od1lYSmxiblFzSUhSeVlXNXpjR0Z5Wlc1MElESndlQ3dnY21kaVlTZ3lOVFVzTWpVMUxESTFOU3d3TGpNcElESndlQ3dnY21kaVlTZ3lOVFVzTWpVMUxESTFOU3d3TGpNcElETndlQ3dnZEhKaGJuTndZWEpsYm5RZ00zQjRMQ0IwY21GdWMzQmhjbVZ1ZENBMWNIZ3NJSEpuWW1Fb01qVTFMREkxTlN3eU5UVXNNQzR6S1NBMWNIZ3BPMXh1ZlZ4dUxtaGxjbThnWW5WMGRHOXVPbVJwYzJGaWJHVmtPbWh2ZG1WeUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nZEhKaGJuTndZWEpsYm5RN1hHNGdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSEpsY0dWaGRHbHVaeTFzYVc1bFlYSXRaM0poWkdsbGJuUW9NVEkxWkdWbkxDQjBjbUZ1YzNCaGNtVnVkQ3dnZEhKaGJuTndZWEpsYm5RZ01uQjRMQ0J5WjJKaEtESTFOU3d5TlRVc01qVTFMREF1TXlrZ01uQjRMQ0J5WjJKaEtESTFOU3d5TlRVc01qVTFMREF1TXlrZ00zQjRMQ0IwY21GdWMzQmhjbVZ1ZENBemNIZ3NJSFJ5WVc1emNHRnlaVzUwSURWd2VDd2djbWRpWVNneU5UVXNNalUxTERJMU5Td3dMak1wSURWd2VDazdYRzU5WEc0dWFHVnlieUJpZFhSMGIyNDZabTlqZFhNZ2UxeHVJQ0J2ZFhSc2FXNWxPaUJ1YjI1bE8xeHVmVnh1TG5KekxXbGpiMjR0WW5SdUlIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWm14bGVDMWthWEpsWTNScGIyNDZJSEp2ZHp0Y2JpQWdabXhsZURvZ01DQmhkWFJ2TzF4dUlDQnRhVzR0ZDJsa2RHZzZJREU0TUhCNE8xeHVJQ0JqYjJ4dmNqb2dJekF3TUR0Y2JpQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdJekF3TUR0Y2JpQWdkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsTzF4dUlDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lBblVtRnNaWGRoZVNjc0lITmhibk10YzJWeWFXWTdYRzRnSUdadmJuUXRjMmw2WlRvZ01YSmxiVHRjYm4xY2JpNXljeTFwWTI5dUxXSjBianBvYjNabGNpQjdYRzRnSUdOdmJHOXlPaUFqWm1abU8xeHVJQ0JpWVdOclozSnZkVzVrT2lBak1HRmlPVE5oTzF4dWZWeHVMbkp6TFdsamIyNHRZblJ1T21GamRHbDJaU0I3WEc0Z0lHOTFkR3hwYm1VNklHNXZibVU3WEc0Z0lHTnZiRzl5T2lBalptWm1PMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWpNRGczT1RJM08xeHVJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FqTURnM09USTNPMXh1ZlZ4dUxuSnpMV2xqYjI0dFluUnVPbVJwYzJGaWJHVmtJSHRjYmlBZ1kyOXNiM0k2SUNNM1pqZG1OMlk3WEc0Z0lHSmhZMnRuY205MWJtUTZJQ05qWVdOaFkyRTdYRzRnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNOallXTmhZMkU3WEc1OVhHNHVjbk10YVdOdmJpMWlkRzQ2Wm05amRYTWdlMXh1SUNCdmRYUnNhVzVsT2lCdWIyNWxPMXh1ZlZ4dUxuSnpMV2xqYjI0dFluUnVYMTlwWTI5dUlIdGNiaUFnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUhkcFpIUm9PaUF4TGpnM05XVnRPMXh1SUNCb1pXbG5hSFE2SURFdU9EYzFaVzA3WEc0Z0lHWnNaWGc2SURBZ01DQTFNSEI0TzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpabVptTzF4dWZWeHVMbkp6TFdsamIyNHRZblJ1WDE5c1lXSmxiQ0I3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lIQmhaR1JwYm1jdGJHVm1kRG9nTVdWdE8xeHVJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR1pzWlhndGMzUmhjblE3WEc0Z0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUdac1pYZzZJREU3WEc0Z0lHSmhZMnRuY205MWJtUTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQjBjbUZ1YzJsMGFXOXVPaUJpWVdOclozSnZkVzVrTFdOdmJHOXlJREl3TUcxeklHVmhjMlU3WEc1OVhHNHVjbk10YVdOdmJpMWlkRzVmWDJ4aFltVnNPbWh2ZG1WeUlIdGNiaUFnWW1GamEyZHliM1Z1WkRvZ0l6QmhZamt6WVR0Y2JuMWNiaTV5Y3kxcFkyOXVMV0owYmw5ZmFXTnZibDlmZDNKaGNIQmxjaUI3WEc0Z0lIZHBaSFJvT2lBeUxqVmxiVHRjYmlBZ2FHVnBaMmgwT2lBeUxqVmxiVHRjYmlBZ1ltOXlaR1Z5TFhKcFoyaDBPaUF4Y0hnZ2MyOXNhV1FnSXpBd01EdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJqWlc1MFpYSTdYRzRnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNObVptWTdYRzU5WEc0dWNuTXRaR0Z1WjJWeUxXSjBiaUI3WEc0Z0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQjNhV1IwYURvZ01qSXdjSGc3WEc0Z0lIQmhaR1JwYm1jdGNtbG5hSFE2SURNd2NIZzdYRzRnSUhCaFpHUnBibWN0YkdWbWREb2dNekJ3ZUR0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMlV4TVRBeE1EdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklFVnNaV04wY205c2FYcGxMQ0J6WVc1ekxYTmxjbWxtTzF4dUlDQnNaWFIwWlhJdGMzQmhZMmx1WnpvZ01uQjRPMXh1SUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4dUlDQmpiMnh2Y2pvZ0kyWm1aanRjYmlBZ2RISmhibk5wZEdsdmJqb2dZV3hzSURNd01HMXpJR1ZoYzJVN1hHNTlYRzR1Y25NdFpHRnVaMlZ5TFdKMGJqcG9iM1psY2l4Y2JpNXljeTFrWVc1blpYSXRZblJ1T25acGMybDBaV1FzWEc0dWNuTXRaR0Z1WjJWeUxXSjBianAyYVhOcGRHVmtPbWh2ZG1WeUlIdGNiaUFnZDJsa2RHZzZJREV3TUNVN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05oWVRCak1HTTdYRzRnSUdOdmJHOXlPaUFqWm1abU8xeHVmVnh1THlwY2JpQWdJQ29nUkdWbVlYVnNkQ0J6WlhSMGFXNW5jenBjYmlBZ0lDb3ZYRzR2S2x4dUlDQWdLaUJDY21WaGEzQnZhVzUwSUhObGRIVndPbHh1SUNBZ0tpOWNibWx1Y0hWMFczUjVjR1U5SjNKaGJtZGxKMTBnZTF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdZbTl5WkdWeU9pQnpiMnhwWkNBd0xqVmxiU0IwY21GdWMzQmhjbVZ1ZER0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ2QybGtkR2c2SURFMVpXMDdYRzRnSUdobGFXZG9kRG9nTW1WdE8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXdMakkxWlcwN1hHNGdJR0poWTJ0bmNtOTFibVE2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0JtYjI1MExYTnBlbVU2SURGbGJUdGNiaUFnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh1ZlZ4dWFXNXdkWFJiZEhsd1pUMG5jbUZ1WjJVblhTeGNibWx1Y0hWMFczUjVjR1U5SjNKaGJtZGxKMTA2T2kxM1pXSnJhWFF0YzJ4cFpHVnlMWEoxYm01aFlteGxMWFJ5WVdOckxGeHVhVzV3ZFhSYmRIbHdaVDBuY21GdVoyVW5YVG82TFhkbFltdHBkQzF6Ykdsa1pYSXRkR2gxYldJZ2UxeHVJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUc1dmJtVTdYRzU5WEc1cGJuQjFkRnQwZVhCbFBTZHlZVzVuWlNkZE9qb3RiWE10ZEhKaFkyc2dlMXh1SUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh1SUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ1ltOXlaR1Z5TFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2JpQWdZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBPMXh1ZlZ4dWFXNXdkWFJiZEhsd1pUMG5jbUZ1WjJVblhUbzZMWGRsWW10cGRDMXpiR2xrWlhJdGNuVnVibUZpYkdVdGRISmhZMnNnZTF4dUlDQjNhV1IwYURvZ01UVmxiVHRjYmlBZ2FHVnBaMmgwT2lBd0xqVmxiVHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTUM0eU5XVnRPMXh1SUNCaVlXTnJaM0p2ZFc1a09pQnNhVzVsWVhJdFozSmhaR2xsYm5Rb0kyVXhNVEF4TUN3Z0kyVXhNVEF4TUNrZ2JtOHRjbVZ3WldGMElDTmpZV05oWTJFN1hHNGdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dNQ1VnTVRBd0pUdGNibjFjYm1sdWNIVjBXM1I1Y0dVOUozSmhibWRsSjEwNk9pMTNaV0pyYVhRdGMyeHBaR1Z5TFhSb2RXMWlJSHRjYmlBZ2JXRnlaMmx1TFhSdmNEb2dMVEF1TWpWbGJUdGNiaUFnWW05eVpHVnlPaUJ1YjI1bE8xeHVJQ0IzYVdSMGFEb2dNV1Z0TzF4dUlDQm9aV2xuYUhRNklERmxiVHRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTlRBbE8xeHVJQ0JpYjNndGMyaGhaRzkzT2lBd0lEQWdNQzR4TWpWbGJTQWpNek16TzF4dUlDQmlZV05yWjNKdmRXNWtPaUFqWm1abU8xeHVmVnh1YVc1d2RYUmJkSGx3WlQwbmNtRnVaMlVuWFRwbWIyTjFjeUI3WEc0Z0lHOTFkR3hwYm1VNklHNXZibVU3WEc0Z0lHSnZlQzF6YUdGa2IzYzZJREFnTUNBeGNIZ2dJMlV4TVRBeE1EdGNibjFjYm1sdWNIVjBXM1I1Y0dVOUozSmhibWRsSjEwdWNISnZaM0psYzNNZ2UxeHVJQ0JqZFhKemIzSTZJR2x1YVhScFlXdzdYRzU5WEc1cGJuQjFkRnQwZVhCbFBTZHlZVzVuWlNkZExuQnliMmR5WlhOek9qb3RkMlZpYTJsMExYTnNhV1JsY2kxMGFIVnRZaUI3WEc0Z0lHUnBjM0JzWVhrNklHNXZibVU3WEc1OVhHNXBibkIxZEZ0MGVYQmxQU2R5WVc1blpTZGRMbkJ5YjJkeVpYTnpPbVp2WTNWeklIdGNiaUFnYjNWMGJHbHVaVG9nYm05dVpUdGNiaUFnWW05NExYTm9ZV1J2ZHpvZ2JtOXVaVHRjYm4xY2JtbHVjSFYwVzNSNWNHVTlKM0poYm1kbEoxMHVZVzVwYldGMFpXUTZPaTEzWldKcmFYUXRjMnhwWkdWeUxYSjFibTVoWW14bExYUnlZV05ySUh0Y2JpQWdkSEpoYm5OcGRHbHZiam9nWW1GamEyZHliM1Z1WkMxemFYcGxJRFF3TUcxeklHVmhjMlV0YVc0N1hHNTlYRzR2S2x4dUlDQWdLaUJFWldaaGRXeDBJSE5sZEhScGJtZHpPbHh1SUNBZ0tpOWNiaThxWEc0Z0lDQXFJRUp5WldGcmNHOXBiblFnYzJWMGRYQTZYRzRnSUNBcUwxeHVMbVJ2ZDI0dFlYSnliM2NnZTF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdkMmxrZEdnNklESXdjSGc3WEc0Z0lHaGxhV2RvZERvZ016QndlRHRjYmlBZ2JXRnlaMmx1TFhKcFoyaDBPaUJoZFhSdk8xeHVJQ0J0WVhKbmFXNHRiR1ZtZERvZ1lYVjBienRjYmlBZ2NHRmtaR2x1WnpvZ01XVnRPMXh1SUNCbWJHOWhkRG9nYm05dVpUdGNiaUFnWTJ4bFlYSTZJRzV2Ym1VN1hHNGdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNoY0ltaDBkSEJ6T2k4dmMzUmhkR2xqTG5KbFpITnBablF1YVc4dllYTnpaWFJ6TDJsamIyNXpMMlJ2ZDI0dFlYSnliM2N0ZDJocGRHVXRNUzR3TG5OMloxd2lLVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dOVEFsSURVd0pUdGNiaUFnWW1GamEyZHliM1Z1WkMxemFYcGxPaUF6TUhCNElESXdjSGc3WEc0Z0lHSmhZMnRuY205MWJtUXRjbVZ3WldGME9pQnVieTF5WlhCbFlYUTdYRzRnSUc5d1lXTnBkSGs2SURBdU5qdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nZEhKaGJuTndZWEpsYm5RN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUc5d1lXTnBkSGtnWTNWaWFXTXRZbVY2YVdWeUtEQXVNVGMxTENBd0xqZzROU3dnTUM0ek16VXNJREV1TVRVMUtTQTBNREJ0Y3p0Y2JuMWNiaTVrYjNkdUxXRnljbTkzT21odmRtVnlJSHRjYmlBZ2IzQmhZMmwwZVRvZ01UdGNibjFjYmk4cVhHNGdJQ0FxSUVSbFptRjFiSFFnYzJWMGRHbHVaM002WEc0Z0lDQXFMMXh1THlwY2JpQWdJQ29nUW5KbFlXdHdiMmx1ZENCelpYUjFjRHBjYmlBZ0lDb3ZYRzR1YzNSNWJHVXRjM2RwZEdOb1pYSWdlMXh1SUNCNkxXbHVaR1Y0T2lBeE1EQXdPMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdac1pYZ3RaVzVrTzF4dUlDQndiM05wZEdsdmJqb2dabWw0WldRN1hHNGdJSEpwWjJoME9pQXdPMXh1SUNCc1pXWjBPaUF3TzF4dUlDQmliM1IwYjIwNklEQTdYRzRnSUhCaFpHUnBibWM2SURBdU9HVnRPMXh1SUNCaVlXTnJaM0p2ZFc1a09pQnlaMkpoS0RBc01Dd3dMREF1T1NrN1hHNTlYRzR1YzNSNWJHVXRjM2RwZEdOb1pYSWdZblYwZEc5dUlIdGNiaUFnYldGeVoybHVMWEpwWjJoME9pQXhaVzA3WEc1OVhHNGlMQ0l2S2x4dUlDb2dRbTlrZVNCeVpYTmxkRnh1SUNvZ2FIUjBjRG92TDJOdlpHVndaVzR1YVc4dllXSnpiMngxZEdodmJIb3ZjR1Z1TDFoS1NuQlFXRnh1SUNwY2JpQXFMMXh1THk4Z2FIUnRiQ0I3WEc0dkx5QWdJR2hsYVdkb2REb2dNVEF3SlR0Y2JpOHZJSDFjYmx4dVltOWtlU0I3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdiV2x1TFdobGFXZG9kRG9nTVRBd0pUdGNibjFjYmlJc0lpUndZWFIwWlhKdWMxOWZaRzkzYmkxaGNuSnZkeTFuY21WbGJpMW9aV2xuYUhRZ1BTQTNjSGhjYmlSd1lYUjBaWEp1YzE5ZlpHOTNiaTFoY25KdmR5MW5jbVZsYmkxM2FXUjBhQ0E5SURFeWNIaGNiaVJ3WVhSMFpYSnVjMTlmY21Wa2MybG1kQzFzYjJkdkxXaGxhV2RvZENBOUlEZHdlRnh1SkhCaGRIUmxjbTV6WDE5eVpXUnphV1owTFd4dloyOHRkMmxrZEdnZ1BTQTNjSGhjYmx4dUxpMXdZWFIwWlhKdUxXUnZkMjR0WVhKeWIzY3RaM0psWlc0Z2UxeHVJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b1hDSXZhV052Ym5NdlpHOTNiaTFoY25KdmR5MW5jbVZsYmk1emRtZGNJaWs3WEc0Z0lHSmhZMnRuY205MWJtUXRjbVZ3WldGME9pQnlaWEJsWVhRN1hHNGdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dKSEJoZEhSbGNtNXpYMTlrYjNkdUxXRnljbTkzTFdkeVpXVnVMWGRwWkhSb0lDUndZWFIwWlhKdWMxOWZaRzkzYmkxaGNuSnZkeTFuY21WbGJpMW9aV2xuYUhRN1hHNTlYRzVjYmk0dGNHRjBkR1Z5YmkxeVpXUnphV1owTFd4dloyOGdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29YQ0l2YVdOdmJuTXZjbVZrYzJsbWRDMXNiMmR2TFhKbFpDMDRMakV1YzNablhDSXBPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2NtVndaV0YwTzF4dUlDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklDUndZWFIwWlhKdWMxOWZjbVZrYzJsbWRDMXNiMmR2TFhkcFpIUm9JQ1J3WVhSMFpYSnVjMTlmY21Wa2MybG1kQzFzYjJkdkxXaGxhV2RvZER0Y2JuMWNiaUlzSWk4cUlFWnZjaUJLWVhaaGMyTnlhWEIwSUdOb1lXNW5aU0IwYUdVZ1kzVnlkbVZ6SUdsdUlHUXpMM1J2YjJ4ekxtcHpJQ292WEc0a1kzVnlkbVZTWldSemFXWjBJRDBnWTNWaWFXTXRZbVY2YVdWeUtEQXVNVGMxTENBd0xqZzROU3dnTUM0ek16VXNJREV1TVRVMUtWeHVKSFJwYldWU1pXUnphV1owSUQwZ05EQXdiWE5jYmx4dUx5b2dibTkwSUhWemFXNW5JSFJvWlNCamRYSjJaU0JvWlhKbElHRnpJR1poWkdsdVp5QnVaV1ZrY3lCaElHUnBabVp5Wlc1MElITm9ZWEJsSUNvdlhHNHVZVzVwYldGMFpTMXZjR0ZqYVhSNUlIdGNibHgwZEhKaGJuTnBkR2x2YmpvZ2IzQmhZMmwwZVNCbFlYTmxMV2x1SUNSMGFXMWxVbVZrYzJsbWREdGNibjFjYmx4dUxtWmhaR1V0YVc0Z2UxeHVYSFJoYm1sdFlYUnBiMjQ2SUdaaFpHVnBiaUFrZEdsdFpWSmxaSE5wWm5RZ1pXRnpaUzFwYmlBd2N5QXhJRzV2Y20xaGJDQmliM1JvTzF4MFhHNTlYRzVjYmk1a1pXeGhlU0I3WEc1Y2RHRnVhVzFoZEdsdmJpMWtaV3hoZVRvZ0pIUnBiV1ZTWldSemFXWjBPMXh1ZlZ4dVhHNUFhMlY1Wm5KaGJXVnpJR1poWkdWcGJpQjdYRzRnSUNBZ1puSnZiU0I3SUc5d1lXTnBkSGs2SURBdU1Ec2dmVnh1SUNBZ0lIUnZJQ0FnZXlCdmNHRmphWFI1T2lBeExqQTdJSDFjYm4waUxDSXZLbHh1SUNvZ1EyOXRiVzl1SUdKaGMyVWdjM1I1YkdWelhHNGdLaTljYmk1b2FXUmtaVzRnZTF4dUlDQnZjR0ZqYVhSNU9pQXdPMXh1ZlZ4dVhHNHVhR0Z6YUNCN1hHNGdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSEJoZEhSbGNtNHRMV052Y21Vb0tUdGNibjFjYmlJc0lpNHRjbk10YVdOdmJpMXlaV1J6YVdaMExYSmxaQ0I3WEc0Z0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklIVnliQ2duYUhSMGNITTZMeTl6ZEdGMGFXTXVjbVZrYzJsbWRDNXBieTloYzNObGRITXZkV2t0Y25NdFkyOXlaUzlwWTI5dWN5OHRjbk10YVdOdmJpMXlaV1J6YVdaMExYSmxaQzV6ZG1jbktUdGNiaUFnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ05UQWxJRFV3SlR0Y2JpQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQXpNSEI0TzF4dUlDQmlZV05yWjNKdmRXNWtMWEpsY0dWaGREb2dibTh0Y21Wd1pXRjBPMXh1ZlZ4dVhHNHVjbk10YVdOdmJpMXlaV1J6YVdaMExXTnNiM1ZrSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dkWEpzS0Nkb2RIUndjem92TDNOMFlYUnBZeTV5WldSemFXWjBMbWx2TDJGemMyVjBjeTkxYVMxeWN5MWpiM0psTDJsamIyNXpMeTF5Y3kxcFkyOXVMWEpsWkhOcFpuUXRZMnh2ZFdRdWMzWm5KeWs3WEc0Z0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJRFV3SlNBMU1DVTdYRzRnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nTXpCd2VEdGNiaUFnWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2JuMWNibHh1TGkxeWN5MXBZMjl1TFhKbFpITnBablF0ZDJocGRHVWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29KMmgwZEhCek9pOHZjM1JoZEdsakxuSmxaSE5wWm5RdWFXOHZZWE56WlhSekwzVnBMWEp6TFdOdmNtVXZhV052Ym5NdkxYSnpMV2xqYjI0dGNtVmtjMmxtZEMxM2FHbDBaUzV6ZG1jbktUdGNiaUFnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ05UQWxJRFV3SlR0Y2JpQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQXpNSEI0TzF4dUlDQmlZV05yWjNKdmRXNWtMWEpsY0dWaGREb2dibTh0Y21Wd1pXRjBPMXh1ZlZ4dVhHNHVMWEp6TFdsamIyNHRaMmwwYUhWaUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tDZG9kSFJ3Y3pvdkwzTjBZWFJwWXk1eVpXUnphV1owTG1sdkwyRnpjMlYwY3k5MWFTMXljeTFqYjNKbEwybHRZV2RsY3k5cFkyOXVMV2RwZEdoMVlpNXpkbWNuS1R0Y2JpQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nTlRBbElEVXdKVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lBek1IQjRPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2JtOHRjbVZ3WldGME8xeHVmVnh1WEc0dUxYSnpMV2xqYjI0dFoyOXZaMnhsSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dkWEpzS0Nkb2RIUndjem92TDNOMFlYUnBZeTV5WldSemFXWjBMbWx2TDJGemMyVjBjeTkxYVMxeWN5MWpiM0psTDJsdFlXZGxjeTlwWTI5dUxXZHZiMmRzWlM1emRtY25LVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dOVEFsSURVd0pUdGNiaUFnWW1GamEyZHliM1Z1WkMxemFYcGxPaUF6TUhCNE8xeHVJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwTzF4dWZWeHVYRzR1TFhKekxXbGpiMjR0YzJ4aFkyc2dlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29KMmgwZEhCek9pOHZjM1JoZEdsakxuSmxaSE5wWm5RdWFXOHZZWE56WlhSekwzVnBMWEp6TFdOdmNtVXZhVzFoWjJWekwybGpiMjR0YzJ4aFkyc3VjRzVuSnlrN1hHNGdJR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SURVd0pTQTFNQ1U3WEc0Z0lHSmhZMnRuY205MWJtUXRjMmw2WlRvZ016QndlRHRjYmlBZ1ltRmphMmR5YjNWdVpDMXlaWEJsWVhRNklHNXZMWEpsY0dWaGREdGNibjFjYmx4dUxpMXljeTFwWTI5dUxYUjNhWFIwWlhJZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b0oyaDBkSEJ6T2k4dmMzUmhkR2xqTG5KbFpITnBablF1YVc4dllYTnpaWFJ6TDNWcExYSnpMV052Y21VdmFXMWhaMlZ6TDJsamIyNHRkSGRwZEhSbGNpNXpkbWNuS1R0Y2JpQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nTlRBbElEVXdKVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lBek1IQjRPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2JtOHRjbVZ3WldGME8xeHVmVnh1WEc0dUxYSnpMV2xqYjI0dGMyVjBkR2x1WjNNZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b0oyaDBkSEJ6T2k4dmMzUmhkR2xqTG5KbFpITnBablF1YVc4dllYTnpaWFJ6TDNWcExYSnpMV052Y21VdmFXMWhaMlZ6TDJsamIyNHRjMlYwZEdsdVozTXVjM1puSnlrN1hHNGdJR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SURVd0pTQTFNQ1U3WEc0Z0lHSmhZMnRuY205MWJtUXRjMmw2WlRvZ016QndlRHRjYmlBZ1ltRmphMmR5YjNWdVpDMXlaWEJsWVhRNklHNXZMWEpsY0dWaGREdGNibjFjYmx4dUxpMXljeTFwWTI5dUxXVjRhWFFnZTF4dUlDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQjFjbXdvSjJoMGRIQnpPaTh2YzNSaGRHbGpMbkpsWkhOcFpuUXVhVzh2WVhOelpYUnpMM1ZwTFhKekxXTnZjbVV2YVcxaFoyVnpMMmxqYjI0dFpYaHBkQzV6ZG1jbktUdGNiaUFnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ05UQWxJRFV3SlR0Y2JpQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQXpNSEI0TzF4dUlDQmlZV05yWjNKdmRXNWtMWEpsY0dWaGREb2dibTh0Y21Wd1pXRjBPMXh1ZlZ4dVhHNHVMWEp6TFdsamIyNHRjSEp2Wm1sc1pTQjdYRzRnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDZ25hSFIwY0hNNkx5OXpkR0YwYVdNdWNtVmtjMmxtZEM1cGJ5OWhjM05sZEhNdmRXa3Rjbk10WTI5eVpTOXBiV0ZuWlhNdmFXTnZiaTF3Y205bWFXeGxMbk4yWnljcE8xeHVJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2lBMU1DVWdOVEFsTzF4dUlDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklETXdjSGc3WEc0Z0lHSmhZMnRuY205MWJtUXRjbVZ3WldGME9pQnVieTF5WlhCbFlYUTdYRzU5WEc1Y2JpNHRjbk10YVdOdmJpMWtiM2R1TFdGeWNtOTNMV2R5WldWdUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tDZG9kSFJ3Y3pvdkwzTjBZWFJwWXk1eVpXUnphV1owTG1sdkwyRnpjMlYwY3k5MWFTMXljeTFqYjNKbEwybHRZV2RsY3k5cFkyOXVMV1J2ZDI0dFlYSnliM2N0WjNKbFpXNHVjM1puSnlrN1hHNGdJR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SURVd0pTQTFNQ1U3WEc0Z0lHSmhZMnRuY205MWJtUXRjMmw2WlRvZ016QndlRHRjYmlBZ1ltRmphMmR5YjNWdVpDMXlaWEJsWVhRNklHNXZMWEpsY0dWaGREdGNibjFjYmx4dUxpMXljeTFwWTI5dUxXeHZaMjkxZENCN1hHNGdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJSFZ5YkNnbmFIUjBjSE02THk5emRHRjBhV011Y21Wa2MybG1kQzVwYnk5aGMzTmxkSE12ZFdrdGNuTXRZMjl5WlM5cFkyOXVjeTh0Y25NdGFXTnZiaTFzYjJkdmRYUXVjM1puSnlrN1hHNGdJR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SURVd0pTQTFNQ1U3WEc0Z0lHSmhZMnRuY205MWJtUXRjMmw2WlRvZ016QndlRHRjYmlBZ1ltRmphMmR5YjNWdVpDMXlaWEJsWVhRNklHNXZMWEpsY0dWaGREdGNibjFjYmx4dUxpMXljeTFwWTI5dUxYQnliMlpwYkdVZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b0oyaDBkSEJ6T2k4dmMzUmhkR2xqTG5KbFpITnBablF1YVc4dllYTnpaWFJ6TDNWcExYSnpMV052Y21VdmFXTnZibk12TFhKekxXbGpiMjR0Y0hKdlptbHNaUzV6ZG1jbktUdGNiaUFnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ05UQWxJRFV3SlR0Y2JpQWdZbUZqYTJkeWIzVnVaQzF6YVhwbE9pQXpNSEI0TzF4dUlDQmlZV05yWjNKdmRXNWtMWEpsY0dWaGREb2dibTh0Y21Wd1pXRjBPMXh1ZlZ4dVhHNHVMWEp6TFdsamIyNHRaR0Z6YUdKdllYSmtJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2RYSnNLQ2RvZEhSd2N6b3ZMM04wWVhScFl5NXlaV1J6YVdaMExtbHZMMkZ6YzJWMGN5OTFhUzF5Y3kxamIzSmxMMmxqYjI1ekx5MXljeTFwWTI5dUxXUmhjMmhpYjJGeVpDNXpkbWNuS1R0Y2JpQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nTlRBbElEVXdKVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lBeU5IQjRPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYSmxjR1ZoZERvZ2JtOHRjbVZ3WldGME8xeHVmVnh1WEc0dUxYSnpMV2xqYjI0dFkyRjBZV3h2WjNWbElIdGNiaUFnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tDZG9kSFJ3Y3pvdkwzTjBZWFJwWXk1eVpXUnphV1owTG1sdkwyRnpjMlYwY3k5MWFTMXljeTFqYjNKbEwybGpiMjV6THkxeWN5MXBZMjl1TFdOaGRHRnNiMmQxWlM1emRtY25LVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dOVEFsSURVd0pUdGNiaUFnWW1GamEyZHliM1Z1WkMxemFYcGxPaUF5TkhCNE8xeHVJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwTzF4dWZWeHVYRzR1TFhKekxXbGpiMjR0ZDI5eWEzTm9iM0FnZTF4dUlDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQjFjbXdvSjJoMGRIQnpPaTh2YzNSaGRHbGpMbkpsWkhOcFpuUXVhVzh2WVhOelpYUnpMM1ZwTFhKekxXTnZjbVV2YVdOdmJuTXZMWEp6TFdsamIyNHRkMjl5YTNOb2IzQXVjM1puSnlrN1hHNGdJR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SURVd0pTQTFNQ1U3WEc0Z0lHSmhZMnRuY205MWJtUXRjMmw2WlRvZ01qUndlRHRjYmlBZ1ltRmphMmR5YjNWdVpDMXlaWEJsWVhRNklHNXZMWEpsY0dWaGREdGNibjFjYmx4dUxpMXljeTFwWTI5dUxYZHBjbVZtY21GdFpTMWliSFZsSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dkWEpzS0Nkb2RIUndjem92TDNOMFlYUnBZeTV5WldSemFXWjBMbWx2TDJGemMyVjBjeTkxYVMxeWN5MWpiM0psTDJsamIyNXpMeTF5Y3kxcFkyOXVMWGRwY21WbWNtRnRaUzFpYkhWbExuTjJaeWNwTzF4dUlDQmlZV05yWjNKdmRXNWtMWEJ2YzJsMGFXOXVPaUExTUNVZ05UQWxPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SURNd2NIZzdYRzRnSUdKaFkydG5jbTkxYm1RdGNtVndaV0YwT2lCdWJ5MXlaWEJsWVhRN1hHNTlYRzVjYmk0dGNuTXRhV052YmkxbGVIQmhibVFnZTF4dUlDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQjFjbXdvSjJoMGRIQnpPaTh2YzNSaGRHbGpMbkpsWkhOcFpuUXVhVzh2WVhOelpYUnpMM1ZwTFhKekxXTnZjbVV2YVdOdmJuTXZMWEp6TFdsamIyNHRaWGh3WVc1a0xuTjJaeWNwTzF4dUlDQmlZV05yWjNKdmRXNWtMWEJ2YzJsMGFXOXVPaUExTUNVZ05UQWxPMXh1SUNCaVlXTnJaM0p2ZFc1a0xYTnBlbVU2SURNd2NIZzdYRzRnSUdKaFkydG5jbTkxYm1RdGNtVndaV0YwT2lCdWJ5MXlaWEJsWVhRN1hHNTlYRzVjYmk0dGNuTXRhV052YmkxbGVIQmhibVF0YzNCc2FYUWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29KMmgwZEhCek9pOHZjM1JoZEdsakxuSmxaSE5wWm5RdWFXOHZZWE56WlhSekwzVnBMWEp6TFdOdmNtVXZhV052Ym5NdkxYSnpMV2xqYjI0dFpYaHdZVzVrTFhOd2JHbDBMbk4yWnljcE8xeHVJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2lBMU1DVWdOVEFsTzF4dUlDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklETXdjSGc3WEc0Z0lHSmhZMnRuY205MWJtUXRjbVZ3WldGME9pQnVieTF5WlhCbFlYUTdYRzU5WEc1Y2JpNHRjbk10YVdOdmJpMWxlR2wwSUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dkWEpzS0Nkb2RIUndjem92TDNOMFlYUnBZeTV5WldSemFXWjBMbWx2TDJGemMyVjBjeTkxYVMxeWN5MWpiM0psTDJsamIyNXpMeTF5Y3kxcFkyOXVMV1Y0YVhRdWMzWm5KeWs3WEc0Z0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJRFV3SlNBMU1DVTdYRzRnSUdKaFkydG5jbTkxYm1RdGMybDZaVG9nTXpCd2VEdGNiaUFnWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2JuMWNiaUlzSW5ObGRIVndMV1p2Ym5RdFptRmpaWE1vSkhkdlptWXlJRDBnZEhKMVpTa2dlMXh1WEc0dktpQklaV0ZrYVc1bklHWnZiblFnUUdsdGNHOXlkQ0IxY213b1hDSm9kSFJ3Y3pvdkwyWnZiblJ6TG1kdmIyZHNaV0Z3YVhNdVkyOXRMMk56Y3o5bVlXMXBiSGs5VW1Gc1pYZGhlVG95TURCY0lpazdJQ292WEc0dktpQnNZWFJwYmlBcUwxeHVRR1p2Ym5RdFptRmpaU0I3WEc0Z0lHWnZiblF0Wm1GdGFXeDVPaUFuVW1Gc1pYZGhlU2M3WEc0Z0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNiaUFnWm05dWRDMTNaV2xuYUhRNklESXdNRHRjYmlBZ2MzSmpPaUJzYjJOaGJDZ25VbUZzWlhkaGVTQkZlSFJ5WVV4cFoyaDBKeWtzSUd4dlkyRnNLQ2RTWVd4bGQyRjVMVVY0ZEhKaFRHbG5hSFFuS1N3Z2RYSnNLR2gwZEhCek9pOHZabTl1ZEhNdVozTjBZWFJwWXk1amIyMHZjeTl5WVd4bGQyRjVMM1l4TVM4NFMyaGFaRE5XVVVKMFdGUkJlbTUyUzJwM0xXczNNMmh3ZHpOd1oza3laMEZwTFVsd04xZFFUV2t3TG5kdlptWXBJR1p2Y20xaGRDZ25kMjltWmljcExDQjFjbXdvYUhSMGNITTZMeTltYjI1MGN5NW5jM1JoZEdsakxtTnZiUzl6TDNKaGJHVjNZWGt2ZGpFeEx6aExhRnBrTTFaUlFuUllWRUY2Ym5aTGFuY3RhM2t6VlZOQ2JsTjJjR3R2Y0ZGaFZWSXRNbkkzYVZVdWRIUm1LU0JtYjNKdFlYUW9KM1J5ZFdWMGVYQmxKeWs3WEc1OVhHNXBaaUFrZDI5bVpqSWdlMXh1SUNCQVptOXVkQzFtWVdObElIdGNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dKMUpoYkdWM1lYa25PMXh1SUNBZ0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dNakF3TzF4dUlDQWdJSE55WXpvZ2JHOWpZV3dvSjFKaGJHVjNZWGtnUlhoMGNtRk1hV2RvZENjcExDQnNiMk5oYkNnblVtRnNaWGRoZVMxRmVIUnlZVXhwWjJoMEp5a3NJSFZ5YkNob2RIUndjem92TDJadmJuUnpMbWR6ZEdGMGFXTXVZMjl0TDNNdmNtRnNaWGRoZVM5Mk1URXZPRXRvV21RelZsRkNkRmhVUVhwdWRrdHFkeTFyZDNwNVJFMVlhR1JFT0hOQmFqWlBRVXBVUm5OQ1NTNTNiMlptTWlrZ1ptOXliV0YwS0NkM2IyWm1NaWNwTzF4dUlDQWdJSFZ1YVdOdlpHVXRjbUZ1WjJVNklGVXJNREF3TUMwd01FWkdMQ0JWS3pBeE16RXNJRlVyTURFMU1pMHdNVFV6TENCVkt6QXlRellzSUZVck1ESkVRU3dnVlNzd01rUkRMQ0JWS3pJd01EQXRNakEyUml3Z1ZTc3lNRGMwTENCVkt6SXdRVU1zSUZVck1qSXhNaXdnVlNzeU1qRTFMQ0JWSzBVd1JrWXNJRlVyUlVaR1JDd2dWU3RHTURBd08xeHVJQ0I5WEc1OVhHNHZLaUJJWldGa2FXNW5JR1p2Ym5RZ1FHbHRjRzl5ZENCMWNtd29YQ0pvZEhSd2N6b3ZMMlp2Ym5SekxtZHZiMmRzWldGd2FYTXVZMjl0TDJOemN6OW1ZVzFwYkhrOVJXeGxZM1J5YjJ4cGVtVmNJaWs3SUNvdlhHNUFabTl1ZEMxbVlXTmxJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJQ2RGYkdWamRISnZiR2w2WlNjN1hHNGdJR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFF3TUR0Y2JpQWdjM0pqT2lCc2IyTmhiQ2duUld4bFkzUnliMnhwZW1VbktTd2diRzlqWVd3b0owVnNaV04wY205c2FYcGxMVkpsWjNWc1lYSW5LU3dnZFhKc0tHaDBkSEJ6T2k4dlptOXVkSE11WjNOMFlYUnBZeTVqYjIwdmN5OWxiR1ZqZEhKdmJHbDZaUzkyTlM5RVJIazVjMmRWTWxVM1V6UjRRWGRJTlhSb2JrbzNja2xoTFRkaFkwMUJaVVJDVm5WamJITnBOa2RqTG5kdlptWXBJR1p2Y20xaGRDZ25kMjltWmljcExDQjFjbXdvYUhSMGNITTZMeTltYjI1MGN5NW5jM1JoZEdsakxtTnZiUzl6TDJWc1pXTjBjbTlzYVhwbEwzWTFMMFJFZVRseloxVXlWVGRUTkhoQmQwZzFkR2h1U25sM2JHbGtTRXBuUVdkdFZHcFBSVVY2ZDNVeFREZ3VkSFJtS1NCbWIzSnRZWFFvSjNSeWRXVjBlWEJsSnlrN1hHNTlYRzVwWmlBa2QyOW1aaklnZTF4dUlDQkFabTl1ZEMxbVlXTmxJSHRjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSjBWc1pXTjBjbTlzYVhwbEp6dGNiaUFnSUNCbWIyNTBMWE4wZVd4bE9pQnViM0p0WVd3N1hHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklEUXdNRHRjYmlBZ0lDQnpjbU02SUd4dlkyRnNLQ2RGYkdWamRISnZiR2w2WlNjcExDQnNiMk5oYkNnblJXeGxZM1J5YjJ4cGVtVXRVbVZuZFd4aGNpY3BMQ0IxY213b1hDSm9kSFJ3Y3pvdkwyWnZiblJ6TG1kemRHRjBhV011WTI5dEwzTXZaV3hsWTNSeWIyeHBlbVV2ZGpVdlJFUjVPWE5uVlRKVk4xTTBlRUYzU0RWMGFHNUtOR2R3T1ZFNFoySlpjbWh4UjJ4U1lYWmZTVmhtYXk1M2IyWm1NbHdpS1NCbWIzSnRZWFFvSjNkdlptWXlKeWs3WEc0Z0lDQWdkVzVwWTI5a1pTMXlZVzVuWlRvZ1ZTc3dNREF3TFRBd1JrWXNJRlVyTURFek1Td2dWU3N3TVRVeUxUQXhOVE1zSUZVck1ESkROaXdnVlNzd01rUkJMQ0JWS3pBeVJFTXNJRlVyTWpBd01DMHlNRFpHTENCVkt6SXdOelFzSUZVck1qQkJReXdnVlNzeU1qRXlMQ0JWS3pJeU1UVXNJRlVyUlRCR1Jpd2dWU3RGUmtaRUxDQlZLMFl3TURBN1hHNGdJSDFjYm4xY2JpOHFJRU52WkdVZ1ptOXVkQ0JBYVcxd2IzSjBJSFZ5YkNoY0ltaDBkSEJ6T2k4dlptOXVkSE11WjI5dloyeGxZWEJwY3k1amIyMHZZM056UDJaaGJXbHNlVDFUYjNWeVkyVXJRMjlrWlN0UWNtODZNekF3TERRd01DdzNNREJjSWlrN0lDb3ZYRzVBWm05dWRDMW1ZV05sSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUNkVGIzVnlZMlVnUTI5a1pTQlFjbThuTzF4dUlDQm1iMjUwTFhOMGVXeGxPaUJ1YjNKdFlXdzdYRzRnSUdadmJuUXRkMlZwWjJoME9pQXpNREE3WEc0Z0lITnlZem9nYkc5allXd29KMU52ZFhKalpTQkRiMlJsSUZCeWJ5Qk1hV2RvZENjcExDQnNiMk5oYkNnblUyOTFjbU5sUTI5a1pWQnlieTFNYVdkb2RDY3BMQ0IxY213b2FIUjBjSE02THk5bWIyNTBjeTVuYzNSaGRHbGpMbU52YlM5ekwzTnZkWEpqWldOdlpHVndjbTh2ZGpZdmJHVnhkak4yTFhsVWMwcE9RemR1Um5wdVUwMXhZMVpPZEc5dE5GRnNSVVJPU21GeGNYRjZjV1JUY3k1M2IyWm1LU0JtYjNKdFlYUW9KM2R2Wm1ZbktTd2dkWEpzS0doMGRIQnpPaTh2Wm05dWRITXVaM04wWVhScFl5NWpiMjB2Y3k5emIzVnlZMlZqYjJSbGNISnZMM1kyTDJ4bGNYWXpkaTE1VkhOS1RrTTNia1o2YmxOTmNXWlROREozUzNweVpUQmplRzFQTlcwMVIzbFVjMWt1ZEhSbUtTQm1iM0p0WVhRb0ozUnlkV1YwZVhCbEp5azdYRzU5WEc1QVptOXVkQzFtWVdObElIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklDZFRiM1Z5WTJVZ1EyOWtaU0JRY204bk8xeHVJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEwTURBN1hHNGdJSE55WXpvZ2JHOWpZV3dvSjFOdmRYSmpaU0JEYjJSbElGQnlieWNwTENCc2IyTmhiQ2duVTI5MWNtTmxRMjlrWlZCeWJ5MVNaV2QxYkdGeUp5a3NJSFZ5YkNob2RIUndjem92TDJadmJuUnpMbWR6ZEdGMGFXTXVZMjl0TDNNdmMyOTFjbU5sWTI5a1pYQnlieTkyTmk5dGNtdzRhbXROTVRoUGJFOVJUamhLVEdkaGMwUTVTSEV0UmtabmIwUk9Wak5IVkV0d1NIZDFkblJKTG5kdlptWXBJR1p2Y20xaGRDZ25kMjltWmljcExDQjFjbXdvYUhSMGNITTZMeTltYjI1MGN5NW5jM1JoZEdsakxtTnZiUzl6TDNOdmRYSmpaV052WkdWd2NtOHZkall2YlhKc09HcHJUVEU0VDJ4UFVVNDRTa3huWVhORU1GazJSblV6T1ZSME9WaHJiWFJUYjNOaFRXOUZRUzUwZEdZcElHWnZjbTFoZENnbmRISjFaWFI1Y0dVbktUdGNibjFjYmtCbWIyNTBMV1poWTJVZ2UxeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ0oxTnZkWEpqWlNCRGIyUmxJRkJ5YnljN1hHNGdJR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRGN3TUR0Y2JpQWdjM0pqT2lCc2IyTmhiQ2duVTI5MWNtTmxJRU52WkdVZ1VISnZJRUp2YkdRbktTd2diRzlqWVd3b0oxTnZkWEpqWlVOdlpHVlFjbTh0UW05c1pDY3BMQ0IxY213b2FIUjBjSE02THk5bWIyNTBjeTVuYzNSaGRHbGpMbU52YlM5ekwzTnZkWEpqWldOdlpHVndjbTh2ZGpZdmJHVnhkak4yTFhsVWMwcE9RemR1Um5wdVUwMXhXWEZxUjFsS1ZYbFBXR05DZDFWUllsSmhUa2cyWXk1M2IyWm1LU0JtYjNKdFlYUW9KM2R2Wm1ZbktTd2dkWEpzS0doMGRIQnpPaTh2Wm05dWRITXVaM04wWVhScFl5NWpiMjB2Y3k5emIzVnlZMlZqYjJSbGNISnZMM1kyTDJ4bGNYWXpkaTE1VkhOS1RrTTNia1o2YmxOTmNXSnNZMDF5VG5KemJrdzVaR2RCUkc1WVoxbEthbk11ZEhSbUtTQm1iM0p0WVhRb0ozUnlkV1YwZVhCbEp5azdYRzU5WEc1cFppQWtkMjltWmpJZ2UxeHVJQ0F2S2lCc1lYUnBiaTFsZUhRZ0tpOWNiaUFnUUdadmJuUXRabUZqWlNCN1hHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDZFRiM1Z5WTJVZ1EyOWtaU0JRY204bk8xeHVJQ0FnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ016QXdPMXh1SUNBZ0lITnlZem9nYkc5allXd29KMU52ZFhKalpTQkRiMlJsSUZCeWJ5Qk1hV2RvZENjcExDQnNiMk5oYkNnblUyOTFjbU5sUTI5a1pWQnlieTFNYVdkb2RDY3BMQ0IxY213b1hDSm9kSFJ3Y3pvdkwyWnZiblJ6TG1kemRHRjBhV011WTI5dEwzTXZjMjkxY21ObFkyOWtaWEJ5Ynk5Mk5pOXNaWEYyTTNZdGVWUnpTazVETjI1R2VtNVRUWEZVVDBadVNrNTVaMGxyY2toamFVTTRRbGQ2WWtONk0zSkhWblJ6Vkd0UWMySkVZV3AxVHpWMVpWRjNMbmR2Wm1ZeVhDSXBJR1p2Y20xaGRDZ25kMjltWmpJbktUdGNiaUFnSUNCMWJtbGpiMlJsTFhKaGJtZGxPaUJWS3pBeE1EQXRNREkwUml3Z1ZTc3hSVEF3TFRGRlJrWXNJRlVyTWpCQk1DMHlNRUZDTENCVkt6SXdRVVF0TWpCRFJpd2dWU3N5UXpZd0xUSkROMFlzSUZVclFUY3lNQzFCTjBaR08xeHVJQ0I5WEc1Y2JpQWdMeW9nYkdGMGFXNGdLaTljYmlBZ1FHWnZiblF0Wm1GalpTQjdYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJQ2RUYjNWeVkyVWdRMjlrWlNCUWNtOG5PMXh1SUNBZ0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dNekF3TzF4dUlDQWdJSE55WXpvZ2JHOWpZV3dvSjFOdmRYSmpaU0JEYjJSbElGQnlieUJNYVdkb2RDY3BMQ0JzYjJOaGJDZ25VMjkxY21ObFEyOWtaVkJ5YnkxTWFXZG9kQ2NwTENCMWNtd29YQ0pvZEhSd2N6b3ZMMlp2Ym5SekxtZHpkR0YwYVdNdVkyOXRMM012YzI5MWNtTmxZMjlrWlhCeWJ5OTJOaTlzWlhGMk0zWXRlVlJ6U2s1RE4yNUdlbTVUVFhGVFVESk1SV3MyYkUxNldYTlNjWEl6WkVoR1NXMUJMbmR2Wm1ZeVhDSXBJR1p2Y20xaGRDZ25kMjltWmpJbktUdGNiaUFnSUNCMWJtbGpiMlJsTFhKaGJtZGxPaUJWS3pBd01EQXRNREJHUml3Z1ZTc3dNVE14TENCVkt6QXhOVEl0TURFMU15d2dWU3N3TWtNMkxDQlZLekF5UkVFc0lGVXJNREpFUXl3Z1ZTc3lNREF3TFRJd05rWXNJRlVyTWpBM05Dd2dWU3N5TUVGRExDQlZLekl5TVRJc0lGVXJNakl4TlN3Z1ZTdEZNRVpHTENCVkswVkdSa1FzSUZVclJqQXdNRHRjYmlBZ2ZWeHVYRzRnSUM4cUlHeGhkR2x1TFdWNGRDQXFMMXh1SUNCQVptOXVkQzFtWVdObElIdGNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dKMU52ZFhKalpTQkRiMlJsSUZCeWJ5YzdYRzRnSUNBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTBNREE3WEc0Z0lDQWdjM0pqT2lCc2IyTmhiQ2duVTI5MWNtTmxJRU52WkdVZ1VISnZKeWtzSUd4dlkyRnNLQ2RUYjNWeVkyVkRiMlJsVUhKdkxWSmxaM1ZzWVhJbktTd2dkWEpzS0Z3aWFIUjBjSE02THk5bWIyNTBjeTVuYzNSaGRHbGpMbU52YlM5ekwzTnZkWEpqWldOdlpHVndjbTh2ZGpZdmJYSnNPR3ByVFRFNFQyeFBVVTQ0U2t4bllYTkVOR0V4V1VSMGIyRnllbmRUV0hoVVNHZG5SVmhOZHk1M2IyWm1NbHdpS1NCbWIzSnRZWFFvSjNkdlptWXlKeWs3WEc0Z0lDQWdkVzVwWTI5a1pTMXlZVzVuWlRvZ1ZTc3dNVEF3TFRBeU5FWXNJRlVyTVVVd01DMHhSVVpHTENCVkt6SXdRVEF0TWpCQlFpd2dWU3N5TUVGRUxUSXdRMFlzSUZVck1rTTJNQzB5UXpkR0xDQlZLMEUzTWpBdFFUZEdSanRjYmlBZ2ZWeHVYRzRnSUM4cUlHeGhkR2x1SUNvdlhHNGdJRUJtYjI1MExXWmhZMlVnZTF4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lBblUyOTFjbU5sSUVOdlpHVWdVSEp2Snp0Y2JpQWdJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNiaUFnSUNCemNtTTZJR3h2WTJGc0tDZFRiM1Z5WTJVZ1EyOWtaU0JRY204bktTd2diRzlqWVd3b0oxTnZkWEpqWlVOdlpHVlFjbTh0VW1WbmRXeGhjaWNwTENCMWNtd29YQ0pvZEhSd2N6b3ZMMlp2Ym5SekxtZHpkR0YwYVdNdVkyOXRMM012YzI5MWNtTmxZMjlrWlhCeWJ5OTJOaTl0Y213NGFtdE5NVGhQYkU5UlRqaEtUR2RoYzBRMVlsQkdaSFZKV1hSdlRIcDNVMVEyT0hWb2VsOVpMbmR2Wm1ZeVhDSXBJR1p2Y20xaGRDZ25kMjltWmpJbktUdGNiaUFnSUNCMWJtbGpiMlJsTFhKaGJtZGxPaUJWS3pBd01EQXRNREJHUml3Z1ZTc3dNVE14TENCVkt6QXhOVEl0TURFMU15d2dWU3N3TWtNMkxDQlZLekF5UkVFc0lGVXJNREpFUXl3Z1ZTc3lNREF3TFRJd05rWXNJRlVyTWpBM05Dd2dWU3N5TUVGRExDQlZLekl5TVRJc0lGVXJNakl4TlN3Z1ZTdEZNRVpHTENCVkswVkdSa1FzSUZVclJqQXdNRHRjYmlBZ2ZWeHVYRzRnSUM4cUlHeGhkR2x1TFdWNGRDQXFMMXh1SUNCQVptOXVkQzFtWVdObElIdGNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dKMU52ZFhKalpTQkRiMlJsSUZCeWJ5YzdYRzRnSUNBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTNNREE3WEc0Z0lDQWdjM0pqT2lCc2IyTmhiQ2duVTI5MWNtTmxJRU52WkdVZ1VISnZJRUp2YkdRbktTd2diRzlqWVd3b0oxTnZkWEpqWlVOdlpHVlFjbTh0UW05c1pDY3BMQ0IxY213b1hDSm9kSFJ3Y3pvdkwyWnZiblJ6TG1kemRHRjBhV011WTI5dEwzTXZjMjkxY21ObFkyOWtaWEJ5Ynk5Mk5pOXNaWEYyTTNZdGVWUnpTazVETjI1R2VtNVRUWEZsTkhNeFZYZzBVSFZKYlZkUWF6Vm1VM0kyU0ZCTU0zSkhWblJ6Vkd0UWMySkVZV3AxVHpWMVpWRjNMbmR2Wm1ZeVhDSXBJR1p2Y20xaGRDZ25kMjltWmpJbktUdGNiaUFnSUNCMWJtbGpiMlJsTFhKaGJtZGxPaUJWS3pBeE1EQXRNREkwUml3Z1ZTc3hSVEF3TFRGRlJrWXNJRlVyTWpCQk1DMHlNRUZDTENCVkt6SXdRVVF0TWpCRFJpd2dWU3N5UXpZd0xUSkROMFlzSUZVclFUY3lNQzFCTjBaR08xeHVJQ0I5WEc1Y2JpQWdMeW9nYkdGMGFXNGdLaTljYmlBZ1FHWnZiblF0Wm1GalpTQjdYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJQ2RUYjNWeVkyVWdRMjlrWlNCUWNtOG5PMXh1SUNBZ0lHWnZiblF0YzNSNWJHVTZJRzV2Y20xaGJEdGNiaUFnSUNCbWIyNTBMWGRsYVdkb2REb2dOekF3TzF4dUlDQWdJSE55WXpvZ2JHOWpZV3dvSjFOdmRYSmpaU0JEYjJSbElGQnlieUJDYjJ4a0p5a3NJR3h2WTJGc0tDZFRiM1Z5WTJWRGIyUmxVSEp2TFVKdmJHUW5LU3dnZFhKc0tGd2lhSFIwY0hNNkx5OW1iMjUwY3k1bmMzUmhkR2xqTG1OdmJTOXpMM052ZFhKalpXTnZaR1Z3Y204dmRqWXZiR1Z4ZGpOMkxYbFVjMHBPUXpkdVJucHVVMDF4V210R09FZzRlV1UwTjNkelpuQlhlWGRrWVRodlp5NTNiMlptTWx3aUtTQm1iM0p0WVhRb0ozZHZabVl5SnlrN1hHNGdJQ0FnZFc1cFkyOWtaUzF5WVc1blpUb2dWU3N3TURBd0xUQXdSa1lzSUZVck1ERXpNU3dnVlNzd01UVXlMVEF4TlRNc0lGVXJNREpETml3Z1ZTc3dNa1JCTENCVkt6QXlSRU1zSUZVck1qQXdNQzB5TURaR0xDQlZLekl3TnpRc0lGVXJNakJCUXl3Z1ZTc3lNakV5TENCVkt6SXlNVFVzSUZVclJUQkdSaXdnVlN0RlJrWkVMQ0JWSzBZd01EQTdYRzRnSUgxY2JuMWNibjBpTENKY2JtTnlaV0YwWlMxallYSmtjeWdrWTJ4aGMzTk9ZVzFsTENBa1ozSnZkM01nUFNCMGNuVmxLU0I3WEc1Y2RHUnBkaTU3SkdOc1lYTnpUbUZ0WlgwZ2UxeHVYSFJjZEdScGMzQnNZWGs2SUdac1pYZzdYRzVjZEZ4MFpteGxlQzEzY21Gd09pQjNjbUZ3TzF4dVhIUmNkR1pzWlhndFpHbHlaV04wYVc5dU9pQnliM2M3WEc1Y2RIMWNibHgwWEc1Y2RHUnBkaTU3SkdOc1lYTnpUbUZ0WlgwZ1BtUnBkaUI3WEc1Y2RGeDBhV1lnSkdkeWIzZHpJSHRjYmx4MFhIUmNkR1pzWlhndFozSnZkem9nTVR0Y2JseDBYSFI5SUdWc2MyVWdlMXh1WEhSY2RGeDBabXhsZUMxbmNtOTNPaUF3TzF4dVhIUmNkSDFjYmx4MFhIUm1iR1Y0TFhOb2NtbHVhem9nTUR0Y2JseDBYSFJtYkdWNExXSmhjMmx6T2lCaGRYUnZPMXh1WEhSOVhHNTlYRzRpTENKQWFXMXdiM0owSUNjdUxpOXNhV0l2ZEhsd1pTNXBiWEJ2Y25RblhHNWNibk5sZEhWd0xYUjVjR1Z6S0NSamRYTjBiMjFHYjI1MGN5QTlJSHQ5TENBa1kzVnpkRzl0VTJWMGRHbHVaM01nUFNCN2ZTa2dlMXh1WEc0Z0lDOHFYRzRnSUNBcUlFUmxabUYxYkhRZ2MyVjBkR2x1WjNNNlhHNGdJQ0FxTDF4dUlDQWtabTl1ZEU1dmNtMWhiQ0E5SUNkU1lXeGxkMkY1Snl3Z2MyRnVjeTF6WlhKcFpseHVJQ0FrWm05dWRFaGxZV1JwYm1keklEMGdKMFZzWldOMGNtOXNhWHBsSnl3Z2MyRnVjeTF6WlhKcFpseHVJQ0FrWm05dWRFTnZaR1VnUFNBblUyOTFjbU5sSUVOdlpHVWdVSEp2Snl3Z2JXOXViM053WVdObFhHNWNiaUFnTHlvZ1RrOVVSVG9nU1hRbmN5QnVaV05sYzNOaGNua2dkRzhnZFhObElHVXVaeTRnZEdobElDUm1iMjUwVG05eWJXRnNJSFpoY21saFlteGxJR2hsY21VdUlFUmxabWx1YVc1blhHNGdJQ0FxSUcxMWJIUnBjR3hsSUdadmJuUnpJR1JwY21WamRHeDVJR2x1SUdobGNtVWdlV2xsYkdSeklHRWdjM1I1YkhWeklHTnZiWEJwYkdWeUlHVnljbTl5TGx4dUlDQWdLaTljYmlBZ0pHUmxabUYxYkhSR2IyNTBjeUE5SUh0Y2JpQWdJQ0J1YjNKdFlXdzZJQ1JtYjI1MFRtOXliV0ZzTEZ4dUlDQWdJR2hsWVdScGJtZHpPaUFrWm05dWRFaGxZV1JwYm1kekxGeHVJQ0FnSUdOdlpHVTZJQ1JtYjI1MFEyOWtaVnh1SUNCOU8xeHVYRzRnSUNSa1pXWmhkV3gwUm05dWRGTnBlbVVnUFNBeFpXMDdYRzVjYmlBZ0pHUmxabUYxYkhSVFpYUjBhVzVuY3lBOUlIdGNiaUFnWEhSdGIySnBiR1ZRYjNKMGNtRnBkRG9nZTF4dUlDQmNkQ0FnYURFNklIc2dabTl1ZEMxbVlXMXBiSGs2SUNSa1pXWmhkV3gwUm05dWRITXVhR1ZoWkdsdVozTXNJR1p2Ym5RdGMybDZaVG9nSUNBeWNtVnRMQ0JzYVc1bExXaGxhV2RvZERvZ01TNHlMQ0J0WVhKbmFXNHRkRzl3T2lBZ0lEQXVNV1Z0TENCdFlYSm5hVzR0WW05MGRHOXRPaUFnSUNBd0xqRmxiU3dnWm05dWRDMTNaV2xuYUhRNklESXdNQ3dnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaU0I5TEZ4dUlDQmNkQ0FnYURJNklIc2dabTl1ZEMxbVlXMXBiSGs2SUNSa1pXWmhkV3gwUm05dWRITXVhR1ZoWkdsdVozTXNJR1p2Ym5RdGMybDZaVG9nTVM0MGNtVnRMQ0JzYVc1bExXaGxhV2RvZERvZ01TNDFMQ0J0WVhKbmFXNHRkRzl3T2lBeExqSTFjbVZ0TENCdFlYSm5hVzR0WW05MGRHOXRPaUF3TGpZeU5YSmxiU3dnWm05dWRDMTNaV2xuYUhRNklESXdNQ3dnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaU0I5TEZ4dUlDQmNkQ0FnYURNNklIc2dabTl1ZEMxbVlXMXBiSGs2SUNSa1pXWmhkV3gwUm05dWRITXVhR1ZoWkdsdVozTXNJR1p2Ym5RdGMybDZaVG9nTVM0MGNtVnRMQ0JzYVc1bExXaGxhV2RvZERvZ01TNDFMQ0J0WVhKbmFXNHRkRzl3T2lBZ0lDQWdJQ0F3TENCdFlYSm5hVzR0WW05MGRHOXRPaUF3TGpZeU5YSmxiU3dnWm05dWRDMTNaV2xuYUhRNklESXdNQ3dnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaU0I5TEZ4dUlDQmNkQ0FnYURRNklIc2dabTl1ZEMxbVlXMXBiSGs2SUNSa1pXWmhkV3gwUm05dWRITXVhR1ZoWkdsdVozTXNJR1p2Ym5RdGMybDZaVG9nSUNBeGNtVnRMQ0JzYVc1bExXaGxhV2RvZERvZ01TNDFMQ0J0WVhKbmFXNHRkRzl3T2lBZ0lEQXVOMlZ0TENCdFlYSm5hVzR0WW05MGRHOXRPaUFnSUNBd0xqZGxiU3dnWm05dWRDMTNaV2xuYUhRNklESXdNQ3dnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaU3dnWW05eVpHVnlMV0p2ZEhSdmJUb2dNWEI0SUhOdmJHbGtJQ00wTWpReU5ESXNJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjaUI5TEZ4dUlDQmNkQ0FnY0RvZ0lIc2dabTl1ZEMxbVlXMXBiSGs2SUNSa1pXWmhkV3gwUm05dWRITXVibTl5YldGc0xDQWdJR1p2Ym5RdGMybDZaVG9nSkdSbFptRjFiSFJHYjI1MFUybDZaU3dnYkdsdVpTMW9aV2xuYUhRNklERXVPRGMxY21WdExDQm1iMjUwTFhkbGFXZG9kRG9nTWpBd0lIMWNiaUFnWEhRZ0lHRTZJQ0I3SUdadmJuUXRabUZ0YVd4NU9pQWtaR1ZtWVhWc2RFWnZiblJ6TG01dmNtMWhiQ3dnSUNCbWIyNTBMWE5wZW1VNklDUmtaV1poZFd4MFJtOXVkRk5wZW1Vc0lHeHBibVV0YUdWcFoyaDBPaUF4TGpnM05YSmxiU3dnWm05dWRDMTNaV2xuYUhRNklESXdNQ0I5WEc0Z0lGeDBmU3hjYmlBZ1hIUjBZV0pzWlhRNklIdGNiaUFnWEhRZ0lHZ3hPaUI3SUdadmJuUXRabUZ0YVd4NU9pQWtaR1ZtWVhWc2RFWnZiblJ6TG1obFlXUnBibWR6TENCbWIyNTBMWE5wZW1VNklDQWdNeTQ0Y21WdExDQnNhVzVsTFdobGFXZG9kRG9nTVM0eUxDQnRZWEpuYVc0dGRHOXdPaUFnSURBdU1XVnRMQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQWdJQ0F3TGpGbGJTd2dabTl1ZEMxM1pXbG5hSFE2SURJd01Dd2dkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpTQjlMRnh1SUNCY2RDQWdhREk2SUhzZ1ptOXVkQzFtWVcxcGJIazZJQ1JrWldaaGRXeDBSbTl1ZEhNdWFHVmhaR2x1WjNNc0lHWnZiblF0YzJsNlpUb2dNaTR6TnpWeVpXMHNJR3hwYm1VdGFHVnBaMmgwT2lBeExqVXNJRzFoY21kcGJpMTBiM0E2SURFdU1qVnlaVzBzSUcxaGNtZHBiaTFpYjNSMGIyMDZJREF1TmpJMWNtVnRMQ0JtYjI1MExYZGxhV2RvZERvZ01qQXdMQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dkWEJ3WlhKallYTmxJSDBzWEc0Z0lGeDBJQ0JvTXpvZ2V5Qm1iMjUwTFdaaGJXbHNlVG9nSkdSbFptRjFiSFJHYjI1MGN5NW9aV0ZrYVc1bmN5d2dabTl1ZEMxemFYcGxPaUF4TGpnM05YSmxiU3dnYkdsdVpTMW9aV2xuYUhRNklESXVOelZ5Wlcwc0lHMWhjbWRwYmkxMGIzQTZJQ0F3TENCdFlYSm5hVzR0WW05MGRHOXRPaUFnTUM0Mk1qVnlaVzBzSUdadmJuUXRkMlZwWjJoME9pQXlNREFzSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlVnZlN4Y2JpQWdYSFFnSUdnME9pQjdJR1p2Ym5RdFptRnRhV3g1T2lBa1pHVm1ZWFZzZEVadmJuUnpMbWhsWVdScGJtZHpMQ0JtYjI1MExYTnBlbVU2SUNBZ0lDQXhjbVZ0TENCc2FXNWxMV2hsYVdkb2REb2dNUzQxTENCdFlYSm5hVzR0ZEc5d09pQWdJREF1TjJWdExDQnRZWEpuYVc0dFltOTBkRzl0T2lBZ0lDQXdMamRsYlN3Z1ptOXVkQzEzWldsbmFIUTZJREl3TUN3Z2RHVjRkQzEwY21GdWMyWnZjbTA2SUhWd2NHVnlZMkZ6WlN3Z1ltOXlaR1Z5TFdKdmRIUnZiVG9nTVhCNElITnZiR2xrSUNNME1qUXlORElnZlZ4dUlDQmNkQ0FnYURVNklIc2dabTl1ZEMxbVlXMXBiSGs2SUNSa1pXWmhkV3gwUm05dWRITXVhR1ZoWkdsdVozTXNJR1p2Ym5RdGMybDZaVG9nSUNBd0xqbHlaVzBzSUd4cGJtVXRhR1ZwWjJoME9pQWdJREVzSUcxaGNtZHBiaTEwYjNBNklDQXdMamMxWlcwc0lHMWhjbWRwYmkxaWIzUjBiMjA2SUNBZ01DNDNOV1Z0TENCbWIyNTBMWGRsYVdkb2REb2dNakF3TENCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sSUgwc1hHNGdJRngwSUNCd09pQWdleUJtYjI1MExXWmhiV2xzZVRvZ0pHUmxabUYxYkhSR2IyNTBjeTV1YjNKdFlXd3NJQ0FnWm05dWRDMXphWHBsT2lBZ0lDUmtaV1poZFd4MFJtOXVkRk5wZW1Vc0lHeHBibVV0YUdWcFoyaDBPaUF4TGpnM05YSmxiU3dnWm05dWRDMTNaV2xuYUhRNklESXdNQ0I5WEc0Z0lGeDBJQ0JoT2lBZ2V5Qm1iMjUwTFdaaGJXbHNlVG9nSkdSbFptRjFiSFJHYjI1MGN5NXViM0p0WVd3c0lDQWdabTl1ZEMxemFYcGxPaUFnSUNSa1pXWmhkV3gwUm05dWRGTnBlbVVzSUd4cGJtVXRhR1ZwWjJoME9pQXhMamczTlhKbGJTd2dabTl1ZEMxM1pXbG5hSFE2SURJd01DQjlYRzRnSUZ4MGZTeGNiaUFnSUNCbWIyNTBRMjlrWlRvZ2UxeHVJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01DNHlaVzBzWEc0Z0lDQWdJQ0J5WVdScGRYTTZJRE53ZUZ4dUlDQWdJSDFjYmlBZ0lDQmtaV1poZFd4MFJtOXVkRk5wZW1VNklDUmtaV1poZFd4MFJtOXVkRk5wZW1WY2JpQWdmVHRjYmx4dUlDQWtabTl1ZEhNZ1BTQnRaWEpuWlNna1pHVm1ZWFZzZEVadmJuUnpMQ0FrWTNWemRHOXRSbTl1ZEhNcE8xeHVJQ0FrYzJWMGRHbHVaM01nUFNCdFpYSm5aU2drWkdWbVlYVnNkRk5sZEhScGJtZHpMQ0FrWTNWemRHOXRVMlYwZEdsdVozTXBPMXh1WEc0Z0lDOHFYRzRnSUNBcUlFSnlaV0ZyY0c5cGJuUWdjMlYwZFhBNlhHNGdJQ0FxTDF4dUlDQmliMlI1SUh0Y2JpQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ0pHWnZiblJ6TG01dmNtMWhiRHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJQ1J6WlhSMGFXNW5jeTVrWldaaGRXeDBSbTl1ZEZOcGVtVTdYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRE13TUR0Y2JpQWdmVnh1WEc0Z0lHSjFkSFJ2YmlCN1hHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDUm1iMjUwY3k1b1pXRmthVzVuY3p0Y2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdPMXh1SUNCOVhHNWNiaUFnTG05MlpYSnNZWGxsWkNCN1hHNGdJRngwWm05dWRDMTNaV2xuYUhRNklEUXdNRHRjYmlBZ2ZWeHVYRzRnSUdOeVpXRjBaUzEwZVhCbExXTnZaR1VvSkdadmJuUnpMbU52WkdVc0lDUnpaWFIwYVc1bmN5NW1iMjUwUTI5a1pTazdYRzVjYmlBZ1kzSmxZWFJsTFhSNWNHVnpLQ1J6WlhSMGFXNW5jeTV0YjJKcGJHVlFiM0owY21GcGRDazdYRzVjYmlBZ0x5OGdLMkZpYjNabEtDZHRiMkpwYkdVdGJHRnVaSE5qWVhCbEp5a2dlMXh1SUNBdkx5QWdZM0psWVhSbExYUjVjR1Z6S0NSelpYUjBhVzVuY3k1dGIySnBiR1ZNWVc1a2MyTmhjR1VwTzF4dUlDQXZMeUI5WEc1Y2JpQWdLMkZpYjNabEtDZDBZV0pzWlhRbktTQjdYRzRnSUNCamNtVmhkR1V0ZEhsd1pYTW9KSE5sZEhScGJtZHpMblJoWW14bGRDazdYRzRnSUgxY2JuMWNiaUlzSWk4cVhHNGdLaUJ0YVhocGJuTWdabTl5SUhObGRIUnBibWNnZFhBZ2RIbHdaWE5jYmlBcUwxeHVYRzVrWldacGJtVXRkSGx3WlNodVlXMWxMQ0J6WlhSMGFXNW5jeWxjYmx4MGUyNWhiV1Y5WEc1Y2RGeDBlMkpzYjJOcmZWeHVYRzVxYzI5dVZHOURjM01vYW5OdmJpbGNibHgwWm05eUlHdGxlU3dnZG1Gc2RXVWdhVzRnYW5OdmJseHVYSFJjZEh0clpYbDlPaUIyWVd4MVpWeHVYRzVqY21WaGRHVXRkSGx3WlhNb2RIbHdaWE1wWEc1Y2RHWnZjaUIwZVhCbExDQnpaWFIwYVc1bmN5QnBiaUIwZVhCbGMxeHVYSFJjZEN0a1pXWnBibVV0ZEhsd1pTaDBlWEJsTENCelpYUjBhVzVuY3lrZ2UxeHVYSFJjZEZ4MGFuTnZibFJ2UTNOektITmxkSFJwYm1kektWeHVYSFJjZEgxY2JseHVMeXBjYmlBcUlHTnlaV0YwWlMxMGVYQmxMV052WkdVb0tWeHVJQ3BjYmlBcUlGQnlaWEJoY21WeklDZGpiMlJsSnl3Z0ozQnlaU2NnWVc1a0lDZHdKeUJtYjNJZ1kyOWtaU0JrYVhOd2JHRjVMbHh1SUNvdlhHNGdZM0psWVhSbExYUjVjR1V0WTI5a1pTZ2tabTl1ZEN3Z0pITmxkSFJwYm1kektTQjdYRzVjZENCamIyUmxJSHRjYmx4MElDQWdabTl1ZEMxbVlXMXBiSGs2SUNSbWIyNTBPMXh1WEhRZ0lDQjNhR2wwWlMxemNHRmpaVG9nYm05M2NtRndPMXh1WEhRZ2ZWeHVYRzVjZENCd2NtVWdZMjlrWlNCN1hHNWNkQ0FnSUhkb2FYUmxMWE53WVdObE9pQndjbVV0ZDNKaGNEdGNibHgwSUgxY2JseHVYSFFnY0NCamIyUmxJSHRjYmx4MElDQWdjR0ZrWkdsdVp6b2dNRHRjYmx4MElDQWdjR0ZrWkdsdVp5MTBiM0E2SUNSelpYUjBhVzVuY3k1d1lXUmthVzVuTzF4dVhIUWdJQ0J3WVdSa2FXNW5MV0p2ZEhSdmJUb2dKSE5sZEhScGJtZHpMbkJoWkdScGJtYzdYRzVjZENBZ0lHSnZjbVJsY2kxeVlXUnBkWE02SUNSelpYUjBhVzVuY3k1eVlXUnBkWE03WEc1Y2RDQjlYRzVjYmx4MElIQWdZMjlrWlRvNlltVm1iM0psTEZ4dVhIUWdjQ0JqYjJSbE9qcGhablJsY2lCN1hHNWNkQ0FnSUd4bGRIUmxjaTF6Y0dGamFXNW5PaUF0S0NSelpYUjBhVzVuY3k1d1lXUmthVzVuS1R0Y2JseDBJQ0FnWTI5dWRHVnVkRG9nWENKY1hEQXdZVEJjSWp0Y2JseDBJSDFjYmx4dVhIUWdjSEpsSUh0Y2JseDBJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dKSE5sZEhScGJtZHpMbkpoWkdsMWN6dGNibHgwSUNBZ2NHRmtaR2x1WnpvZ01XVnRPMXh1WEhRZ2ZWeHVJSDFjYmlJc0lpOHFJSFpsY25OcGIyNDZJREF1Tmk0eElDb3ZYRzVjYm1KaGMyVXRabTl1ZEMxemFYcGxJRDg5SURFMmNIaGNibkpoYzNSbGNtbHpaUzF0WldScFlTMXhkV1Z5YVdWeklEODlJR1poYkhObFhHNWNibkoxY0hSMWNtVWdQU0I3WEc0Z0lISmhjM1JsY21selpTMXRaV1JwWVMxeGRXVnlhV1Z6T2lCeVlYTjBaWEpwYzJVdGJXVmthV0V0Y1hWbGNtbGxjMXh1SUNCdGIySnBiR1V0WTNWMGIyWm1PaUEwTURCd2VGeHVJQ0JrWlhOcmRHOXdMV04xZEc5bVpqb2dNVEExTUhCNFhHNGdJR2hrTFdOMWRHOW1aam9nTVRnd01IQjRYRzRnSUdWdVlXSnNaUzFsYlMxaWNtVmhhM0J2YVc1MGN6b2dabUZzYzJWY2JpQWdZbUZ6WlMxbWIyNTBMWE5wZW1VNklHSmhjMlV0Wm05dWRDMXphWHBsWEc0Z0lHRnVkR2t0YjNabGNteGhjRG9nWm1Gc2MyVmNiaUFnWkdWdWMybDBlUzF4ZFdWeWFXVnpPaUFuWkhCd2VDY2dKM2RsWW10cGRDY2dKMjF2ZWljZ0oyUndhU2RjYmlBZ2NtVjBhVzVoTFdSbGJuTnBkSGs2SURFdU5WeHVJQ0IxYzJVdFpHVjJhV05sTFhkcFpIUm9PaUJtWVd4elpWeHVmVnh1Y25Wd2RIVnlaUzV6WTJGc1pTQTlJREFnS0hKMWNIUjFjbVV1Ylc5aWFXeGxMV04xZEc5bVppa2dOakF3Y0hnZ09EQXdjSGdnS0hKMWNIUjFjbVV1WkdWemEzUnZjQzFqZFhSdlptWXBJQ2h5ZFhCMGRYSmxMbWhrTFdOMWRHOW1aaWxjYm5KMWNIUjFjbVV1YzJOaGJHVXRibUZ0WlhNZ1BTQW5lSE1uSUNkekp5QW5iU2NnSjJ3bklDZDRiQ2NnSjJoa0oxeHVYRzR0YVhNdGMzUnlhVzVuS0haaGJDbGNiaUFnYVdZZ2RIbHdaVzltS0haaGJDa2dhWE1nYm05MElDZDFibWwwSjF4dUlDQWdJR2xtSUhaaGJDQnBjeUJoSUNkemRISnBibWNuSUc5eUlIWmhiQ0JwY3lCaElDZHBaR1Z1ZENkY2JpQWdJQ0FnSUhSeWRXVmNiaUFnSUNCbGJITmxYRzRnSUNBZ0lDQm1ZV3h6WlZ4dUlDQmxiSE5sWEc0Z0lDQWdabUZzYzJWY2JseHVMV2RsZEMxelkyRnNaUzF1ZFcxaVpYSW9jMk5oYkdVdGJtRnRaU2xjYmlBZ1ptOXlJR3hwYzNRdGFYUmxiU3dnYVNCcGJpQnlkWEIwZFhKbExuTmpZV3hsTFc1aGJXVnpYRzRnSUNBZ2FXWWdiR2x6ZEMxcGRHVnRJR2x6SUhOallXeGxMVzVoYldWY2JpQWdJQ0FnSUhKbGRIVnliaUJwSUNzZ01WeHVJQ0J5WlhSMWNtNGdabUZzYzJWY2JseHVMV052Ym5abGNuUXRkRzhvZEc4dGRXNXBkQ3dnZG1Gc2RXVXNJR052Ym5SbGVIUWdQU0J5ZFhCMGRYSmxMbUpoYzJVdFptOXVkQzF6YVhwbEtWeHVJQ0JtY205dExYVnVhWFFnUFNCMWJtbDBLSFpoYkhWbEtWeHVJQ0J5WlhSMWNtNGdkbUZzZFdVZ2FXWWdkRzh0ZFc1cGRDQnBjeUJtY205dExYVnVhWFJjYmlBZ2FXWWdkRzh0ZFc1cGRDQnBiaUFvSjJWdEp5QW5jbVZ0SnlsY2JpQWdJQ0J5WlhSMWNtNGdkbUZzZFdVZ2FXWWdabkp2YlMxMWJtbDBJR2x1SUNnblpXMG5JQ2R5WlcwbktWeHVJQ0FnSUhKbGRIVnliaUIxYm1sMEtDaDJZV3gxWlNBdklHTnZiblJsZUhRcExDQjBieTExYm1sMEtWeHVJQ0JwWmlCMGJ5MTFibWwwSUdseklDZHdlQ2RjYmlBZ0lDQnlaWFIxY200Z2RXNXBkQ2dvZG1Gc2RXVWdLaUJqYjI1MFpYaDBLU3dnSjNCNEp5bGNibHh1TFc5dUxYTmpZV3hsS0c0cFhHNGdJSEpsZEhWeWJpQjFibWwwS0c0cElHbHpJQ2NuWEc1Y2JpMXNZWEpuWlhJdGRHaGhiaTF6WTJGc1pTaHVLVnh1SUNCeVpYUjFjbTRnS0c0Z1BpQW9iR1Z1WjNSb0tISjFjSFIxY21VdWMyTmhiR1VwSUMwZ01Ta3BJR0Z1WkNBdGIyNHRjMk5oYkdVb2JpbGNibHh1TFdsekxYcGxjbThvYmlsY2JpQWdjbVYwZFhKdUlHNGdhWE1nTUZ4dVhHNHRiM1psY214aGNDMXphR2xtZENoaGJuUnBMVzkyWlhKc1lYQXNJRzRwWEc0Z0lITm9hV1owTFhWdWFYUWdQU0IxYm1sMEtHNHBYRzRnSUdGdWRHa3RiM1psY214aGNDQTlJREJ3ZUNCMWJteGxjM01nWVc1MGFTMXZkbVZ5YkdGd1hHNGdJR0Z1ZEdrdGIzWmxjbXhoY0NBOUlERndlQ0JwWmlCaGJuUnBMVzkyWlhKc1lYQWdhWE1nZEhKMVpWeHVJQ0JwWmlCc1pXNW5kR2dvWVc1MGFTMXZkbVZ5YkdGd0tTQnBjeUF4WEc0Z0lDQWdjbVYwZFhKdUlDMWpiMjUyWlhKMExYUnZLSE5vYVdaMExYVnVhWFFzSUdGdWRHa3RiM1psY214aGNDbGNiaUFnWm05eUlIWmhiQ0JwYmlCaGJuUnBMVzkyWlhKc1lYQmNiaUFnSUNCeVpYUjFjbTRnZG1Gc0lHbG1JSFZ1YVhRb2RtRnNLU0JwY3lCemFHbG1kQzExYm1sMFhHNWNiaTFoWkdwMWMzUXRiM1psY214aGNDaGhiblJwTFc5MlpYSnNZWEFzSUc0c0lITnBaR1VnUFNBbmJXbHVKeWxjYmlBZ0xYTm9hV1owSUQwZ0xXOTJaWEpzWVhBdGMyaHBablFvWVc1MGFTMXZkbVZ5YkdGd0xDQnVLVnh1SUNCcFppQW9jMmxrWlNCcGN5QW5iV2x1SnlCaGJtUWdMWE5vYVdaMElENGdNQ2tnYjNJZ0tITnBaR1VnYVhNZ0oyMWhlQ2NnWVc1a0lDMXphR2xtZENBOElEQXBYRzRnSUNBZ2JpQTlJRzRnS3lBdGMyaHBablJjYmlBZ2NtVjBkWEp1SUc1Y2JseHVMV2x6TFhCdmMybDBhWFpsS0c0cFhHNGdJSEpsZEhWeWJpQnVJRDQ5SURCY2JseHVMV1JsYm5OcGRIa3RjWFZsY21sbGN5aGtaVzV6YVhSNUtWeHVJQ0JwWmlCMGVYQmxiMllvWkdWdWMybDBlU2tnYVhNZ2JtOTBJQ2QxYm1sMEoxeHVJQ0FnSUdsbUlHNXZkQ0F0YVhNdGMzUnlhVzVuS0dSbGJuTnBkSGtwWEc0Z0lDQWdJQ0JrWlc1emFYUjVJRDBnSnlWekp5QWxJR1JsYm5OcGRIbGNiaUFnWkdWdWMybDBlU0E5SUhKMWNIUjFjbVV1Y21WMGFXNWhMV1JsYm5OcGRIa2dhV1lnWkdWdWMybDBlU0JwY3lBbmNtVjBhVzVoSjF4dUlDQnhkV1Z5YVdWeklEMGdLQ2xjYmlBZ1ptOXlJSEYxWlhKNUlHbHVJSEoxY0hSMWNtVXVaR1Z1YzJsMGVTMXhkV1Z5YVdWelhHNGdJQ0FnYVdZZ2NYVmxjbmtnYVhNZ0ozZGxZbXRwZENkY2JpQWdJQ0FnSUhCMWMyZ29jWFZsY21sbGN5d2dKeWd0ZDJWaWEybDBMVzFwYmkxa1pYWnBZMlV0Y0dsNFpXd3RjbUYwYVc4NklDVnpLU2NnSlNBb1pHVnVjMmwwZVNrcFhHNGdJQ0FnWld4elpTQnBaaUJ4ZFdWeWVTQnBjeUFuYlc5NkoxeHVJQ0FnSUNBZ2NIVnphQ2h4ZFdWeWFXVnpMQ0FuS0cxcGJpMHRiVzk2TFdSbGRtbGpaUzF3YVhobGJDMXlZWFJwYnpvZ0pYTXBKeUFsSUNoa1pXNXphWFI1S1NsY2JpQWdJQ0JsYkhObElHbG1JSEYxWlhKNUlHbHpJQ2R2SjF4dUlDQWdJQ0FnY0hWemFDaHhkV1Z5YVdWekxDQW5LQzF2TFcxcGJpMWtaWFpwWTJVdGNHbDRaV3d0Y21GMGFXODZJQ1Z6THpFcEp5QWxJQ2hrWlc1emFYUjVLU2xjYmlBZ0lDQmxiSE5sSUdsbUlIRjFaWEo1SUdseklDZHlZWFJwYnlkY2JpQWdJQ0FnSUhCMWMyZ29jWFZsY21sbGN5d2dKeWh0YVc0dFpHVjJhV05sTFhCcGVHVnNMWEpoZEdsdk9pQWxjeWtuSUNVZ0tHUmxibk5wZEhrcEtWeHVJQ0FnSUdWc2MyVWdhV1lnY1hWbGNua2dhWE1nSjJSd2FTZGNiaUFnSUNBZ0lHbG1JQzFwY3kxemRISnBibWNvWkdWdWMybDBlU2xjYmlBZ0lDQWdJQ0FnWkdWdWMybDBlVDFqYjI1MlpYSjBLR1JsYm5OcGRIa3BYRzRnSUNBZ0lDQndkWE5vS0hGMVpYSnBaWE1zSUNjb2JXbHVMWEpsYzI5c2RYUnBiMjQ2SUNWelpIQnBLU2NnSlNBb2NtOTFibVFvWkdWdWMybDBlU0FxSURrMkxDQXhLU2twWEc0Z0lDQWdaV3h6WlNCcFppQnhkV1Z5ZVNCcGN5QW5aSEJ3ZUNkY2JpQWdJQ0FnSUhCMWMyZ29jWFZsY21sbGN5d2dKeWh0YVc0dGNtVnpiMngxZEdsdmJqb2dKWE5rY0hCNEtTY2dKU0FvWkdWdWMybDBlU2twWEc0Z0lISmxkSFZ5YmlCeGRXVnlhV1Z6WEc1Y2JtTnlaV0YwWlMxbVlXeHNZbUZqYXkxamJHRnpjeWh6Wld4bFkzUmxaQ3dnWTJ4aGMzTXBYRzRnSUM5N0p5Y2dLeUJqYkdGemN5QXJJQ2NnSnlBcklITmxiR1ZqZEdWa2ZWeHVJQ0FnSUh0aWJHOWphMzFjYmx4dUx5OGdLMkpsZEhkbFpXNG9iV2x1TENCdFlYZ3BYRzR2THlCMWMyRm5aU0FvYzJOaGJHVWdZMkZ1SUdKbElHMXBlR1ZrSUhkcGRHZ2dZM1Z6ZEc5dElIWmhiSFZsY3lrNlhHNHZMeUFnSUMwZ0sySmxkSGRsWlc0b01Td2dNeWtnYzJOaGJHVTZjMk5oYkdWY2JpOHZJQ0FnTFNBclltVjBkMlZsYmlnd0xDQXpLU0F3SUhkcFpIUm9Pbk5qWVd4bFhHNHZMeUFnSUMwZ0sySmxkSGRsWlc0b01qQXdjSGdzSURVd01IQjRLU0JqZFhOMGIyMDZZM1Z6ZEc5dFhHNHZMeUFnSUMwZ0sySmxkSGRsWlc0b01Dd2dNekF3Y0hncElEQWdkMmxrZEdnNlkzVnpkRzl0WEc0dkx5QWdJQzBnSzJKbGRIZGxaVzRvTVN3Z016QXdjSGdwSUhOallXeGxPbU4xYzNSdmJWeHVMeThnSUNBdElDdGlaWFIzWldWdUtESXdNSEI0TENBMEtTQmpkWE4wYjIwNmMyTmhiR1ZjYmx4dVltVjBkMlZsYmlodGFXNHNJRzFoZUN3Z1lXNTBhUzF2ZG1WeWJHRndJRDBnY25Wd2RIVnlaUzVoYm5ScExXOTJaWEpzWVhBc0lHUmxibk5wZEhrZ1BTQnVkV3hzTENCdmNtbGxiblJoZEdsdmJpQTlJRzUxYkd3c0lIVnpaUzFrWlhacFkyVXRkMmxrZEdnZ1BTQnlkWEIwZFhKbExuVnpaUzFrWlhacFkyVXRkMmxrZEdnc0lHWmhiR3hpWVdOckxXTnNZWE56SUQwZ2JuVnNiQ2xjYmlBZ2MyVnNaV04wWldRZ1BTQnpaV3hsWTNSdmNpZ3BYRzVjYmlBZ2FXWWdMV2x6TFhOMGNtbHVaeWh2Y21sbGJuUmhkR2x2YmlsY2JpQWdJQ0J2Y21sbGJuUmhkR2x2YmlBOUlHTnZiblpsY25Rb2IzSnBaVzUwWVhScGIyNHBYRzRnSUdsbUlDMXBjeTF6ZEhKcGJtY29aR1Z1YzJsMGVTbGNiaUFnSUNCa1pXNXphWFI1SUQwZ1kyOXVkbVZ5ZENoa1pXNXphWFI1S1Z4dUlDQnBaaUF0YVhNdGMzUnlhVzVuS0cxcGJpbGNiaUFnSUNCdGFXNGdQU0F0WjJWMExYTmpZV3hsTFc1MWJXSmxjaWh0YVc0cFhHNGdJR2xtSUMxcGN5MXpkSEpwYm1jb2JXRjRLVnh1SUNBZ0lHMWhlQ0E5SUMxblpYUXRjMk5oYkdVdGJuVnRZbVZ5S0cxaGVDbGNibHh1SUNBdGJXbHVJRDBnY25Wd2RIVnlaUzV6WTJGc1pWdHRhVzRnTFNBeFhTQjFibXhsYzNNZ0xXbHpMWHBsY204b2JXbHVLU0J2Y2lBb2JtOTBJQzF2YmkxelkyRnNaU2h0YVc0cEtWeHVJQ0F0YldGNElEMGdjblZ3ZEhWeVpTNXpZMkZzWlZ0dFlYaGRJSFZ1YkdWemN5QnViM1FnTFc5dUxYTmpZV3hsS0cxaGVDbGNiaUFnTFcxcGJpQS9QU0J0YVc1Y2JpQWdMVzFoZUNBL1BTQnRZWGhjYmx4dUlDQnBaaUFvY25Wd2RIVnlaUzV5WVhOMFpYSnBjMlV0YldWa2FXRXRjWFZsY21sbGN5bGNiaUFnSUNCcFppQnViM1FnS0dSbGJuTnBkSGtnYjNJZ0xXMWhlQ0J2Y2lCdmNtbGxiblJoZEdsdmJpbGNiaUFnSUNBZ0lIdGliRzlqYTMxY2JpQWdaV3h6WlZ4dUlDQWdJR052Ym1ScGRHbHZiaUE5SUNkdmJteDVJSE5qY21WbGJpZGNiaUFnSUNCMWMyVXRaR1YyYVdObExYZHBaSFJvSUQwZ2RYTmxMV1JsZG1salpTMTNhV1IwYUNBL0lDZGtaWFpwWTJVdEp5QTZJQ2NuWEc0Z0lDQWdkVzVzWlhOeklDMXRhVzRnYVhNZ01GeHVJQ0FnSUNBZ0xXMXBiaUE5SUMxamIyNTJaWEowTFhSdktDZGxiU2NzSUMxdGFXNHBJR2xtSUhKMWNIUjFjbVV1Wlc1aFlteGxMV1Z0TFdKeVpXRnJjRzlwYm5SelhHNGdJQ0FnSUNBdGJXbHVJRDBnTFdGa2FuVnpkQzF2ZG1WeWJHRndLR0Z1ZEdrdGIzWmxjbXhoY0N3Z0xXMXBiaXdnYzJsa1pUb2dKMjFwYmljcFhHNGdJQ0FnSUNCamIyNWthWFJwYjI0Z1BTQmpiMjVrYVhScGIyNGdLeUFuSUdGdVpDQW9iV2x1TFNjZ0t5QjFjMlV0WkdWMmFXTmxMWGRwWkhSb0lDc2dKM2RwWkhSb09pQWxjeWtuSUNVZ0tDMXRhVzRwWEc0Z0lDQWdkVzVzWlhOeklDMXNZWEpuWlhJdGRHaGhiaTF6WTJGc1pTaHRZWGdwWEc0Z0lDQWdJQ0F0YldGNElEMGdMV052Ym5abGNuUXRkRzhvSjJWdEp5d2dMVzFoZUNrZ2FXWWdjblZ3ZEhWeVpTNWxibUZpYkdVdFpXMHRZbkpsWVd0d2IybHVkSE5jYmlBZ0lDQWdJQzF0WVhnZ1BTQXRZV1JxZFhOMExXOTJaWEpzWVhBb1lXNTBhUzF2ZG1WeWJHRndMQ0F0YldGNExDQnphV1JsT2lBbmJXRjRKeWxjYmlBZ0lDQWdJR052Ym1ScGRHbHZiaUE5SUdOdmJtUnBkR2x2YmlBcklDY2dZVzVrSUNodFlYZ3RKeUFySUhWelpTMWtaWFpwWTJVdGQybGtkR2dnS3lBbmQybGtkR2c2SUNWektTY2dKU0FvTFcxaGVDbGNiaUFnSUNCcFppQnZjbWxsYm5SaGRHbHZibHh1SUNBZ0lDQWdZMjl1WkdsMGFXOXVJRDBnWTI5dVpHbDBhVzl1SUNzZ0p5QmhibVFnS0c5eWFXVnVkR0YwYVc5dU9pQWxjeWtuSUNVZ0tHOXlhV1Z1ZEdGMGFXOXVLVnh1SUNBZ0lHbG1JR1JsYm5OcGRIbGNiaUFnSUNBZ0lHTnZibVJwZEdsdmJuTWdQU0FvS1Z4dUlDQWdJQ0FnWm05eUlIRjFaWEo1SUdsdUlDMWtaVzV6YVhSNUxYRjFaWEpwWlhNb1pHVnVjMmwwZVNsY2JpQWdJQ0FnSUNBZ2NIVnphQ2hqYjI1a2FYUnBiMjV6TENCamIyNWthWFJwYjI0Z0t5QW5JR0Z1WkNBbGN5Y2dKU0FvY1hWbGNua3BLVnh1SUNBZ0lDQWdZMjl1WkdsMGFXOXVJRDBnYW05cGJpZ25MQ0FuTENCamIyNWthWFJwYjI1ektWeHVJQ0FnSUVCdFpXUnBZU0JqYjI1a2FYUnBiMjVjYmlBZ0lDQWdJSHRpYkc5amEzMWNiaUFnYVdZZ1ptRnNiR0poWTJzdFkyeGhjM05jYmlBZ0lDQXJZM0psWVhSbExXWmhiR3hpWVdOckxXTnNZWE56S0hObGJHVmpkR1ZrTENCbVlXeHNZbUZqYXkxamJHRnpjeWxjYmlBZ0lDQWdJSHRpYkc5amEzMWNibHh1WVhRb2MyTmhiR1V0Y0c5cGJuUXNJR0Z1ZEdrdGIzWmxjbXhoY0NBOUlISjFjSFIxY21VdVlXNTBhUzF2ZG1WeWJHRndMQ0JrWlc1emFYUjVJRDBnYm5Wc2JDd2diM0pwWlc1MFlYUnBiMjRnUFNCdWRXeHNMQ0IxYzJVdFpHVjJhV05sTFhkcFpIUm9JRDBnY25Wd2RIVnlaUzUxYzJVdFpHVjJhV05sTFhkcFpIUm9MQ0JtWVd4c1ltRmpheTFqYkdGemN5QTlJRzUxYkd3cFhHNGdJR2xtSUMxcGN5MXpkSEpwYm1jb2IzSnBaVzUwWVhScGIyNHBYRzRnSUNBZ2IzSnBaVzUwWVhScGIyNGdQU0JqYjI1MlpYSjBLRzl5YVdWdWRHRjBhVzl1S1Z4dUlDQnBaaUF0YVhNdGMzUnlhVzVuS0dSbGJuTnBkSGtwWEc0Z0lDQWdaR1Z1YzJsMGVTQTlJR052Ym5abGNuUW9aR1Z1YzJsMGVTbGNiaUFnSzJKbGRIZGxaVzRvYzJOaGJHVXRjRzlwYm5Rc0lITmpZV3hsTFhCdmFXNTBMQ0JoYm5ScExXOTJaWEpzWVhBc0lHUmxibk5wZEhrc0lHOXlhV1Z1ZEdGMGFXOXVMQ0IxYzJVdFpHVjJhV05sTFhkcFpIUm9MQ0JtWVd4c1ltRmpheTFqYkdGemN5bGNiaUFnSUNCN1lteHZZMnQ5WEc1Y2JtWnliMjB0ZDJsa2RHZ29jMk5oYkdVdGNHOXBiblFzSUdGdWRHa3RiM1psY214aGNDQTlJSEoxY0hSMWNtVXVZVzUwYVMxdmRtVnliR0Z3TENCa1pXNXphWFI1SUQwZ2JuVnNiQ3dnYjNKcFpXNTBZWFJwYjI0Z1BTQnVkV3hzTENCMWMyVXRaR1YyYVdObExYZHBaSFJvSUQwZ2NuVndkSFZ5WlM1MWMyVXRaR1YyYVdObExYZHBaSFJvTENCbVlXeHNZbUZqYXkxamJHRnpjeUE5SUc1MWJHd3BYRzRnSUdsbUlDMXBjeTF6ZEhKcGJtY29iM0pwWlc1MFlYUnBiMjRwWEc0Z0lDQWdiM0pwWlc1MFlYUnBiMjRnUFNCamIyNTJaWEowS0c5eWFXVnVkR0YwYVc5dUtWeHVJQ0JwWmlBdGFYTXRjM1J5YVc1bktHUmxibk5wZEhrcFhHNGdJQ0FnWkdWdWMybDBlU0E5SUdOdmJuWmxjblFvWkdWdWMybDBlU2xjYmlBZ0sySmxkSGRsWlc0b2MyTmhiR1V0Y0c5cGJuUXNJR3hsYm1kMGFDaHlkWEIwZFhKbExuTmpZV3hsS1N3Z1lXNTBhUzF2ZG1WeWJHRndMQ0JrWlc1emFYUjVMQ0J2Y21sbGJuUmhkR2x2Yml3Z2RYTmxMV1JsZG1salpTMTNhV1IwYUN3Z1ptRnNiR0poWTJzdFkyeGhjM01wWEc0Z0lDQWdlMkpzYjJOcmZWeHVYRzVoWW05MlpTQTlJR1p5YjIwdGQybGtkR2hjYmx4dWRHOHRkMmxrZEdnb2MyTmhiR1V0Y0c5cGJuUXNJR0Z1ZEdrdGIzWmxjbXhoY0NBOUlISjFjSFIxY21VdVlXNTBhUzF2ZG1WeWJHRndMQ0JrWlc1emFYUjVJRDBnYm5Wc2JDd2diM0pwWlc1MFlYUnBiMjRnUFNCdWRXeHNMQ0IxYzJVdFpHVjJhV05sTFhkcFpIUm9JRDBnY25Wd2RIVnlaUzUxYzJVdFpHVjJhV05sTFhkcFpIUm9MQ0JtWVd4c1ltRmpheTFqYkdGemN5QTlJRzUxYkd3cFhHNGdJR2xtSUMxcGN5MXpkSEpwYm1jb2IzSnBaVzUwWVhScGIyNHBYRzRnSUNBZ2IzSnBaVzUwWVhScGIyNGdQU0JqYjI1MlpYSjBLRzl5YVdWdWRHRjBhVzl1S1Z4dUlDQnBaaUF0YVhNdGMzUnlhVzVuS0dSbGJuTnBkSGtwWEc0Z0lDQWdaR1Z1YzJsMGVTQTlJR052Ym5abGNuUW9aR1Z1YzJsMGVTbGNiaUFnSzJKbGRIZGxaVzRvTVN3Z2MyTmhiR1V0Y0c5cGJuUXNJR0Z1ZEdrdGIzWmxjbXhoY0N3Z1pHVnVjMmwwZVN3Z2IzSnBaVzUwWVhScGIyNHNJSFZ6WlMxa1pYWnBZMlV0ZDJsa2RHZ3NJR1poYkd4aVlXTnJMV05zWVhOektWeHVJQ0FnSUh0aWJHOWphMzFjYmx4dVltVnNiM2NnUFNCMGJ5MTNhV1IwYUZ4dVhHNXRiMkpwYkdVb1lXNTBhUzF2ZG1WeWJHRndJRDBnY25Wd2RIVnlaUzVoYm5ScExXOTJaWEpzWVhBc0lHUmxibk5wZEhrZ1BTQnVkV3hzTENCdmNtbGxiblJoZEdsdmJpQTlJRzUxYkd3c0lIVnpaUzFrWlhacFkyVXRkMmxrZEdnZ1BTQnlkWEIwZFhKbExuVnpaUzFrWlhacFkyVXRkMmxrZEdnc0lHWmhiR3hpWVdOckxXTnNZWE56SUQwZ2JuVnNiQ2xjYmlBZ2FXWWdMV2x6TFhOMGNtbHVaeWh2Y21sbGJuUmhkR2x2YmlsY2JpQWdJQ0J2Y21sbGJuUmhkR2x2YmlBOUlHTnZiblpsY25Rb2IzSnBaVzUwWVhScGIyNHBYRzRnSUdsbUlDMXBjeTF6ZEhKcGJtY29aR1Z1YzJsMGVTbGNiaUFnSUNCa1pXNXphWFI1SUQwZ1kyOXVkbVZ5ZENoa1pXNXphWFI1S1Z4dUlDQXJZbVZzYjNjb2NuVndkSFZ5WlM1dGIySnBiR1V0WTNWMGIyWm1MQ0JoYm5ScExXOTJaWEpzWVhBc0lHUmxibk5wZEhrc0lHOXlhV1Z1ZEdGMGFXOXVMQ0IxYzJVdFpHVjJhV05sTFhkcFpIUm9MQ0JtWVd4c1ltRmpheTFqYkdGemN5bGNiaUFnSUNCN1lteHZZMnQ5WEc1Y2JuUmhZbXhsZENoaGJuUnBMVzkyWlhKc1lYQWdQU0J5ZFhCMGRYSmxMbUZ1ZEdrdGIzWmxjbXhoY0N3Z1pHVnVjMmwwZVNBOUlHNTFiR3dzSUc5eWFXVnVkR0YwYVc5dUlEMGdiblZzYkN3Z2RYTmxMV1JsZG1salpTMTNhV1IwYUNBOUlISjFjSFIxY21VdWRYTmxMV1JsZG1salpTMTNhV1IwYUN3Z1ptRnNiR0poWTJzdFkyeGhjM01nUFNCdWRXeHNLVnh1SUNCcFppQXRhWE10YzNSeWFXNW5LRzl5YVdWdWRHRjBhVzl1S1Z4dUlDQWdJRzl5YVdWdWRHRjBhVzl1SUQwZ1kyOXVkbVZ5ZENodmNtbGxiblJoZEdsdmJpbGNiaUFnYVdZZ0xXbHpMWE4wY21sdVp5aGtaVzV6YVhSNUtWeHVJQ0FnSUdSbGJuTnBkSGtnUFNCamIyNTJaWEowS0dSbGJuTnBkSGtwWEc0Z0lDdGlaWFIzWldWdUtISjFjSFIxY21VdWJXOWlhV3hsTFdOMWRHOW1aaXdnY25Wd2RIVnlaUzVrWlhOcmRHOXdMV04xZEc5bVppd2dZVzUwYVMxdmRtVnliR0Z3TENCa1pXNXphWFI1TENCdmNtbGxiblJoZEdsdmJpd2dkWE5sTFdSbGRtbGpaUzEzYVdSMGFDd2dabUZzYkdKaFkyc3RZMnhoYzNNcFhHNGdJQ0FnZTJKc2IyTnJmVnh1WEc1a1pYTnJkRzl3S0dGdWRHa3RiM1psY214aGNDQTlJSEoxY0hSMWNtVXVZVzUwYVMxdmRtVnliR0Z3TENCa1pXNXphWFI1SUQwZ2JuVnNiQ3dnYjNKcFpXNTBZWFJwYjI0Z1BTQnVkV3hzTENCMWMyVXRaR1YyYVdObExYZHBaSFJvSUQwZ2NuVndkSFZ5WlM1MWMyVXRaR1YyYVdObExYZHBaSFJvTENCbVlXeHNZbUZqYXkxamJHRnpjeUE5SUc1MWJHd3BYRzRnSUdsbUlDMXBjeTF6ZEhKcGJtY29iM0pwWlc1MFlYUnBiMjRwWEc0Z0lDQWdiM0pwWlc1MFlYUnBiMjRnUFNCamIyNTJaWEowS0c5eWFXVnVkR0YwYVc5dUtWeHVJQ0JwWmlBdGFYTXRjM1J5YVc1bktHUmxibk5wZEhrcFhHNGdJQ0FnWkdWdWMybDBlU0E5SUdOdmJuWmxjblFvWkdWdWMybDBlU2xjYmlBZ0syRmliM1psS0hKMWNIUjFjbVV1WkdWemEzUnZjQzFqZFhSdlptWXNJR0Z1ZEdrdGIzWmxjbXhoY0N3Z1pHVnVjMmwwZVN3Z2IzSnBaVzUwWVhScGIyNHNJSFZ6WlMxa1pYWnBZMlV0ZDJsa2RHZ3NJR1poYkd4aVlXTnJMV05zWVhOektWeHVJQ0FnSUh0aWJHOWphMzFjYmx4dWFHUW9ZVzUwYVMxdmRtVnliR0Z3SUQwZ2NuVndkSFZ5WlM1aGJuUnBMVzkyWlhKc1lYQXNJR1JsYm5OcGRIa2dQU0J1ZFd4c0xDQnZjbWxsYm5SaGRHbHZiaUE5SUc1MWJHd3NJSFZ6WlMxa1pYWnBZMlV0ZDJsa2RHZ2dQU0J5ZFhCMGRYSmxMblZ6WlMxa1pYWnBZMlV0ZDJsa2RHZ3NJR1poYkd4aVlXTnJMV05zWVhOeklEMGdiblZzYkNsY2JpQWdhV1lnTFdsekxYTjBjbWx1WnlodmNtbGxiblJoZEdsdmJpbGNiaUFnSUNCdmNtbGxiblJoZEdsdmJpQTlJR052Ym5abGNuUW9iM0pwWlc1MFlYUnBiMjRwWEc0Z0lHbG1JQzFwY3kxemRISnBibWNvWkdWdWMybDBlU2xjYmlBZ0lDQmtaVzV6YVhSNUlEMGdZMjl1ZG1WeWRDaGtaVzV6YVhSNUtWeHVJQ0FyWVdKdmRtVW9jblZ3ZEhWeVpTNW9aQzFqZFhSdlptWXNJR0Z1ZEdrdGIzWmxjbXhoY0N3Z1pHVnVjMmwwZVN3Z2IzSnBaVzUwWVhScGIyNHNJSFZ6WlMxa1pYWnBZMlV0ZDJsa2RHZ3NJR1poYkd4aVlXTnJMV05zWVhOektWeHVJQ0FnSUh0aWJHOWphMzFjYmx4dVpHVnVjMmwwZVNoa1pXNXphWFI1TENCdmNtbGxiblJoZEdsdmJpQTlJRzUxYkd3c0lHWmhiR3hpWVdOckxXTnNZWE56SUQwZ2JuVnNiQ2xjYmlBZ2MyVnNaV04wWldRZ1BTQnpaV3hsWTNSdmNpZ3BYRzRnSUdsbUlHNXZkQ0FvY25Wd2RIVnlaUzV5WVhOMFpYSnBjMlV0YldWa2FXRXRjWFZsY21sbGN5bGNiaUFnSUNCamIyNWthWFJwYjI1eklEMGdLQ2xjYmlBZ0lDQm1iM0lnY1hWbGNua2dhVzRnTFdSbGJuTnBkSGt0Y1hWbGNtbGxjeWhrWlc1emFYUjVLVnh1SUNBZ0lDQWdZMjl1WkdsMGFXOXVJRDBnSjI5dWJIa2djMk55WldWdUlHRnVaQ0FsY3ljZ0pTQW9jWFZsY25rcFhHNGdJQ0FnSUNCcFppQnZjbWxsYm5SaGRHbHZibHh1SUNBZ0lDQWdJQ0JqYjI1a2FYUnBiMjRnUFNCamIyNWthWFJwYjI0Z0t5QW5JR0Z1WkNBb2IzSnBaVzUwWVhScGIyNDZJQ1Z6S1NjZ0pTQW9iM0pwWlc1MFlYUnBiMjRwWEc0Z0lDQWdJQ0J3ZFhOb0tHTnZibVJwZEdsdmJuTXNJR052Ym1ScGRHbHZiaWxjYmlBZ0lDQmpiMjVrYVhScGIyNGdQU0JxYjJsdUtDY3NJQ2NzSUdOdmJtUnBkR2x2Ym5NcFhHNGdJQ0FnUUcxbFpHbGhJR052Ym1ScGRHbHZibHh1SUNBZ0lDQWdlMkpzYjJOcmZWeHVJQ0FnSUdsbUlHWmhiR3hpWVdOckxXTnNZWE56WEc0Z0lDQWdJQ0FyWTNKbFlYUmxMV1poYkd4aVlXTnJMV05zWVhOektITmxiR1ZqZEdWa0xDQm1ZV3hzWW1GamF5MWpiR0Z6Y3lsY2JpQWdJQ0FnSUNBZ2UySnNiMk5yZlZ4dVhHNXdhWGhsYkMxeVlYUnBieUE5SUdSbGJuTnBkSGxjYmx4dWNtVjBhVzVoS0c5eWFXVnVkR0YwYVc5dUlEMGdiblZzYkN3Z1ptRnNiR0poWTJzdFkyeGhjM01nUFNCdWRXeHNLVnh1SUNBclpHVnVjMmwwZVNnbmNtVjBhVzVoSnl3Z2IzSnBaVzUwWVhScGIyNHNJR1poYkd4aVlXTnJMV05zWVhOektWeHVJQ0FnSUh0aWJHOWphMzFjYmx4dWJHRnVaSE5qWVhCbEtHUmxibk5wZEhrZ1BTQnVkV3hzTENCbVlXeHNZbUZqYXkxamJHRnpjeUE5SUc1MWJHd3BYRzRnSUhObGJHVmpkR1ZrSUQwZ2MyVnNaV04wYjNJb0tWeHVJQ0JwWmlCdWIzUWdLSEoxY0hSMWNtVXVjbUZ6ZEdWeWFYTmxMVzFsWkdsaExYRjFaWEpwWlhNcFhHNGdJQ0FnYVdZZ0xXbHpMWE4wY21sdVp5aGtaVzV6YVhSNUtWeHVJQ0FnSUNBZ1pHVnVjMmwwZVNBOUlHTnZiblpsY25Rb1pHVnVjMmwwZVNsY2JpQWdJQ0JwWmlCa1pXNXphWFI1WEc0Z0lDQWdJQ0FyY0dsNFpXd3RjbUYwYVc4b1pHVnVjMmwwZVN3Z2IzSnBaVzUwWVhScGIyNDZJR3hoYm1SelkyRndaU3dnWm1Gc2JHSmhZMnN0WTJ4aGMzTXBYRzRnSUNBZ0lDQWdJSHRpYkc5amEzMWNiaUFnSUNCbGJITmxYRzRnSUNBZ0lDQkFiV1ZrYVdFZ2IyNXNlU0J6WTNKbFpXNGdZVzVrSUNodmNtbGxiblJoZEdsdmJqb2diR0Z1WkhOallYQmxLVnh1SUNBZ0lDQWdJQ0I3WW14dlkydDlYRzRnSUNBZ0lDQnBaaUJtWVd4c1ltRmpheTFqYkdGemMxeHVJQ0FnSUNBZ0lDQXJZM0psWVhSbExXWmhiR3hpWVdOckxXTnNZWE56S0hObGJHVmpkR1ZrTENCbVlXeHNZbUZqYXkxamJHRnpjeWxjYmlBZ0lDQWdJQ0FnSUNCN1lteHZZMnQ5WEc1Y2JuQnZjblJ5WVdsMEtHUmxibk5wZEhrZ1BTQnVkV3hzTENCbVlXeHNZbUZqYXkxamJHRnpjeUE5SUc1MWJHd3BYRzRnSUhObGJHVmpkR1ZrSUQwZ2MyVnNaV04wYjNJb0tWeHVJQ0JwWmlCdWIzUWdLSEoxY0hSMWNtVXVjbUZ6ZEdWeWFYTmxMVzFsWkdsaExYRjFaWEpwWlhNcFhHNGdJQ0FnYVdZZ0xXbHpMWE4wY21sdVp5aGtaVzV6YVhSNUtWeHVJQ0FnSUNBZ1pHVnVjMmwwZVNBOUlHTnZiblpsY25Rb1pHVnVjMmwwZVNsY2JpQWdJQ0JwWmlCa1pXNXphWFI1WEc0Z0lDQWdJQ0FyY0dsNFpXd3RjbUYwYVc4b1pHVnVjMmwwZVN3Z2IzSnBaVzUwWVhScGIyNDZJSEJ2Y25SeVlXbDBMQ0JtWVd4c1ltRmpheTFqYkdGemN5bGNiaUFnSUNBZ0lDQWdlMkpzYjJOcmZWeHVJQ0FnSUdWc2MyVmNiaUFnSUNBZ0lFQnRaV1JwWVNCdmJteDVJSE5qY21WbGJpQmhibVFnS0c5eWFXVnVkR0YwYVc5dU9pQndiM0owY21GcGRDbGNiaUFnSUNBZ0lDQWdlMkpzYjJOcmZWeHVJQ0FnSUNBZ2FXWWdabUZzYkdKaFkyc3RZMnhoYzNOY2JpQWdJQ0FnSUNBZ0syTnlaV0YwWlMxbVlXeHNZbUZqYXkxamJHRnpjeWh6Wld4bFkzUmxaQ3dnWm1Gc2JHSmhZMnN0WTJ4aGMzTXBYRzRnSUNBZ0lDQWdJQ0FnZTJKc2IyTnJmVnh1SWl3aVFHbHRjRzl5ZENBbkxpNHZZbkpoYm1RdWFXMXdiM0owSnp0Y2JseHVjMlYwZFhBdFkyOXNiM0l0YzNsemRHVnRLQ1JqZFhOMGIyMVRaWFIwYVc1bmN5QTlJSHQ5S1NCN1hHNWNibHgwTHlwY2JpQWdJQ29nUkdWbVlYVnNkQ0J6WlhSMGFXNW5jenBjYmlBZ0lDb3ZYRzVjZENSa1pXWmhkV3gwVTJWMGRHbHVaM01nUFNCN1hHNWNkRngwZEdWNGREb2dKR0p5WVc1a1FteGhZMnNzWEc1Y2RGeDBZbWRDYjJSNU9pQWtZbkpoYm1SWGFHbDBaU3hjYmx4MFhIUnNhVzVyT2lBa1luSmhibVJDYkdGamF5eGNibHgwWEhSb2IzWmxjam9nSkdKeVlXNWtVbVZrTEZ4dVhIUmNkSEJ5WlhOelpXUTZJQ00yUVRBd01EQXNYRzVjZEZ4MGRtbHphWFJsWkRvZ0pHSnlZVzVrUW14aFkyc3NYRzVjZEZ4MGMyVnNaV04wYVc5dU9pQWtZbkpoYm1SU1pXUXNYRzVjZEZ4MFltZERiMlJsT2lBalpqZG1OMlkzTEZ4dVhIUmNkR052Ykc5eVEyOWtaVG9nSkdKeVlXNWtRbXhoWTJzc1hHNWNkRngwWTI5c2IzVnlTR1Z5YnpvZ2QyaHBkR1ZjYmx4MGZWeHVYRzVjZENSelpYUjBhVzVuY3lBOUlHMWxjbWRsS0NSa1pXWmhkV3gwVTJWMGRHbHVaM01zSUNSamRYTjBiMjFUWlhSMGFXNW5jeWs3WEc1Y2JpQWdMeXBjYmlBZ0lDb2dRbkpsWVd0d2IybHVkQ0J6WlhSMWNEcGNiaUFnSUNvdlhHNWNkR0p2WkhrZ2UxeHVYSFJjZEdOdmJHOXlPaUFrYzJWMGRHbHVaM011ZEdWNGREdGNibHgwWEhSaVlXTnJaM0p2ZFc1a09pQWtjMlYwZEdsdVozTXVZbWRDYjJSNU8xeHVYSFI5WEc1Y2JseDBPanB6Wld4bFkzUnBiMjRnZTF4dVhIUmNkR0poWTJ0bmNtOTFibVE2SUNSelpYUjBhVzVuY3k1elpXeGxZM1JwYjI0N1hHNWNkRngwWTI5c2IzSTZJSGRvYVhSbE8xeHVYSFJjZEdacGJHdzZJSGRvYVhSbE8xeHVYSFI5WEc1Y2JseDBZU0I3WEc0Z0lGeDBZMjlzYjNJNklDUnpaWFIwYVc1bmN5NXNhVzVyTzF4dVhIUjlYRzVjYmx4MFlUcDJhWE5wZEdWa0lIdGNibHgwWEhSamIyeHZjam9nSkhObGRIUnBibWR6TG5acGMybDBaV1E3WEc1Y2RIMWNibHh1WEhSaE9taHZkbVZ5TEZ4dVhIUmhPblpwYzJsMFpXUTZhRzkyWlhJZ2UxeHVYSFJjZEdOdmJHOXlPaUFrYzJWMGRHbHVaM011YUc5MlpYSTdYRzVjZEgxY2JseHVYSFJoT21GamRHbDJaU0I3WEc1Y2RGeDBZMjlzYjNJNklDUnpaWFIwYVc1bmN5NXdjbVZ6YzJWa08xeHVJQ0I5WEc1Y2JseDBZVHBtYjJOMWN5QjdYRzVjZEZ4MGIzVjBiR2x1WlRvZ2JtOXVaVHRjYmx4MFhIUmpiMnh2Y2pvZ0pITmxkSFJwYm1kekxtaHZkbVZ5TzF4dVhIUjlYRzVjYmx4MGNDQmpiMlJsSUh0Y2JpQWdJQ0JqYjJ4dmNqb2dKSE5sZEhScGJtZHpMbU52Ykc5eVEyOWtaVHRjYmx4MFhIUmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtjMlYwZEdsdVozTXVZbWREYjJSbE8xeHVYSFI5WEc1Y2JseDBjSEpsSUh0Y2JpQWdJQ0JqYjJ4dmNqb2dKSE5sZEhScGJtZHpMbU52Ykc5eVEyOWtaVHRjYmx4MFhIUmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtjMlYwZEdsdVozTXVZbWREYjJSbE8xeHVYSFI5WEc1Y2JseDBMbU52Ym5SbGJuUWdlMXh1WEhSY2RHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDUnpaWFIwYVc1bmN5NWlaME52WkdVN1hHNWNkSDFjYmx4dVhIUXVZMjl1ZEdWdWRGOWZZMjl1ZEdGcGJtVnlMRnh1WEhRdVkyOXVkR1Z1ZEY5ZlkyOXVkR0ZwYm1WeUxTMWxlSEJoYm1RZ2UxeHVYSFJjZEdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSelpYUjBhVzVuY3k1aVowSnZaSGs3WEc1Y2RIMWNibHh1SUNBdWFXNW1iM0p0WVhScGIyNWhiQ0I3WEc0Z0lDQWdZMjlzYjNJNklDTmlZbUk3WEc0Z0lIMWNibHh1WEhRdktpQkpiV0ZuWlhNZ2MyOGdZWE56ZFcxbElIZG9hWFJsSUhSbGVIUWdhWE1nY21WeGRXbHlaV1FnS2k5Y2JseDBMbWhsY204Z2UxeHVYSFJjZEdneExDQm9NaXdnYURNc0lHZzBMQ0JvTlN3Z2NDd2dZMjlrWlNCN1hHNWNkRngwWEhSamIyeHZjam9nSkhObGRIUnBibWR6TG1OdmJHOTFja2hsY204N1hHNWNkRngwZlZ4dVhIUjlYRzU5WEc0aUxDSmNibHh1TG5OMlp5MWpaVzUwWlhJdGVDQjdYRzVjZEhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdYSFJrYVhOd2JHRjVPaUJpYkc5amF6dGNibHgwYldGeVoybHVMV3hsWm5RNklHRjFkRzg3WEc1Y2RHMWhjbWRwYmkxeWFXZG9kRG9nWVhWMGJ6dGNiaUFnWEhSd1lXUmthVzVuTFd4bFpuUTZJRFV3SlR0Y2JuMWNibHh1TG5OMlp5MXdZV1JrYVc1bkxYUnZjQ0I3WEc1Y2RIQmhaR1JwYm1jdGRHOXdPaUF4WlcwN1hHNTlYRzR1YzNabkxYQmhaR1JwYm1jdGJHVm1kQ0I3WEc1Y2RIQmhaR1JwYm1jdGJHVm1kRG9nTVdWdE8xeHVmVnh1WEc0dWNtVjFjMkZpYkdVZ2UxeHVJQ0FnSUhCaGRHZ2dlMXh1SUNBZ0lDQWdJQ0JtYVd4c09pQnViMjVsTzF4dUlDQWdJQ0FnSUNCemRISnZhMlU2SUdKc1lXTnJPMXh1SUNBZ0lDQWdJQ0J6ZEhKdmEyVXRkMmxrZEdnNklERXVOWEI0TzF4dUlDQWdJQ0FnSUNCemRISnZhMlV0YkdsdVpXTmhjRG9nY205MWJtUTdYRzRnSUNBZ0lDQWdJSE4wY205clpTMXNhVzVsYW05cGJqb2djbTkxYm1RN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnY0dGMGFDNWlaM04wY205clpTQjdYRzRnSUNBZ0lDQWdJSE4wY205clpUb2dkMmhwZEdVN1hHNGdJQ0FnSUNBZ0lITjBjbTlyWlMxM2FXUjBhRG9nTTNCNE8xeHVJQ0FnSUgxY2JuMWNibHh1UUdsdGNHOXlkQ0FuWkRNdGJHVm5aVzVrTG1sdGNHOXlkQ2RjYmlJc0luTmxkSFZ3TFdsdWNIVjBjeWdrWTNWemRHOXRVMlYwZEdsdVozTWdQU0I3ZlNrZ2UxeHVYSFF2S2x4dUlDQWdLaUJFWldaaGRXeDBJSE5sZEhScGJtZHpPbHh1SUNBZ0tpOWNibHgwSkdSbFptRjFiSFJUWlhSMGFXNW5jeUE5SUh0Y2JseDBYSFJrWldaaGRXeDBSbTl1ZEZOcGVtVTZJREZ5Wlcwc1hHNWNkRngwWTI5c2IzVnlSR2x6WVdKc1pXUTZJQ05tTVdZeFpqRXNYRzVjZEZ4MGJXbHVTR1ZwWjJoME9pQXlMamMxWlcwc1hHNWNkRngwY0dGa1pHbHVaMVJ2Y0RvZ01DNDFaVzBzWEc1Y2RGeDBjR0ZrWkdsdVowSnZkSFJ2YlRvZ01DNDFaVzBzWEc1Y2RGeDBjR0ZrWkdsdVoweGxablE2SURBc1hHNWNkRngwY0dGa1pHbHVaMUpwWjJoME9pQXdMRnh1SUNBZ0lHSnZjbVJsY2tOdmJHOXlPaUFqWkRoa09HUTRYRzVjZEgxY2JseHVYSFFrYzJWMGRHbHVaM01nUFNCdFpYSm5aU2drWkdWbVlYVnNkRk5sZEhScGJtZHpMQ0FrWTNWemRHOXRVMlYwZEdsdVozTXBPMXh1WEc1Y2RHbHVjSFYwVzNSNWNHVTlYQ0owWlhoMFhDSmRMRnh1SUNCcGJuQjFkRnQwZVhCbFBWd2ljR0Z6YzNkdmNtUmNJbDBzWEc0Z0lHbHVjSFYwVzNSNWNHVTlYQ0psYldGcGJGd2lYU3hjYmlBZ2FXNXdkWFJiZEhsd1pUMWNJbTUxYldKbGNsd2lYU3hjYmlBZ2FXNXdkWFJiZEhsd1pUMWNJblJsYkZ3aVhTeGNiaUFnYVc1d2RYUmJkSGx3WlQxY0luVnliRndpWFN4Y2JpQWdjMlZzWldOMExGeHVJQ0IwWlhoMFlYSmxZU0I3WEc1Y2RGeDBZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JpQWdJQ0J0YVc0dGFHVnBaMmgwT2lBa2MyVjBkR2x1WjNNdWJXbHVTR1ZwWjJoME8xeHVJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQWtjMlYwZEdsdVozTXVjR0ZrWkdsdVoxUnZjRHRjYmlBZ0lDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ0pITmxkSFJwYm1kekxuQmhaR1JwYm1kQ2IzUjBiMjA3WEc1Y2RGeDBjR0ZrWkdsdVp5MXNaV1owT2lBa2MyVjBkR2x1WjNNdWNHRmtaR2x1WjB4bFpuUTdYRzVjZEZ4MGNHRmtaR2x1WnkxeWFXZG9kRG9nSkhObGRIUnBibWR6TG5CaFpHUnBibWRTYVdkb2REdGNiaUFnSUNCamIyeHZjam9nSXpNek16dGNiaUFnSUNCMlpYSjBhV05oYkMxaGJHbG5iam9nWW05MGRHOXRPMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF5WlhCbFlYUTZJRzV2TFhKbGNHVmhkRHRjYmlBZ0lDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWtjMlYwZEdsdVozTXVZbTl5WkdWeVEyOXNiM0k3WEc0Z0lDQWdMeThnWW05eVpHVnlMWEpoWkdsMWN6b2dNM0I0TzF4dUlDQWdJRzkxZEd4cGJtVTZJRzV2Ym1VN1hHNGdJQ0FnTHk4Z1ltOTRMWE5vWVdSdmR6b2dhVzV6WlhRZ01DQXhjSGdnTW5CNElISm5ZbUVvTUN3d0xEQXNNQzR3TnpVcE8xeHVYSFJjZEdadmJuUXRjMmw2WlRvZ0pITmxkSFJwYm1kekxtUmxabUYxYkhSR2IyNTBVMmw2WlR0Y2JseHVJQ0FnSUNZNlpHbHpZV0pzWldRZ2UxeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQndZWFIwWlhKdUxTMWpiM0psS0NSelpYUjBhVzVuY3k1amIyeHZkWEpFYVhOaFlteGxaQ2s3WEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzRpTENKQWFXMXdiM0owSUNjdUxpOWljbUZ1WkM1cGJYQnZjblFuTzF4dVFHbHRjRzl5ZENBbkxpNHZiR2xpTDJKMWRIUnZiaTVwYlhCdmNuUW5PMXh1UUdsdGNHOXlkQ0FuTGk0dmJHbGlMMmR5WVdScFpXNTBjeTVwYlhCdmNuUW5PMXh1WEc1elpYUjFjQzFpZFhSMGIyNXpLQ1JqZFhOMGIyMVRaWFIwYVc1bmN5QTlJSHQ5S1NCN1hHNWNkQzhxWEc0Z0lDQXFJRVJsWm1GMWJIUWdjMlYwZEdsdVozTTZYRzRnSUNBcUwxeHVYSFFrWkdWbVlYVnNkRk5sZEhScGJtZHpJRDBnZTF4dVhIUmNkR1JsWm1GMWJIUkdiMjUwVTJsNlpUb2dNWEpsYlN4Y2JseDBYSFJqYjJ4dmRYSkVaV1poZFd4ME9pQWtkV2t0Y25NdFkyOXlaUzUwYUdWdFpYTXViR2xuYUhRdWRHVjRkQ3hjYmx4MFhIUmpiMnh2ZFhKRWFYTmhZbXhsWkRvZ0kyWXhaakZtTVN4Y2JpQWdJQ0JqYjJ4dmRYSkVZVzVuWlhJNklDTmxaREUyTlRFc1hHNGdJQ0FnWTI5c2IzVnlRblYwZEc5dU9pQWtZbkpoYm1SSGNtVjVMRnh1SUNBZ0lHTnZiRzkxY2xOb1lXUnZkem9nSkdKeVlXNWtVbVZrTEZ4dVhIUmNkSEJoWkdScGJtZFViM0E2SURFdU9UTTNOV1Z0TEZ4dVhIUmNkSEJoWkdScGJtZENiM1IwYjIwNklERXVPVE0zTldWdExGeHVYSFJjZEhCaFpHUnBibWRNWldaME9pQXdMamMxWlcwc1hHNWNkRngwY0dGa1pHbHVaMUpwWjJoME9pQXdMamMxWlcxY2JseDBmVnh1WEc1Y2RDUnpaWFIwYVc1bmN5QTlJRzFsY21kbEtDUmtaV1poZFd4MFUyVjBkR2x1WjNNc0lDUmpkWE4wYjIxVFpYUjBhVzVuY3lrN1hHNWNiaUFnWW5WMGRHOXVJSHRjYmlBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNGdJSDFjYmx4dUlDQmpjbVZoZEdVdFpHVm1ZWFZzZEMxaWRYUjBiMjRvSkhObGRIUnBibWR6S1R0Y2JpQWdZM0psWVhSbExXSmxiUzFpZFhSMGIyNG9KM0psWkNjc0lDUnpaWFIwYVc1bmN5azdYRzRnSUdOeVpXRjBaUzFpWlcwdFluVjBkRzl1S0NkbmNtVmxiaWNzSUNSelpYUjBhVzVuY3lrN1hHNGdJR055WldGMFpTMWlaVzB0WW5WMGRHOXVLQ2RpYkhWbEp5d2dKSE5sZEhScGJtZHpLVHRjYmlBZ1kzSmxZWFJsTFdKbGJTMWlkWFIwYjI0b0oySnNZV05ySnl3Z0pITmxkSFJwYm1kektUdGNibHh1SUNBdkx5QlVUMFJQT2lCeVpXMXZkbVVnZEdobGMyVWdiR1ZuWVdONUlHSjFkSFJ2Ym5OY2JpQWdMbWhsY204Z1luVjBkRzl1TG1SaGJtZGxjaXhjYmlBZ1luVjBkRzl1TG1SaGJtZGxjaUI3WEc0Z0lDQWdJQ0JqYjJ4dmNqb2dkMmhwZEdVN1hHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBa2MyVjBkR2x1WjNNdWNtVmtMbUpoWTJ0bmNtOTFibVF1YUc5MlpYSTdYRzRnSUNBZ0lDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWtjMlYwZEdsdVozTXVjbVZrTG1KaFkydG5jbTkxYm1RdWFHOTJaWEk3WEc1Y2JpQWdJQ0FnSUNZNmFHOTJaWElnZTF4dUlDQWdJQ0FnSUNBdkx5QmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQmtaWE5oZEhWeVlYUmxLQ1J6WlhSMGFXNW5jeTV5WldRdVltRmphMmR5YjNWdVpDNW9iM1psY2l3Z01qQWxLVHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSkhObGRIUnBibWR6TG5KbFpDNWlZV05yWjNKdmRXNWtMbWh2ZG1WeU8xeHVJQ0FnSUNBZ0lDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWtjMlYwZEdsdVozTXVjbVZrTG1KaFkydG5jbTkxYm1RdWFHOTJaWEk3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNZNllXTjBhWFpsSUh0Y2JpQWdJQ0FnSUNBZ0x5OGdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2daR1Z6WVhSMWNtRjBaU2drYzJWMGRHbHVaM011Y21Wa0xtSmhZMnRuY205MWJtUXVhRzkyWlhJc0lESXdKU2s3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSelpYUjBhVzVuY3k1eVpXUXVZbUZqYTJkeWIzVnVaQzV3Y21WemMyVmtPMXh1SUNBZ0lDQWdJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FrYzJWMGRHbHVaM011Y21Wa0xtSmhZMnRuY205MWJtUXVjSEpsYzNObFpEdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdKanBrYVhOaFlteGxaQ0I3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhCaGRIUmxjbTR0TFdOdmNtVW9LVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSmpwa2FYTmhZbXhsWkRwb2IzWmxjaUI3WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSelpYUjBhVzVuY3k1eVpXUXVZbUZqYTJkeWIzVnVaQzVvYjNabGNqdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2djR0YwZEdWeWJpMHRZMjl5WlNncE8xeHVJQ0FnSUNBZ0lDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWtjMlYwZEdsdVozTXVjbVZrTG1KaFkydG5jbTkxYm1RdWFHOTJaWEk3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNZNlptOWpkWE1nZTF4dUlDQWdJQ0FnSUNCdmRYUnNhVzVsT2lCdWIyNWxPeUF2THlCRWFYTmhZbXhsSUc5MWRHeHBibVVnYVc0Z1kyaHliMjFsWEc0Z0lDQWdJQ0I5WEc0Z0lIMWNibHh1SUNBdWFHVnlieUJpZFhSMGIyNGdlMXh1SUNBZ0lDQWdZMjlzYjNJNklIZG9hWFJsTzF4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBeExqSmxiVHRjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQWdJQ0FnWW05NExYTm9ZV1J2ZHpvZ01DQXdJREFnTVhCNElIZG9hWFJsTzF4dVhHNGdJQ0FnSUNBbU9tWnZZM1Z6SUh0Y2JpQWdJQ0FnSUNBZ0lDQnZkWFJzYVc1bE9pQnViMjVsTzF4dUlDQWdJQ0FnSUNBZ0lHSnZlQzF6YUdGa2IzYzZJREFnTUNBd0lERndlQ0FrYzJWMGRHbHVaM011WTI5c2IzVnlVMmhoWkc5M08xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQW1PbWh2ZG1WeUlIdGNiaUFnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJ5WjJKaEtESTFOU3d5TlRVc01qVTFMREFwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBbU9tUnBjMkZpYkdWa0lIdGNiaUFnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUJ3WVhSMFpYSnVMUzFqYjNKbEtISm5ZbUVvTWpVMUxESTFOU3d5TlRVc01DNHpLU2s3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNZNlpHbHpZV0pzWldRNmFHOTJaWElnZTF4dUlDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBPMXh1SUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhCaGRIUmxjbTR0TFdOdmNtVW9jbWRpWVNneU5UVXNNalUxTERJMU5Td3dMak1wS1R0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0pqcG1iMk4xY3lCN1hHNGdJQ0FnSUNBZ0lHOTFkR3hwYm1VNklHNXZibVU3SUM4dklFUnBjMkZpYkdVZ2IzVjBiR2x1WlNCcGJpQmphSEp2YldWY2JpQWdJQ0FnSUgxY2JpQWdmVnh1ZlZ4dUlpd2lMeXBjYmlBcUlHMXBlR2x1Y3lCbWIzSWdjMlYwZEdsdVp5QjFjQ0JpZFhSMGIyNXpYRzRnS2k5Y2JseHVMeXBjYmlBcUlHTnlaV0YwWlMxa1pXWmhkV3gwTFdKMWRIUnZiaWdwWEc0Z0tseHVJQ29nVTNSNWJHVnpJR0VnWkdWbVlYVnNkQ0JpZFhSMGIyNHVYRzRnS2k5Y2JtTnlaV0YwWlMxa1pXWmhkV3gwTFdKMWRIUnZiaWdrYzJWMGRHbHVaM01wSUh0Y2JpQWdZblYwZEc5dUlIdGNiaUFnSUNBZ0lIQmhaR1JwYm1jdGRHOXdPaUFrYzJWMGRHbHVaM011YzNSNWJHVXVaR1ZtWVhWc2RDNXdZV1JrYVc1blZHOXdPMXh1SUNBZ0lDQWdjR0ZrWkdsdVp5MWliM1IwYjIwNklDUnpaWFIwYVc1bmN5NXpkSGxzWlM1a1pXWmhkV3gwTG5CaFpHUnBibWRDYjNSMGIyMDdYRzRnSUNBZ0lDQndZV1JrYVc1bkxXeGxablE2SUNSelpYUjBhVzVuY3k1emRIbHNaUzVrWldaaGRXeDBMbkJoWkdScGJtZE1aV1owTzF4dUlDQWdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2dKSE5sZEhScGJtZHpMbk4wZVd4bExtUmxabUYxYkhRdWNHRmtaR2x1WjFKcFoyaDBPMXh1WEc0Z0lDQWdJQ0JqYjJ4dmNqb2dKSE5sZEhScGJtZHpMbVJsWm1GMWJIUXVZMjlzYjNJdVpHVm1ZWFZzZER0Y2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDUnpaWFIwYVc1bmN5NWtaV1poZFd4MExtSmhZMnRuY205MWJtUXVaR1ZtWVhWc2REdGNiaUFnSUNBZ0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDUnpaWFIwYVc1bmN5NWtaV1poZFd4MExtTnZiRzl5TG1KdmNtUmxjanRjYmx4dUlDQWdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDUnpaWFIwYVc1bmN5NW1iMjUwUm1GdGFXeDVPMXh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUFrYzJWMGRHbHVaM011WkdWbVlYVnNkRVp2Ym5SVGFYcGxPMXh1WEc0Z0lDQWdJQ0F2THlCT1QxUkZPaUJ3YzJWMVpHOGdZMnhoYzNNZ2IzSmtaWElnYldGMGRHVnljem9nYUhSMGNITTZMeTlqYzNNdGRISnBZMnR6TG1OdmJTOXlaVzFsYldKbGNpMXpaV3hsWTNSdmNuTXRkMmwwYUMxc2IzWmxMV0Z1WkMxb1lYUmxMMXh1SUNBZ0lDQWdKanBvYjNabGNpQjdYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQWtjMlYwZEdsdVozTXVaR1ZtWVhWc2RDNWpiMnh2Y2k1b2IzWmxjanRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pITmxkSFJwYm1kekxtUmxabUYxYkhRdVltRmphMmR5YjNWdVpDNW9iM1psY2p0Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0pITmxkSFJwYm1kekxtUmxabUYxYkhRdVltRmphMmR5YjNWdVpDNW9iM1psY2p0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0pqcGhZM1JwZG1VZ2UxeHVJQ0FnSUNBZ0lDQnZkWFJzYVc1bE9pQnViMjVsTzF4dUlDQWdJQ0FnSUNCamIyeHZjam9nSkhObGRIUnBibWR6TG1SbFptRjFiSFF1WTI5c2IzSXVjSEpsYzNObFpEdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSkhObGRIUnBibWR6TG1SbFptRjFiSFF1WW1GamEyZHliM1Z1WkM1d2NtVnpjMlZrTzF4dUlDQWdJQ0FnSUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBa2MyVjBkR2x1WjNNdVpHVm1ZWFZzZEM1aVlXTnJaM0p2ZFc1a0xuQnlaWE56WldRN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDWTZaR2x6WVdKc1pXUWdlMXh1SUNBZ0lDQWdJQ0JqYjJ4dmNqb2dKSE5sZEhScGJtZHpMbVJsWm1GMWJIUXVZMjlzYjNJdVpHbHpZV0pzWldRN1hHNGdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZJQ1J6WlhSMGFXNW5jeTVrWldaaGRXeDBMbUpoWTJ0bmNtOTFibVF1WkdsellXSnNaV1E3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNSelpYUjBhVzVuY3k1a1pXWmhkV3gwTG1KaFkydG5jbTkxYm1RdVpHbHpZV0pzWldRN1hHNGdJQ0FnSUNBZ0lHTjFjbk52Y2pvZ1pHVm1ZWFZzZER0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0pqcG1iMk4xY3lCN1hHNGdJQ0FnSUNBZ0lHOTFkR3hwYm1VNklHNXZibVU3SUM4dklFUnBjMkZpYkdVZ2IzVjBiR2x1WlNCcGJpQmphSEp2YldWY2JpQWdJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lHSjFkSFJ2Ymk1eWN5MWlkRzR0TFhOdFlXeHNJSHRjYmlBZ0lDQndZV1JrYVc1bkxYUnZjRG9nSkhObGRIUnBibWR6TG5OMGVXeGxMbk50WVd4c0xuQmhaR1JwYm1kVWIzQTdYRzRnSUNBZ2NHRmtaR2x1WnkxaWIzUjBiMjA2SUNSelpYUjBhVzVuY3k1emRIbHNaUzV6YldGc2JDNXdZV1JrYVc1blFtOTBkRzl0TzF4dUlDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ0pITmxkSFJwYm1kekxuTjBlV3hsTG5OdFlXeHNMbkJoWkdScGJtZE1aV1owTzF4dUlDQWdJSEJoWkdScGJtY3RjbWxuYUhRNklDUnpaWFIwYVc1bmN5NXpkSGxzWlM1emJXRnNiQzV3WVdSa2FXNW5VbWxuYUhRN1hHNGdJSDFjYmx4dUlDQmlkWFIwYjI0dWNuTXRZblJ1TFMxelpXeGxZM1JsWkNCN1hHNGdJQ0FnWTI5c2IzSTZJQ1J6WlhSMGFXNW5jeTVrWldaaGRXeDBMbU52Ykc5eUxtaHZkbVZ5TzF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUNSelpYUjBhVzVuY3k1a1pXWmhkV3gwTG1KaFkydG5jbTkxYm1RdWFHOTJaWEk3WEc0Z0lDQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdKSE5sZEhScGJtZHpMbVJsWm1GMWJIUXVZbUZqYTJkeWIzVnVaQzVvYjNabGNqdGNibHh1SUNBZ0lDWTZhRzkyWlhJZ2UxeHVJQ0FnSUNBZ1kyOXNiM0k2SUNSelpYUjBhVzVuY3k1a1pXWmhkV3gwTG1OdmJHOXlMbkJ5WlhOelpXUTdYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFrYzJWMGRHbHVaM011WkdWbVlYVnNkQzVpWVdOclozSnZkVzVrTG5CeVpYTnpaV1E3WEc0Z0lDQWdJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FrYzJWMGRHbHVaM011WkdWbVlYVnNkQzVpWVdOclozSnZkVzVrTG5CeVpYTnpaV1E3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdKanBoWTNScGRtVWdlMXh1SUNBZ0lDQWdZMjlzYjNJNklDUnpaWFIwYVc1bmN5NWtaV1poZFd4MExtTnZiRzl5TG1odmRtVnlPMXh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSkhObGRIUnBibWR6TG1SbFptRjFiSFF1WW1GamEyZHliM1Z1WkM1b2IzWmxjanRjYmlBZ0lDQWdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ1J6WlhSMGFXNW5jeTVrWldaaGRXeDBMbUpoWTJ0bmNtOTFibVF1YUc5MlpYSTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0pqcG9iM1psY2pwa2FYTmhZbXhsWkNCN1hHNGdJQ0FnSUNCamIyeHZjam9nSkhObGRIUnBibWR6TG1SbFptRjFiSFF1WTI5c2IzSXVhRzkyWlhJN1hHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQWtjMlYwZEdsdVozTXVaR1ZtWVhWc2RDNWlZV05yWjNKdmRXNWtMbWh2ZG1WeU8xeHVJQ0FnSUNBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0pITmxkSFJwYm1kekxtUmxabUYxYkhRdVltRmphMmR5YjNWdVpDNW9iM1psY2p0Y2JpQWdJQ0FnSUdOMWNuTnZjam9nWkdWbVlYVnNkRHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0F2S2lCVGRIbHNhVzVuSUhSb1pTQmlZWE5sSUdKMWRIUnZiaUIzYVd4c0lHbHpJR2x0Y0d4cFkybDBiSGtnWVhCd2JIbHBibWNnZEdobElITjBlV3hsY3lCMGJ5QjBhR1VnSjJKbGJTY2dZblYwZEc5dWN5QXFMMXh1SUNCaFpHcDFjM1F0Y0MxaWJHOWpheTF6ZEhsc2FXNW5LQ1IxYVMxeWN5MWpiM0psTG5SNWNHVnpMbk5sZEhScGJtZHpMbTF2WW1sc1pWQnZjblJ5WVdsMExDQWtjMlYwZEdsdVozTXVjM1I1YkdVcE8xeHVYRzRnSUN0aFltOTJaU2duZEdGaWJHVjBKeWtnZTF4dUlDQWdJR0ZrYW5WemRDMXdMV0pzYjJOckxYTjBlV3hwYm1jb0pIVnBMWEp6TFdOdmNtVXVkSGx3WlhNdWMyVjBkR2x1WjNNdWRHRmliR1YwTENBa2MyVjBkR2x1WjNNdWMzUjViR1VwTzF4dUlDQjlYRzU5WEc1Y2JpOHFYRzRnS2lCamNtVmhkR1V0WW1WdExXSjFkSFJ2YmlncFhHNGdLbHh1SUNvZ1EzSmxZWFJsY3lCaElHSjFkSFJ2YmlCM2FYUm9JRUpGVFNCemRIbHNaU0JqYkdGemMyVnpMbHh1SUNvdlhHNGdZM0psWVhSbExXSmxiUzFpZFhSMGIyNG9KRzVoYldVc0lDUnpaWFIwYVc1bmN5a2dlMXh1SUNBZ0lDNXljeTFpZEc0dExYc2tibUZ0WlgwZ2UxeHVJQ0FnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJQ1J6WlhSMGFXNW5jeTV6ZEhsc1pTNWtaV1poZFd4MExuQmhaR1JwYm1kVWIzQTdYRzRnSUNBZ0lDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ0pITmxkSFJwYm1kekxuTjBlV3hsTG1SbFptRjFiSFF1Y0dGa1pHbHVaMEp2ZEhSdmJUdGNiaUFnSUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nSkhObGRIUnBibWR6TG5OMGVXeGxMbVJsWm1GMWJIUXVjR0ZrWkdsdVoweGxablE3WEc0Z0lDQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQWtjMlYwZEdsdVozTXVjM1I1YkdVdVpHVm1ZWFZzZEM1d1lXUmthVzVuVW1sbmFIUTdYRzVjYmlBZ0lDQWdJR052Ykc5eU9pQWtjMlYwZEdsdVozTmJKRzVoYldWZExtTnZiRzl5TG1SbFptRjFiSFE3WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrT2lBa2MyVjBkR2x1WjNOYkpHNWhiV1ZkTG1KaFkydG5jbTkxYm1RdVpHVm1ZWFZzZER0Y2JseHVJQ0FnSUNBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0pITmxkSFJwYm1keld5UnVZVzFsWFM1amIyeHZjaTVpYjNKa1pYSTdYRzVjYmlBZ0lDQWdJR1p2Ym5RdFptRnRhV3g1T2lBa2MyVjBkR2x1WjNNdVptOXVkRVpoYldsc2VUdGNibHgwWEhSY2RHWnZiblF0YzJsNlpUb2dKSE5sZEhScGJtZHpMbVJsWm1GMWJIUkdiMjUwVTJsNlpUdGNibHh1SUNBZ0lDQWdMeThnVGs5VVJUb2djSE5sZFdSdklHTnNZWE56SUc5eVpHVnlJRzFoZEhSbGNuTTZJR2gwZEhCek9pOHZZM056TFhSeWFXTnJjeTVqYjIwdmNtVnRaVzFpWlhJdGMyVnNaV04wYjNKekxYZHBkR2d0Ykc5MlpTMWhibVF0YUdGMFpTOWNiaUFnSUNBZ0lDWTZhRzkyWlhJZ2UxeHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pITmxkSFJwYm1keld5UnVZVzFsWFM1amIyeHZjaTVvYjNabGNqdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSkhObGRIUnBibWR6V3lSdVlXMWxYUzVpWVdOclozSnZkVzVrTG1odmRtVnlPMXh1SUNBZ0lDQWdJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FrYzJWMGRHbHVaM05iSkc1aGJXVmRMbUpoWTJ0bmNtOTFibVF1YUc5MlpYSTdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ1k2WVdOMGFYWmxJSHRjYmlBZ0lDQWdJQ0FnYjNWMGJHbHVaVG9nYm05dVpUdGNiaUFnSUNBZ0lDQWdZMjlzYjNJNklDUnpaWFIwYVc1bmMxc2tibUZ0WlYwdVkyOXNiM0l1Y0hKbGMzTmxaRHRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pITmxkSFJwYm1keld5UnVZVzFsWFM1aVlXTnJaM0p2ZFc1a0xuQnlaWE56WldRN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDUnpaWFIwYVc1bmMxc2tibUZ0WlYwdVltRmphMmR5YjNWdVpDNXdjbVZ6YzJWa08xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQW1PbVJwYzJGaWJHVmtJSHRjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJQ1J6WlhSMGFXNW5jMXNrYm1GdFpWMHVZMjlzYjNJdVpHbHpZV0pzWldRN1hHNGdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZJQ1J6WlhSMGFXNW5jMXNrYm1GdFpWMHVZbUZqYTJkeWIzVnVaQzVrYVhOaFlteGxaRHRjYmlBZ0lDQWdJQ0FnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSkhObGRIUnBibWR6V3lSdVlXMWxYUzVpWVdOclozSnZkVzVrTG1ScGMyRmliR1ZrTzF4dUlDQWdJQ0FnSUNCamRYSnpiM0k2SUdSbFptRjFiSFE3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNZNlptOWpkWE1nZTF4dUlDQWdJQ0FnSUNCdmRYUnNhVzVsT2lCdWIyNWxPeUF2THlCRWFYTmhZbXhsSUc5MWRHeHBibVVnYVc0Z1kyaHliMjFsWEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMbkp6TFdKMGJpMHRleVJ1WVcxbGZTNXljeTFpZEc0dExYTmxiR1ZqZEdWa0lIdGNiaUFnSUNBZ0lHTnZiRzl5T2lBa2MyVjBkR2x1WjNOYkpHNWhiV1ZkTG1OdmJHOXlMbWh2ZG1WeU8xeHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dKSE5sZEhScGJtZHpXeVJ1WVcxbFhTNWlZV05yWjNKdmRXNWtMbWh2ZG1WeU8xeHVJQ0FnSUNBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0pITmxkSFJwYm1keld5UnVZVzFsWFM1aVlXTnJaM0p2ZFc1a0xtaHZkbVZ5TzF4dVhHNGdJQ0FnSUNBbU9taHZkbVZ5SUh0Y2JpQWdJQ0FnSUNBZ1kyOXNiM0k2SUNSelpYUjBhVzVuYzFza2JtRnRaVjB1WTI5c2IzSXVjSEpsYzNObFpEdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSkhObGRIUnBibWR6V3lSdVlXMWxYUzVpWVdOclozSnZkVzVrTG5CeVpYTnpaV1E3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNSelpYUjBhVzVuYzFza2JtRnRaVjB1WW1GamEyZHliM1Z1WkM1d2NtVnpjMlZrTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBbU9tRmpkR2wyWlNCN1hHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lBa2MyVjBkR2x1WjNOYkpHNWhiV1ZkTG1OdmJHOXlMbWh2ZG1WeU8xeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFrYzJWMGRHbHVaM05iSkc1aGJXVmRMbUpoWTJ0bmNtOTFibVF1YUc5MlpYSTdYRzRnSUNBZ0lDQWdJR0p2Y21SbGNqb2dNWEI0SUhOdmJHbGtJQ1J6WlhSMGFXNW5jMXNrYm1GdFpWMHVZbUZqYTJkeWIzVnVaQzVvYjNabGNqdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdKanBvYjNabGNqcGthWE5oWW14bFpDQjdYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQWtjMlYwZEdsdVozTmJKRzVoYldWZExtTnZiRzl5TG1odmRtVnlPMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lBa2MyVjBkR2x1WjNOYkpHNWhiV1ZkTG1KaFkydG5jbTkxYm1RdWFHOTJaWEk3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrSUNSelpYUjBhVzVuYzFza2JtRnRaVjB1WW1GamEyZHliM1Z1WkM1b2IzWmxjanRjYmlBZ0lDQWdJQ0FnWTNWeWMyOXlPaUJrWldaaGRXeDBPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDNXljeTFpZEc0dExYTnRZV3hzSUh0Y2JpQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQWtjMlYwZEdsdVozTXVjM1I1YkdVdWMyMWhiR3d1Y0dGa1pHbHVaMVJ2Y0R0Y2JpQWdJQ0FnSUhCaFpHUnBibWN0WW05MGRHOXRPaUFrYzJWMGRHbHVaM011YzNSNWJHVXVjMjFoYkd3dWNHRmtaR2x1WjBKdmRIUnZiVHRjYmlBZ0lDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ0pITmxkSFJwYm1kekxuTjBlV3hsTG5OdFlXeHNMbkJoWkdScGJtZE1aV1owTzF4dUlDQWdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2dKSE5sZEhScGJtZHpMbk4wZVd4bExuTnRZV3hzTG5CaFpHUnBibWRTYVdkb2REdGNiaUFnSUNCOVhHNGdmVnh1WEc0dktseHVJQ29nWVdScWRYTjBMWEF0WW14dlkyc3RjM1I1YkdsdVp5Z3BYRzRnS2x4dUlDb2dWMlVnWVhOemRXMWxJSFJvWVhRZ1kyOXVkR1Z1ZENCM2FYUm9hVzRnUEhBK0lHSnNiMk5yY3lCM2FXeHNJR0psSUhSbGVIUW5hWE5vTGlCVWFHVnlaV1p2Y21VZ2QyVWdjM1I1YkdVZ1ltRnpaU0JqYjIxd2IyNWxiblFnYkdsclpWeHVJQ29nUEdKMWRIUnZibk0rSUhOdklIUm9ZWFFnZEdobGVTQnNiMjlySUdkdmIyUWdhVzRnWVNCMFpYaDBJR1pzYjNjdVhHNGdLaUJVYUdVZ2JXRnlaMmx1SUdseklHTmhiR04xYkdGMFpXUWdZbUZ6WldRZ2IyNGdkR2hsSUd4cGJtVXRhR1ZwWjJoMElHOW1JSFJvWlNBOGNENDZJSEF1YkdsdVpTMW9aV2xuYUhRZ0xTQndMbVp2Ym5RdGMybDZaU0F0SUdKMWRIUnZiaTV3WVdSa2FXNW5YRzRnS2k5Y2JtRmthblZ6ZEMxd0xXSnNiMk5yTFhOMGVXeHBibWNvSkhSNWNHVlRaWFIwYVc1bmN5d2dKSE4wZVd4bFUyVjBkR2x1WjNNcElIdGNiaUFnSkhCTWFXNWxTR1ZwWjJoMElEMGdKSFI1Y0dWVFpYUjBhVzVuY3k1d1d5ZHNhVzVsTFdobGFXZG9kQ2RkTzF4dUlDQWtjRVp2Ym5SVGFYcGxJRDBnSkhSNWNHVlRaWFIwYVc1bmN5NXdXeWRtYjI1MExYTnBlbVVuWFR0Y2JseHVJQ0J3SUdKMWRIUnZiaUI3WEc0Z0lDQWdMeThnY0dGa1pHbHVaem9nSkhOMGVXeGxVMlYwZEdsdVozTXVaR1ZtWVhWc2RDNXdZV1JrYVc1blZHOXdJQ1J6ZEhsc1pWTmxkSFJwYm1kekxtUmxabUYxYkhRdWNHRmtaR2x1WjFKcFoyaDBJQ1J6ZEhsc1pWTmxkSFJwYm1kekxtUmxabUYxYkhRdWNHRmtaR2x1WjBKdmRIUnZiU0FrYzNSNWJHVlRaWFIwYVc1bmN5NWtaV1poZFd4MExuQmhaR1JwYm1kTVpXWjBPMXh1SUNBZ0lHMWhjbWRwYmpvZ0tDUndUR2x1WlVobGFXZG9kQ0F0SUNSd1JtOXVkRk5wZW1VcE8xeHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXhPMXh1SUNCOVhHNWNiaUFnY0NCaWRYUjBiMjR1Y25NdFluUnVMUzF6YldGc2JDQWdlMXh1SUNBZ0lHMWhjbWRwYmpvZ0tDUndUR2x1WlVobGFXZG9kQ0F0SUNSd1JtOXVkRk5wZW1VZ0xTQWtjM1I1YkdWVFpYUjBhVzVuY3k1emJXRnNiQzV3WVdSa2FXNW5WRzl3THpJcE8xeHVJQ0I5WEc1OVhHNGlMQ0l2S2x4dUlDb2dZM0psWVhSbExXbGpiMjR0WW5WMGRHOXVLQ2xjYmlBcVhHNGdLaUJEY21WaGRHVnpJR0VnWW5WMGRHOXVJSGRwZEdnZ1lXNGdhV052YmlBb1pTNW5MaUJtYjNJZ1ptVmtaWEpoZEdWa0lHeHZaMmx1SUdKMWRIUnZibk1wTGx4dUlDb3ZYRzRnYzJWMGRYQXRaR1ZtWVhWc2RDMXBZMjl1TFdKMWRIUnZiaWdrYzNSNWJHVXNJQ1JqYjJ4dmNuTXBJSHRjYmlBZ0lDQXVjbk10YVdOdmJpMWlkRzRnZTF4dUlDQWdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnSUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCeWIzYzdYRzRnSUNBZ0lDQm1iR1Y0T2lBd0lHRjFkRzg3WEc1Y2JpQWdJQ0FnSUcxcGJpMTNhV1IwYURvZ0pITjBlV3hsTG1SbFptRjFiSFF1YldsdVYybGtkR2c3WEc1Y2JpQWdJQ0FnSUdOdmJHOXlPaUFrWTI5c2IzSnpMbU52Ykc5eUxtUmxabUYxYkhRN1hHNGdJQ0FnSUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBa1kyOXNiM0p6TG1OdmJHOXlMbVJsWm1GMWJIUTdYRzVjYmlBZ0lDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JpQWdJQ0FnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmx4dUlDQWdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDUnpkSGxzWlM1a1pXWmhkV3gwTG1admJuUkdZVzFwYkhrN1hHNGdJQ0FnSUNCbWIyNTBMWE5wZW1VNklDUnpkSGxzWlM1a1pXWmhkV3gwTG1SbFptRjFiSFJHYjI1MFUybDZaVHRjYmx4dUlDQWdJQ0FnTHk4Z1RrOVVSVG9nY0hObGRXUnZJR05zWVhOeklHOXlaR1Z5SUcxaGRIUmxjbk02SUdoMGRIQnpPaTh2WTNOekxYUnlhV05yY3k1amIyMHZjbVZ0WlcxaVpYSXRjMlZzWldOMGIzSnpMWGRwZEdndGJHOTJaUzFoYm1RdGFHRjBaUzljYmlBZ0lDQWdJQ1k2YUc5MlpYSWdlMXh1SUNBZ0lDQWdJQ0JqYjJ4dmNqb2dKR052Ykc5eWN5NWpiMnh2Y2k1b2IzWmxjanRjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ0pHTnZiRzl5Y3k1aVlXTnJaM0p2ZFc1a0xtaHZkbVZ5TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBbU9tRmpkR2wyWlNCN1hHNGdJQ0FnSUNBZ0lHOTFkR3hwYm1VNklHNXZibVU3WEc0Z0lDQWdJQ0FnSUdOdmJHOXlPaUFrWTI5c2IzSnpMbU52Ykc5eUxuQnlaWE56WldRN1hHNGdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZJQ1JqYjJ4dmNuTXVZbUZqYTJkeWIzVnVaQzV3Y21WemMyVmtPMXh1SUNBZ0lDQWdJQ0JpYjNKa1pYSTZJREZ3ZUNCemIyeHBaQ0FrWTI5c2IzSnpMbUpoWTJ0bmNtOTFibVF1Y0hKbGMzTmxaRHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSmpwa2FYTmhZbXhsWkNCN1hHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lBa1kyOXNiM0p6TG1OdmJHOXlMbVJwYzJGaWJHVmtPMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lBa1kyOXNiM0p6TG1KaFkydG5jbTkxYm1RdVpHbHpZV0pzWldRN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDUmpiMnh2Y25NdVltRmphMmR5YjNWdVpDNWthWE5oWW14bFpEdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdKanBtYjJOMWN5QjdYRzRnSUNBZ0lDQWdJRzkxZEd4cGJtVTZJRzV2Ym1VN0lDOHZJRVJwYzJGaWJHVWdiM1YwYkdsdVpTQnBiaUJqYUhKdmJXVmNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNBdWNuTXRhV052YmkxaWRHNWZYMmxqYjI0Z2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lDQWdJQ0IzYVdSMGFEb2dNUzQ0TnpWbGJUdGNiaUFnSUNBZ0lHaGxhV2RvZERvZ01TNDROelZsYlR0Y2JpQWdJQ0FnSUdac1pYZzZJREFnTUNBMU1IQjRPMXh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMlptWmp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0F1Y25NdGFXTnZiaTFpZEc1ZlgyeGhZbVZzSUh0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ0lDQndZV1JrYVc1bkxXeGxablE2SURGbGJUdGNiaUFnSUNBZ0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ1pteGxlQzF6ZEdGeWREdGNiaUFnSUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUNBZ0lDQm1iR1Y0T2lBeE8xeHVYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFrWTI5c2IzSnpMbUpoWTJ0bmNtOTFibVF1WkdWbVlYVnNkRHRjYmx4dUlDQWdJQ0FnZEhKaGJuTnBkR2x2YmpvZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2lBeU1EQnRjeUJsWVhObE8xeHVYRzRnSUNBZ0lDQW1PbWh2ZG1WeUlIdGNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nSkdOdmJHOXljeTVpWVdOclozSnZkVzVrTG1odmRtVnlPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDNXljeTFwWTI5dUxXSjBibDlmYVdOdmJsOWZkM0poY0hCbGNpQjdYRzRnSUNBZ0lDQjNhV1IwYURvZ01pNDFaVzA3WEc0Z0lDQWdJQ0JvWldsbmFIUTZJREl1TldWdE8xeHVYRzRnSUNBZ0lDQmliM0prWlhJdGNtbG5hSFE2SURGd2VDQnpiMnhwWkNBa1kyOXNiM0p6TG1OdmJHOXlMbVJsWm1GMWJIUTdYRzVjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdObGJuUmxjanRjYmlBZ0lDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc1Y2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklIZG9hWFJsTzF4dUlDQWdJSDFjYmx4dUlDQWdJQzV5Y3kxcFkyOXVMV0owYmw5ZmFXTnZibDlmZDNKaGNIQmxjbDlmY0dGa1pHbHVaeUI3WEc0Z0lDQWdJQ0F2S2lCdmJteDVJRzVsWTJWemMyRnllU0JtYjNJZ1pteGxlR0p2ZUNCalpXNTBaWEpwYm1jZ0tpOWNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5QXVjbk10YVdOdmJpMWlkRzR0TFhOdFlXeHNJSHRjYmlBZ0lDQXZMeUFnSUcxcGJpMTNhV1IwYURvZ0pITjBlV3hsTG5OdFlXeHNMbTFwYmxkcFpIUm9PMXh1SUNBZ0lDOHZJQ0FnYldGeVoybHVMWFJ2Y0RvZ0pITjBlV3hsTG5OdFlXeHNMbTFoY21kcGJsUnZjRHRjYmlBZ0lDQXZMeUFnSUcxaGNtZHBiaTFpYjNSMGIyMDZJQ1J6ZEhsc1pTNXpiV0ZzYkM1dFlYSm5hVzVDYjNSMGIyMDdYRzRnSUNBZ0x5OGdJQ0J0WVhKbmFXNHRiR1ZtZERvZ0pITjBlV3hsTG5OdFlXeHNMbTFoY21kcGJreGxablE3WEc0Z0lDQWdMeThnSUNCdFlYSm5hVzR0Y21sbmFIUTZJQ1J6ZEhsc1pTNXpiV0ZzYkM1dFlYSm5hVzVTYVdkb2REdGNiaUFnSUNBdkx5QjlYRzRnZlZ4dUlpd2lMeXBjYmlBcUlHTnlaV0YwWlMxcFkyOXVMV0oxZEhSdmJpZ3BYRzRnS2x4dUlDb2dRM0psWVhSbGN5QmhJR1JoYm1kbGNpQmlkWFIwYjI0dVhHNGdLaTljYmlCelpYUjFjQzFrWldaaGRXeDBMV1JoYm1kbGNpMWlkWFIwYjI0b0tTQjdYRzRnSUM1eWN5MWtZVzVuWlhJdFluUnVJSHRjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdJQ0IzYVdSMGFEb2dNakl3Y0hnN1hHNGdJQ0FnY0dGa1pHbHVaeTF5YVdkb2REb2dNekJ3ZUR0Y2JpQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklETXdjSGc3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMlV4TVRBeE1EdGNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dSV3hsWTNSeWIyeHBlbVVzSUhOaGJuTXRjMlZ5YVdZN1hHNGdJQ0FnYkdWMGRHVnlMWE53WVdOcGJtYzZJREp3ZUR0Y2JpQWdJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dkWEJ3WlhKallYTmxPMXh1SUNBZ0lHTnZiRzl5T2lCM2FHbDBaVHRjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z016QXdiWE1nWldGelpUdGNiaUFnZlZ4dVhHNGdJQzV5Y3kxa1lXNW5aWEl0WW5SdU9taHZkbVZ5TEZ4dUlDQXVjbk10WkdGdVoyVnlMV0owYmpwMmFYTnBkR1ZrTEZ4dUlDQXVjbk10WkdGdVoyVnlMV0owYmpwMmFYTnBkR1ZrT21odmRtVnlJSHRjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpZV0V3WXpCak8xeHVJQ0FnSUdOdmJHOXlPaUIzYUdsMFpUdGNiaUFnZlZ4dUlIMWNiaUlzSWtCcGJYQnZjblFnSnk0dUwySnlZVzVrTG1sdGNHOXlkQ2M3WEc1Y2JuTmxkSFZ3TFhOc2FXUmxjbk1vSkdOMWMzUnZiVk5sZEhScGJtZHpJRDBnZTMwcElIdGNibHh1WEhRdktseHVJQ0FnS2lCRVpXWmhkV3gwSUhObGRIUnBibWR6T2x4dUlDQWdLaTljYmlBZ0pHUmxabUYxYkhSVFpYUjBhVzVuY3lBOUlIdGNiaUFnSUNCM2FXUjBhRG9nTVRWbGJTeGNiaUFnSUNCb1pXbG5hSFE2SURGbGJTeGNiaUFnSUNCeVlXUnBkWE02SURBdU1qVmxiU3hjYmlBZ0lDQm9hV2RvYkdsbmFIUTZJQ05GTVRFd01UQXNYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dJME5CUTBGRFFTeGNiaUFnSUNCMGFIVnRZa052Ykc5MWNqb2dKR0p5WVc1a1YyaHBkR1VzWEc0Z0lDQWdkR2gxYldKVGFYcGxPaUF4WlcxY2JpQWdmVnh1WEc0Z0lDUnpaWFIwYVc1bmN5QTlJRzFsY21kbEtDUmtaV1poZFd4MFUyVjBkR2x1WjNNc0lDUmpkWE4wYjIxVFpYUjBhVzVuY3lrN1hHNWNiaUFnTHlwY2JpQWdJQ29nUW5KbFlXdHdiMmx1ZENCelpYUjFjRHBjYmlBZ0lDb3ZYRzRnSUdsdWNIVjBXM1I1Y0dVOUozSmhibWRsSjEwZ2UxeHVJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1SUNBZ0lHSnZjbVJsY2pvZ2MyOXNhV1FnTGpWbGJTQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ0lDQndZV1JrYVc1bk9pQXdPMXh1SUNBZ0lIZHBaSFJvT2lBa2MyVjBkR2x1WjNNdWQybGtkR2c3WEc0Z0lDQWdhR1ZwWjJoME9pQWtjMlYwZEdsdVozTXVhR1ZwWjJoMEtqSTdYRzRnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nSkhObGRIUnBibWR6TG5KaFpHbDFjenRjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUIwY21GdWMzQmhjbVZ1ZER0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURGbGJUdGNiaUFnSUNCamRYSnpiM0k2SUhCdmFXNTBaWEk3WEc0Z0lDQWdKaXhjYmlBZ0lDQW1Pam90ZDJWaWEybDBMWE5zYVdSbGNpMXlkVzV1WVdKc1pTMTBjbUZqYXl4Y2JpQWdJQ0FtT2pvdGQyVmlhMmwwTFhOc2FXUmxjaTEwYUhWdFlpQjdYRzRnSUNBZ0lDQXRkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZJRzV2Ym1VN1hHNGdJQ0FnZlZ4dUlDQWdJQ1k2T2kxdGN5MTBjbUZqYXlCN1hHNGdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnSUNBZ0lHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklIUnlZVzV6Y0dGeVpXNTBPMXh1SUNBZ0lDQWdZbTl5WkdWeUxXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNiaUFnSUNBZ0lHTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNiaUFnSUNCOVhHNGdJQ0FnSmpvNkxYZGxZbXRwZEMxemJHbGtaWEl0Y25WdWJtRmliR1V0ZEhKaFkyc2dlMXh1SUNBZ0lDQWdkSEpoWTJzb0pITmxkSFJwYm1kekxtaHBaMmhzYVdkb2RDd2dKSE5sZEhScGJtZHpMbUpoWTJ0bmNtOTFibVFzSUNSelpYUjBhVzVuY3k1M2FXUjBhQ3dnSkhObGRIUnBibWR6TG1obGFXZG9kQzh5S1R0Y2JpQWdJQ0I5WEc0Z0lDQWdKam82TFhkbFltdHBkQzF6Ykdsa1pYSXRkR2gxYldJZ2UxeHVJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dLQ2drYzJWMGRHbHVaM011YUdWcFoyaDBMeklnTFNBa2MyVjBkR2x1WjNNdWRHaDFiV0pUYVhwbEtTOHlLVHRjYmlBZ0lDQWdJSFJvZFcxaUtDUnpaWFIwYVc1bmN5NTBhSFZ0WWtOdmJHOTFjaXdnSkhObGRIUnBibWR6TG5Sb2RXMWlVMmw2WlNrN1hHNGdJQ0FnZlZ4dUlDQWdJQ1k2Wm05amRYTWdlMXh1SUNBZ0lDQWdiM1YwYkdsdVpUb2dibTl1WlR0Y2JpQWdJQ0FnSUdKdmVDMXphR0ZrYjNjNklEQWdNQ0F4Y0hnZ0pITmxkSFJwYm1kekxtaHBaMmhzYVdkb2RGeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lHbHVjSFYwVzNSNWNHVTlKM0poYm1kbEoxMHVjSEp2WjNKbGMzTWdlMXh1SUNBZ0lHTjFjbk52Y2pvZ2FXNXBkR2xoYkR0Y2JpQWdJQ0FtT2pvdGQyVmlhMmwwTFhOc2FXUmxjaTEwYUhWdFlpQjdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4dUlDQWdJSDFjYmlBZ0lDQW1PbVp2WTNWeklIdGNiaUFnSUNBZ0lHOTFkR3hwYm1VNklHNXZibVU3WEc0Z0lDQWdJQ0JpYjNndGMyaGhaRzkzT2lCdWIyNWxPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJR2x1Y0hWMFczUjVjR1U5SjNKaGJtZGxKMTB1WVc1cGJXRjBaV1FnZTF4dUlDQWdJQ1k2T2kxM1pXSnJhWFF0YzJ4cFpHVnlMWEoxYm01aFlteGxMWFJ5WVdOcklIdGNiaUFnSUNBZ0lIUnlZVzV6YVhScGIyNDZJR0poWTJ0bmNtOTFibVF0YzJsNlpTQTBNREJ0Y3lCbFlYTmxMV2x1TzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUdsdWNIVjBXM1I1Y0dVOUozSmhibWRsSjEwdWFXNTBaWEp0WldScFlYUmxJSHRjYmx4dUlDQjlYRzU5WEc1Y2JuUnlZV05yS0NSb2FXZG9iR2xuYUhRc0lDUmlaeXdnSkhkcFpIUm9MQ0FrYUdWcFoyaDBLU0I3WEc0Z0lIZHBaSFJvT2lBa2QybGtkR2c3WEc0Z0lHaGxhV2RvZERvZ0pHaGxhV2RvZER0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ0tFQm9aV2xuYUhRdk1pazdYRzRnSUdKaFkydG5jbTkxYm1RNklHeHBibVZoY2kxbmNtRmthV1Z1ZENna2FHbG5hR3hwWjJoMExDQWthR2xuYUd4cFoyaDBLU0J1YnkxeVpYQmxZWFFnSkdKbk8xeHVJQ0JpWVdOclozSnZkVzVrTFhOcGVtVTZJREFsSURFd01DVTdYRzU5WEc1Y2JuUm9kVzFpS0NSaVp5d2dKSE42SUQwZ01DNDNOV1Z0S1NCN1hHNGdJR0p2Y21SbGNqb2dibTl1WlR0Y2JpQWdkMmxrZEdnNklDUnplanRjYmlBZ2FHVnBaMmgwT2lBa2MzbzdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRFV3SlR0Y2JpQWdZbTk0TFhOb1lXUnZkem9nTUNBd0lDNHhNalZsYlNBak16TXpPMXh1SUNCaVlXTnJaM0p2ZFc1a09pQWtZbWM3WEc1OVhHNGlMQ0pBYVcxd2IzSjBJQ2N1TGk5amIyMXRiMjR2WVc1cGJXRjBhVzl1TG1sdGNHOXlkQ2RjYmx4dWMyVjBkWEF0ZDJsa1oyVjBYMTlrYjNkdUxXRnljbTkzS0NSamRYTjBiMjFUWlhSMGFXNW5jeUE5SUh0OUtTQjdYRzVjZEM4cVhHNGdJQ0FxSUVSbFptRjFiSFFnYzJWMGRHbHVaM002WEc0Z0lDQXFMMXh1WEhRa1pHVm1ZWFZzZEZObGRIUnBibWR6SUQwZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJbWgwZEhCek9pOHZjM1JoZEdsakxuSmxaSE5wWm5RdWFXOHZZWE56WlhSekwybGpiMjV6TDJSdmQyNHRZWEp5YjNjdGQyaHBkR1V0TVM0d0xuTjJaMXdpS1N4Y2JpQWdJQ0IzYVdSMGFEb2dNakJ3ZUN4Y2JpQWdJQ0JvWldsbmFIUTZJRE13Y0hnc1hHNGdJQ0FnY0dGa1pHbHVaem9nTVdWdExGeHVJQ0FnSUc5d1lXTnBkSGs2SURBdU5peGNiaUFnSUNCMGNtRnVjMmwwYVc5dVEzVnlkbVU2SUNSamRYSjJaVkpsWkhOcFpuUXNYRzRnSUNBZ2RISmhibk5wZEdsdmJsUnBiV1U2SUNSMGFXMWxVbVZrYzJsbWRGeHVYSFI5WEc1Y2JseDBKSE5sZEhScGJtZHpJRDBnYldWeVoyVW9KR1JsWm1GMWJIUlRaWFIwYVc1bmN5d2dKR04xYzNSdmJWTmxkSFJwYm1kektUdGNibHh1SUNBdktseHVJQ0FnS2lCQ2NtVmhhM0J2YVc1MElITmxkSFZ3T2x4dUlDQWdLaTljYmlBZ0xtUnZkMjR0WVhKeWIzY2dlMXh1SUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJSGRwWkhSb09pQWtjMlYwZEdsdVozTXVkMmxrZEdnN1hHNGdJQ0FnYUdWcFoyaDBPaUFrYzJWMGRHbHVaM011YUdWcFoyaDBJRHRjYmlBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SUdGMWRHODdYRzRnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJR0YxZEc4N1hHNGdJQ0FnY0dGa1pHbHVaem9nSkhObGRIUnBibWR6TG5CaFpHUnBibWM3WEc0Z0lDQWdabXh2WVhRNklHNXZibVU3WEc0Z0lDQWdZMnhsWVhJNklHNXZibVU3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFwYldGblpUb2dKSE5sZEhScGJtZHpXeWRpWVdOclozSnZkVzVrTFdsdFlXZGxKMTA3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nTlRBbElEVXdKVHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklDUnpaWFIwYVc1bmN5NW9aV2xuYUhRZ0pITmxkSFJwYm1kekxuZHBaSFJvTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0Y21Wd1pXRjBPaUJ1YnkxeVpYQmxZWFE3WEc0Z0lDQWdiM0JoWTJsMGVUb2dKSE5sZEhScGJtZHpMbTl3WVdOcGRIazdYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2RISmhibk53WVhKbGJuUTdYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2diM0JoWTJsMGVTQWtjMlYwZEdsdVozTXVkSEpoYm5OcGRHbHZia04xY25abElDUnpaWFIwYVc1bmN5NTBjbUZ1YzJsMGFXOXVWR2x0WlR0Y2JpQWdmVnh1WEc0Z0lDNWtiM2R1TFdGeWNtOTNPbWh2ZG1WeUlIdGNiaUFnSUNBZ0lHOXdZV05wZEhrNklERTdYRzRnSUgxY2JuMWNiaUlzSW5ObGRIVndMWE4wZVd4bExYTjNhWFJqYUdWeUtDUmpkWE4wYjIxVFpYUjBhVzVuY3lBOUlIdDlLU0I3WEc1Y2RDOHFYRzRnSUNBcUlFUmxabUYxYkhRZ2MyVjBkR2x1WjNNNlhHNGdJQ0FxTDF4dVhIUWtaR1ZtWVhWc2RGTmxkSFJwYm1keklEMGdlMXh1WEhSY2RHSmhZMnRuY205MWJtUTZJSEpuWW1Fb01Dd3dMREFzTUM0NUtWeHVYSFI5WEc1Y2JseDBKSE5sZEhScGJtZHpJRDBnYldWeVoyVW9KR1JsWm1GMWJIUlRaWFIwYVc1bmN5d2dKR04xYzNSdmJWTmxkSFJwYm1kektUdGNibHh1SUNBdktseHVJQ0FnS2lCQ2NtVmhhM0J2YVc1MElITmxkSFZ3T2x4dUlDQWdLaTljYmx4MExuTjBlV3hsTFhOM2FYUmphR1Z5SUh0Y2JseDBJQ0I2TFdsdVpHVjRPaUF4TURBd08xeHVYSFFnSUdScGMzQnNZWGs2SUdac1pYZzdYRzVjZENBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCbWJHVjRMV1Z1WkR0Y2JseHVYSFFnSUhCdmMybDBhVzl1T2lCbWFYaGxaRHRjYmx4MElDQnlhV2RvZERvZ01EdGNibHgwSUNCc1pXWjBPaUF3TzF4dVhIUWdJR0p2ZEhSdmJUb2dNRHRjYmx4dVhIUWdJSEJoWkdScGJtYzZJREF1T0dWdE8xeHVYSFFnSUdKaFkydG5jbTkxYm1RNklDUnpaWFIwYVc1bmN5NWlZV05yWjNKdmRXNWtYRzVjZEgxY2JseHVYSFF1YzNSNWJHVXRjM2RwZEdOb1pYSWdZblYwZEc5dUlIdGNibHgwSUNCdFlYSm5hVzR0Y21sbmFIUTZJREZsYlR0Y2JseDBmVnh1ZlZ4dUlsMHNJbk52ZFhKalpWSnZiM1FpT2lJdmMyOTFjbU5sTHlKOSAqL1xuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjMuMC4zIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyBhbmQgSUUgdGV4dCBzaXplIGFkanVzdCBhZnRlciBkZXZpY2Ugb3JpZW50YXRpb24gY2hhbmdlLFxuICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSBvZiBmb2N1c2VkIGVsZW1lbnRzIHdoZW4gdGhleSBhcmUgYWxzbyBpbiBhblxuICogYWN0aXZlL2hvdmVyIHN0YXRlLlxuICovXG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbiAgbWFyZ2luOiAwOyAvKiAzICovXG59XG5cbi8qKlxuICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cblxuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cbiAqIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOC85LzEwLzExLCBhbmQgT3BlcmEuXG4gKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiAqICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiAqICAgIGBpbnB1dGAgYW5kIG90aGVycy5cbiAqL1xuXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cblxuaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xufVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cblxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm9yZGVyOiAwOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDtcbn1cblxuLypcbiAgICogRGVmYXVsdCBzZXR0aW5nczpcbiAgICovXG4vKlxuICAgKiBCcmVha3BvaW50IHNldHVwOlxuICAgKi9cbi5oZXJvIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1pbi1oZWlnaHQ6IDUwMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmhlcm8tc3RpY2t5LWhlYWRlcixcbi5oZXJvX19oZWFkZXIge1xuICB6LWluZGV4OiAxMDA7XG4gIHBhZGRpbmc6IDFlbTtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuLmhlcm8tc3RpY2t5LWhlYWRlciBoMyxcbi5oZXJvX19oZWFkZXIgaDMge1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xuICBvcGFjaXR5OiAwLjc7XG4gIG1hcmdpbjogMDtcbn1cbi5oZXJvLXN0aWNreS1oZWFkZXIge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cbi5oZXJvLXN0aWNreS1oZWFkZXIgPiAqIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuLmhlcm8uLWVmZmVjdC1kYXJrZW46OmJlZm9yZSxcbi5oZXJvLi1lZmZlY3QtbGlnaHRlbjo6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDA7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICBvcGFjaXR5OiAwLjI7XG59XG4uaGVyby4tZWZmZWN0LWRhcmtlbjo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbn1cbi5oZXJvLi1lZmZlY3QtbGlnaHRlbjo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cbi5oZXJvX19oZWFkZXIge1xuICAtbXMtZmxleC1pdGVtLWFsaWduOiBzdGFydDtcbiAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbn1cbi5oZXJvIGNvZGUge1xuICBmb250LXNpemU6IDNlbTtcbn1cbi5oZXJvIHAge1xuICBmb250LXNpemU6IDEuNWVtO1xufVxuLmhlcm9fX2NvbnRhaW5lciB7XG4gIHotaW5kZXg6IDk5O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tcy1mbGV4OiAxIDAgYXV0bztcbiAgZmxleDogMSAwIGF1dG87XG4gIGNvbG9yOiAjZTBlMGUwO1xufVxuLmNvbnRlbnQge1xuICBwYWRkaW5nOiAxZW07XG59XG4uY29udGVudC0tY29sbGFwc2Uge1xuICBtaW4taGVpZ2h0OiBpbml0aWFsO1xufVxuLmNvbnRlbnRfX2NvbnRhaW5lcixcbi5jb250ZW50X19jb250YWluZXItLWV4cGFuZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMGUwZTA7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbn1cbi5jb250ZW50X19jb250YWluZXItLWV4cGFuZCB7XG4gIG1pbi1oZWlnaHQ6IDQ5NnB4O1xufVxuLyogaVBob25lIFtwb3J0cmFpdCArIGxhbmRzY2FwZV0gKi9cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuaGVyby1zdGlja3ktaGVhZGVyIHtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICB9XG4gIC5oZXJvLXN0aWNreS1oZWFkZXIgPiAqIHtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICB9XG59XG4vKiBpUGFkIFtwb3J0cmFpdCArIGxhbmRzY2FwZV0gKi9cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSkgYW5kIChtYXgtd2lkdGg6IDY0ZW0pIHtcbiAgLmhlcm8ge1xuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsO1xuICB9XG4gIC5oZXJvLXN0aWNreS1oZWFkZXIge1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDEwMCU7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XG4gIH1cbn1cblxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltNXZjbTFoYkdsNlpTNWpjM01pTENKemRIbHNaWE12YVc1a1pYZ3VhVzF3YjNKMExuTjBlV3dpTENKMWFTMXljeTFvWlhKdkxtTnpjeUlzSWk0dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY21Wa2MybG1kQzkxYVMxeWN5MWpiM0psTDNOeVl5OXpkSGxzWlhNdmJHbGlMM0oxY0hSMWNtVXVhVzF3YjNKMExuTjBlV3dpWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc05FVkJRVUU3TzBGQlJVRTdPenM3UjBGSlFUczdRVUZGUVR0RlFVTkJMSGRDUVVGQkxFTkJRVUVzVDBGQlFUdEZRVU5CTERKQ1FVRkJMRU5CUVVFc1QwRkJRVHRGUVVOQkxDdENRVUZCTEVOQlFVRXNUMEZCUVR0RFFVTkJPenRCUVVWQk96dEhRVVZCT3p0QlFVVkJPMFZCUTBFc1ZVRkJRVHREUVVOQk96dEJRVVZCTzJkR1FVTkJPenRCUVVWQk96czdPenRIUVV0Qk96dEJRVVZCT3pzN096czdPenM3T3pzN08wVkJZVUVzWlVGQlFUdERRVU5CT3p0QlFVVkJPenM3UjBGSFFUczdRVUZGUVRzN096dEZRVWxCTEhOQ1FVRkJMRU5CUVVFc1QwRkJRVHRGUVVOQkxIbENRVUZCTEVOQlFVRXNUMEZCUVR0RFFVTkJPenRCUVVWQk96czdSMEZIUVRzN1FVRkZRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeFZRVUZCTzBOQlEwRTdPMEZCUlVFN096dEhRVWRCT3p0QlFVVkJPenRGUVVWQkxHTkJRVUU3UTBGRFFUczdRVUZGUVR0blJrRkRRVHM3UVVGRlFUczdSMEZGUVRzN1FVRkZRVHRGUVVOQkxEaENRVUZCTzBOQlEwRTdPMEZCUlVFN096dEhRVWRCT3p0QlFVVkJPenRGUVVWQkxGZEJRVUU3UTBGRFFUczdRVUZGUVR0blJrRkRRVHM3UVVGRlFUczdSMEZGUVRzN1FVRkZRVHRGUVVOQkxEQkNRVUZCTzBOQlEwRTdPMEZCUlVFN08wZEJSVUU3TzBGQlJVRTdPMFZCUlVFc2EwSkJRVUU3UTBGRFFUczdRVUZGUVRzN1IwRkZRVHM3UVVGRlFUdEZRVU5CTEcxQ1FVRkJPME5CUTBFN08wRkJSVUU3T3p0SFFVZEJPenRCUVVWQk8wVkJRMEVzWlVGQlFUdEZRVU5CTEdsQ1FVRkJPME5CUTBFN08wRkJSVUU3TzBkQlJVRTdPMEZCUlVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEZsQlFVRTdRMEZEUVRzN1FVRkZRVHM3UjBGRlFUczdRVUZGUVR0RlFVTkJMR1ZCUVVFN1EwRkRRVHM3UVVGRlFUczdSMEZGUVRzN1FVRkZRVHM3UlVGRlFTeGxRVUZCTzBWQlEwRXNaVUZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzZVVKQlFVRTdRMEZEUVRzN1FVRkZRVHRGUVVOQkxGbEJRVUU3UTBGRFFUczdRVUZGUVR0RlFVTkJMR2RDUVVGQk8wTkJRMEU3TzBGQlJVRTdaMFpCUTBFN08wRkJSVUU3TzBkQlJVRTdPMEZCUlVFN1JVRkRRU3hWUVVGQk8wTkJRMEU3TzBGQlJVRTdPMGRCUlVFN08wRkJSVUU3UlVGRFFTeHBRa0ZCUVR0RFFVTkJPenRCUVVWQk8yZEdRVU5CT3p0QlFVVkJPenRIUVVWQk96dEJRVVZCTzBWQlEwRXNhVUpCUVVFN1EwRkRRVHM3UVVGRlFUczdSMEZGUVRzN1FVRkZRVHRGUVVOQkxIZENRVUZCTzBWQlEwRXNWVUZCUVR0RFFVTkJPenRCUVVWQk96dEhRVVZCT3p0QlFVVkJPMFZCUTBFc1pVRkJRVHREUVVOQk96dEJRVVZCT3p0SFFVVkJPenRCUVVWQk96czdPMFZCU1VFc2EwTkJRVUU3UlVGRFFTeGxRVUZCTzBOQlEwRTdPMEZCUlVFN1owWkJRMEU3TzBGQlJVRTdPenRIUVVkQk96dEJRVVZCT3pzN096dEhRVXRCT3p0QlFVVkJPenM3T3p0RlFVdEJMR1ZCUVVFc1EwRkJRU3hQUVVGQk8wVkJRMEVzWTBGQlFTeERRVUZCTEU5QlFVRTdSVUZEUVN4VlFVRkJMRU5CUVVFc1QwRkJRVHREUVVOQk96dEJRVVZCT3p0SFFVVkJPenRCUVVWQk8wVkJRMEVzYTBKQlFVRTdRMEZEUVRzN1FVRkZRVHM3T3pzN1IwRkxRVHM3UVVGRlFUczdSVUZGUVN4eFFrRkJRVHREUVVOQk96dEJRVVZCT3pzN096czdSMEZOUVRzN1FVRkZRVHM3T3p0RlFVbEJMREpDUVVGQkxFTkJRVUVzVDBGQlFUdEZRVU5CTEdkQ1FVRkJMRU5CUVVFc1QwRkJRVHREUVVOQk96dEJRVVZCT3p0SFFVVkJPenRCUVVWQk96dEZRVVZCTEdkQ1FVRkJPME5CUTBFN08wRkJSVUU3TzBkQlJVRTdPMEZCUlVFN08wVkJSVUVzVlVGQlFUdEZRVU5CTEZkQlFVRTdRMEZEUVRzN1FVRkZRVHM3TzBkQlIwRTdPMEZCUlVFN1JVRkRRU3h2UWtGQlFUdERRVU5CT3p0QlFVVkJPenM3T3pzN1IwRk5RVHM3UVVGRlFUczdSVUZGUVN4MVFrRkJRU3hEUVVGQkxFOUJRVUU3UlVGRFFTeFhRVUZCTEVOQlFVRXNUMEZCUVR0RFFVTkJPenRCUVVWQk96czdPMGRCU1VFN08wRkJSVUU3TzBWQlJVRXNZVUZCUVR0RFFVTkJPenRCUVVWQk96czdSMEZIUVRzN1FVRkZRVHRGUVVOQkxEaENRVUZCTEVOQlFVRXNUMEZCUVR0RlFVTkJMSGRDUVVGQkxFTkJRVUVzVDBGQlFUdERRVU5CT3p0QlFVVkJPenM3TzBkQlNVRTdPMEZCUlVFN08wVkJSVUVzZVVKQlFVRTdRMEZEUVRzN1FVRkZRVHM3UjBGRlFUczdRVUZGUVR0RlFVTkJMREJDUVVGQk8wVkJRMEVzWTBGQlFUdEZRVU5CTEN0Q1FVRkJPME5CUTBFN08wRkJSVUU3T3p0SFFVZEJPenRCUVVWQk8wVkJRMEVzVlVGQlFTeERRVUZCTEU5QlFVRTdSVUZEUVN4WFFVRkJMRU5CUVVFc1QwRkJRVHREUVVOQk96dEJRVVZCT3p0SFFVVkJPenRCUVVWQk8wVkJRMEVzWlVGQlFUdERRVU5CT3p0QlFVVkJPenM3UjBGSFFUczdRVUZGUVR0RlFVTkJMR3RDUVVGQk8wTkJRMEU3TzBGQlJVRTdaMFpCUTBFN08wRkJSVUU3TzBkQlJVRTdPMEZCUlVFN1JVRkRRU3d3UWtGQlFUdEZRVU5CTEd0Q1FVRkJPME5CUTBFN08wRkJSVUU3TzBWQlJVRXNWMEZCUVR0RFFVTkJPenRCUTJ4aFF6czdTME56WVVrN1FVUjRXa2c3TzB0RE1scEhPMEZFZUZwS08wVkJRME1zYlVKQlFVRTdSVUZEUVN4WFFVRkJPMFZCUTBFc2NVSkJRVUU3UlVGQlFTeGpRVUZCTzBWQlEwRXNNa0pCUVVFN1JVRkJRU3gxUWtGQlFUdEZRVU5CTEhOQ1FVRkJPMFZCUVVFc2QwSkJRVUU3UlVGRFFTeDFRa0ZCUVR0RlFVRkJMRzlDUVVGQk8wVkJSVUVzYTBKQlFVRTdSVUZEUVN4WlFVRkJPMFZCUlVFc05rSkJRVUU3UlVGRFFTdzJRa0ZCUVR0RlFVTkJMSFZDUVVGQk8wVkJSVUVzYlVKQlFVRTdRME4xV2tRN1FVUndXa0U3TzBWQlJVTXNZVUZCUVR0RlFVTkJMR0ZCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzT0VKQlFVRTdRME56V2tRN1FVUndXa003TzBWQlEwTXNiMEpCUVVFN1JVRkRRU3hoUVVGQk8wVkJRMEVzVlVGQlFUdERRM1ZhUmp0QlJHNWFRenRGUVVOQkxHMUNRVUZCTzBWQlJVRXNaMEpCUVVFN1JVRkRRU3hQUVVGQk8wVkJRMEVzVVVGQlFUdEZRVU5CTEZsQlFVRTdSVUZGUVN3MlFrRkJRVHRGUVVOQkxEWkNRVUZCTzBWQlEwRXNkVUpCUVVFN1EwTnRXa1E3UVVSb1drRTdSVUZEUXl4dFFrRkJRVHREUTJ0YVJEdEJSQzlaUVRzN1JVRkhReXh0UWtGQlFUdEZRVU5CTEU5QlFVRTdSVUZEUVN4VFFVRkJPMFZCUTBFc1ZVRkJRVHRGUVVOQkxGRkJRVUU3UlVGRFFTeFhRVUZCTzBWQlEwRXNZVUZCUVR0RlFVTkJMR0ZCUVVFN1EwTm5Xa1E3UVVRM1dVRTdSVUZEUXl4MVFrRkJRVHREUXl0WlJEdEJSRFZaUVR0RlFVTkRMSFZDUVVGQk8wTkRPRmxFTzBGRU0xbEJPMFZCUTBNc01rSkJRVUU3UlVGQlFTeDFRa0ZCUVR0RFF6WlpSRHRCUkRGWlFUdEZRVU5ETEdWQlFVRTdRME0wV1VRN1FVUjZXVUU3UlVGRFF5eHBRa0ZCUVR0RFF6SlpSRHRCUkhoWlFUdEZRVU5ETEZsQlFVRTdSVUZEUVN4eFFrRkJRVHRGUVVGQkxHTkJRVUU3UlVGRFFTd3lRa0ZCUVR0RlFVRkJMSFZDUVVGQk8wVkJRMEVzYzBKQlFVRTdSVUZCUVN4M1FrRkJRVHRGUVVWQkxHMUNRVUZCTzBWQlFVRXNaVUZCUVR0RlFVVkJMR1ZCUVVFN1EwTjNXVVE3UVVSeVdVRTdSVUZEUXl4aFFVRkJPME5EZFZsRU8wRkVjRmxCTzBWQlEwVXNiMEpCUVVFN1EwTnpXVVk3UVVSdVdVRTdPMFZCUlVNc01FSkJRVUU3UlVGRFFTeHRRa0ZCUVR0RFEzRlpSRHRCUkd4WlFUdEZRVU5ETEd0Q1FVRkJPME5EYjFsRU8wRkVhbGxCTEcxRFFVRkJPMEZGV1ZVN1JVWldWRHRKUVVORExHOUNRVUZCTzBkRGJWbEJPMFZFYUZsRU8wbEJRME1zYjBKQlFVRTdSME5yV1VFN1EwRkRSanRCUkM5WVFTeHBRMEZCUVR0QlJVTlZPMFZHUTFRN1NVRkRSeXc0UWtGQlFUdEhRMmxaUmp0RlJEbFlSRHRKUVVORExHOUNRVUZCTzBsQlEwRXNPRUpCUVVFN1NVRkRSU3c0UWtGQlFUdEhRMmRaUmp0RFFVTkdJaXdpWm1sc1pTSTZJblZwTFhKekxXaGxjbTh1WTNOeklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lMeW9oSUc1dmNtMWhiR2w2WlM1amMzTWdkak11TUM0eklId2dUVWxVSUV4cFkyVnVjMlVnZkNCbmFYUm9kV0l1WTI5dEwyNWxZMjlzWVhNdmJtOXliV0ZzYVhwbExtTnpjeUFxTDF4dVhHNHZLaXBjYmlBcUlERXVJRk5sZENCa1pXWmhkV3gwSUdadmJuUWdabUZ0YVd4NUlIUnZJSE5oYm5NdGMyVnlhV1l1WEc0Z0tpQXlMaUJRY21WMlpXNTBJR2xQVXlCaGJtUWdTVVVnZEdWNGRDQnphWHBsSUdGa2FuVnpkQ0JoWm5SbGNpQmtaWFpwWTJVZ2IzSnBaVzUwWVhScGIyNGdZMmhoYm1kbExGeHVJQ29nSUNBZ2QybDBhRzkxZENCa2FYTmhZbXhwYm1jZ2RYTmxjaUI2YjI5dExseHVJQ292WEc1Y2JtaDBiV3dnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nYzJGdWN5MXpaWEpwWmpzZ0x5b2dNU0FxTDF4dUlDQXRiWE10ZEdWNGRDMXphWHBsTFdGa2FuVnpkRG9nTVRBd0pUc2dMeW9nTWlBcUwxeHVJQ0F0ZDJWaWEybDBMWFJsZUhRdGMybDZaUzFoWkdwMWMzUTZJREV3TUNVN0lDOHFJRElnS2k5Y2JuMWNibHh1THlvcVhHNGdLaUJTWlcxdmRtVWdaR1ZtWVhWc2RDQnRZWEpuYVc0dVhHNGdLaTljYmx4dVltOWtlU0I3WEc0Z0lHMWhjbWRwYmpvZ01EdGNibjFjYmx4dUx5b2dTRlJOVERVZ1pHbHpjR3hoZVNCa1pXWnBibWwwYVc5dWMxeHVJQ0FnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1THlvcVhHNGdLaUJEYjNKeVpXTjBJR0JpYkc5amEyQWdaR2x6Y0d4aGVTQnViM1FnWkdWbWFXNWxaQ0JtYjNJZ1lXNTVJRWhVVFV3MUlHVnNaVzFsYm5RZ2FXNGdTVVVnT0M4NUxseHVJQ29nUTI5eWNtVmpkQ0JnWW14dlkydGdJR1JwYzNCc1lYa2dibTkwSUdSbFptbHVaV1FnWm05eUlHQmtaWFJoYVd4ellDQnZjaUJnYzNWdGJXRnllV0FnYVc0Z1NVVWdNVEF2TVRGY2JpQXFJR0Z1WkNCR2FYSmxabTk0TGx4dUlDb2dRMjl5Y21WamRDQmdZbXh2WTJ0Z0lHUnBjM0JzWVhrZ2JtOTBJR1JsWm1sdVpXUWdabTl5SUdCdFlXbHVZQ0JwYmlCSlJTQXhNUzVjYmlBcUwxeHVYRzVoY25ScFkyeGxMRnh1WVhOcFpHVXNYRzVrWlhSaGFXeHpMRnh1Wm1sblkyRndkR2x2Yml4Y2JtWnBaM1Z5WlN4Y2JtWnZiM1JsY2l4Y2JtaGxZV1JsY2l4Y2JtaG5jbTkxY0N4Y2JtMWhhVzRzWEc1dFpXNTFMRnh1Ym1GMkxGeHVjMlZqZEdsdmJpeGNibk4xYlcxaGNua2dlMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYm4xY2JseHVMeW9xWEc0Z0tpQXhMaUJEYjNKeVpXTjBJR0JwYm14cGJtVXRZbXh2WTJ0Z0lHUnBjM0JzWVhrZ2JtOTBJR1JsWm1sdVpXUWdhVzRnU1VVZ09DODVMbHh1SUNvZ01pNGdUbTl5YldGc2FYcGxJSFpsY25ScFkyRnNJR0ZzYVdkdWJXVnVkQ0J2WmlCZ2NISnZaM0psYzNOZ0lHbHVJRU5vY205dFpTd2dSbWx5WldadmVDd2dZVzVrSUU5d1pYSmhMbHh1SUNvdlhHNWNibUYxWkdsdkxGeHVZMkZ1ZG1GekxGeHVjSEp2WjNKbGMzTXNYRzUyYVdSbGJ5QjdYRzRnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6c2dMeW9nTVNBcUwxeHVJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2dZbUZ6Wld4cGJtVTdJQzhxSURJZ0tpOWNibjFjYmx4dUx5b3FYRzRnS2lCUWNtVjJaVzUwSUcxdlpHVnliaUJpY205M2MyVnljeUJtY205dElHUnBjM0JzWVhscGJtY2dZR0YxWkdsdllDQjNhWFJvYjNWMElHTnZiblJ5YjJ4ekxseHVJQ29nVW1WdGIzWmxJR1Y0WTJWemN5Qm9aV2xuYUhRZ2FXNGdhVTlUSURVZ1pHVjJhV05sY3k1Y2JpQXFMMXh1WEc1aGRXUnBienB1YjNRb1cyTnZiblJ5YjJ4elhTa2dlMXh1SUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNCb1pXbG5hSFE2SURBN1hHNTlYRzVjYmk4cUtseHVJQ29nUVdSa2NtVnpjeUJnVzJocFpHUmxibDFnSUhOMGVXeHBibWNnYm05MElIQnlaWE5sYm5RZ2FXNGdTVVVnT0M4NUx6RXdMbHh1SUNvZ1NHbGtaU0IwYUdVZ1lIUmxiWEJzWVhSbFlDQmxiR1Z0Wlc1MElHbHVJRWxGSURndk9TOHhNQzh4TVN3Z1UyRm1ZWEpwTENCaGJtUWdSbWx5WldadmVDQThJREl5TGx4dUlDb3ZYRzVjYmx0b2FXUmtaVzVkTEZ4dWRHVnRjR3hoZEdVZ2UxeHVJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVmVnh1WEc0dktpQk1hVzVyYzF4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVMeW9xWEc0Z0tpQlNaVzF2ZG1VZ2RHaGxJR2R5WVhrZ1ltRmphMmR5YjNWdVpDQmpiMnh2Y2lCbWNtOXRJR0ZqZEdsMlpTQnNhVzVyY3lCcGJpQkpSU0F4TUM1Y2JpQXFMMXh1WEc1aElIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nZEhKaGJuTndZWEpsYm5RN1hHNTlYRzVjYmk4cUtseHVJQ29nU1cxd2NtOTJaU0J5WldGa1lXSnBiR2wwZVNCdlppQm1iMk4xYzJWa0lHVnNaVzFsYm5SeklIZG9aVzRnZEdobGVTQmhjbVVnWVd4emJ5QnBiaUJoYmx4dUlDb2dZV04wYVhabEwyaHZkbVZ5SUhOMFlYUmxMbHh1SUNvdlhHNWNibUU2WVdOMGFYWmxMRnh1WVRwb2IzWmxjaUI3WEc0Z0lHOTFkR3hwYm1VNklEQTdYRzU5WEc1Y2JpOHFJRlJsZUhRdGJHVjJaV3dnYzJWdFlXNTBhV056WEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHZLaXBjYmlBcUlFRmtaSEpsYzNNZ2MzUjViR2x1WnlCdWIzUWdjSEpsYzJWdWRDQnBiaUJKUlNBNEx6a3ZNVEF2TVRFc0lGTmhabUZ5YVN3Z1lXNWtJRU5vY205dFpTNWNiaUFxTDF4dVhHNWhZbUp5VzNScGRHeGxYU0I3WEc0Z0lHSnZjbVJsY2kxaWIzUjBiMjA2SURGd2VDQmtiM1IwWldRN1hHNTlYRzVjYmk4cUtseHVJQ29nUVdSa2NtVnpjeUJ6ZEhsc1pTQnpaWFFnZEc4Z1lHSnZiR1JsY21BZ2FXNGdSbWx5WldadmVDQTBLeXdnVTJGbVlYSnBMQ0JoYm1RZ1EyaHliMjFsTGx4dUlDb3ZYRzVjYm1Jc1hHNXpkSEp2Ym1jZ2UxeHVJQ0JtYjI1MExYZGxhV2RvZERvZ1ltOXNaRHRjYm4xY2JseHVMeW9xWEc0Z0tpQkJaR1J5WlhOeklITjBlV3hwYm1jZ2JtOTBJSEJ5WlhObGJuUWdhVzRnVTJGbVlYSnBJR0Z1WkNCRGFISnZiV1V1WEc0Z0tpOWNibHh1WkdadUlIdGNiaUFnWm05dWRDMXpkSGxzWlRvZ2FYUmhiR2xqTzF4dWZWeHVYRzR2S2lwY2JpQXFJRUZrWkhKbGMzTWdkbUZ5YVdGaWJHVWdZR2d4WUNCbWIyNTBMWE5wZW1VZ1lXNWtJRzFoY21kcGJpQjNhWFJvYVc0Z1lITmxZM1JwYjI1Z0lHRnVaQ0JnWVhKMGFXTnNaV0JjYmlBcUlHTnZiblJsZUhSeklHbHVJRVpwY21WbWIzZ2dOQ3NzSUZOaFptRnlhU3dnWVc1a0lFTm9jbTl0WlM1Y2JpQXFMMXh1WEc1b01TQjdYRzRnSUdadmJuUXRjMmw2WlRvZ01tVnRPMXh1SUNCdFlYSm5hVzQ2SURBdU5qZGxiU0F3TzF4dWZWeHVYRzR2S2lwY2JpQXFJRUZrWkhKbGMzTWdjM1I1YkdsdVp5QnViM1FnY0hKbGMyVnVkQ0JwYmlCSlJTQTRMemt1WEc0Z0tpOWNibHh1YldGeWF5QjdYRzRnSUdKaFkydG5jbTkxYm1RNklDTm1aakE3WEc0Z0lHTnZiRzl5T2lBak1EQXdPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFRmtaSEpsYzNNZ2FXNWpiMjV6YVhOMFpXNTBJR0Z1WkNCMllYSnBZV0pzWlNCbWIyNTBJSE5wZW1VZ2FXNGdZV3hzSUdKeWIzZHpaWEp6TGx4dUlDb3ZYRzVjYm5OdFlXeHNJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQTRNQ1U3WEc1OVhHNWNiaThxS2x4dUlDb2dVSEpsZG1WdWRDQmdjM1ZpWUNCaGJtUWdZSE4xY0dBZ1lXWm1aV04wYVc1bklHQnNhVzVsTFdobGFXZG9kR0FnYVc0Z1lXeHNJR0p5YjNkelpYSnpMbHh1SUNvdlhHNWNibk4xWWl4Y2JuTjFjQ0I3WEc0Z0lHWnZiblF0YzJsNlpUb2dOelVsTzF4dUlDQnNhVzVsTFdobGFXZG9kRG9nTUR0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNCMlpYSjBhV05oYkMxaGJHbG5iam9nWW1GelpXeHBibVU3WEc1OVhHNWNibk4xY0NCN1hHNGdJSFJ2Y0RvZ0xUQXVOV1Z0TzF4dWZWeHVYRzV6ZFdJZ2UxeHVJQ0JpYjNSMGIyMDZJQzB3TGpJMVpXMDdYRzU5WEc1Y2JpOHFJRVZ0WW1Wa1pHVmtJR052Ym5SbGJuUmNiaUFnSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk4cUtseHVJQ29nVW1WdGIzWmxJR0p2Y21SbGNpQjNhR1Z1SUdsdWMybGtaU0JnWVdBZ1pXeGxiV1Z1ZENCcGJpQkpSU0E0THprdk1UQXVYRzRnS2k5Y2JseHVhVzFuSUh0Y2JpQWdZbTl5WkdWeU9pQXdPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFTnZjbkpsWTNRZ2IzWmxjbVpzYjNjZ2JtOTBJR2hwWkdSbGJpQnBiaUJKUlNBNUx6RXdMekV4TGx4dUlDb3ZYRzVjYm5OMlp6cHViM1FvT25KdmIzUXBJSHRjYmlBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmp0Y2JuMWNibHh1THlvZ1IzSnZkWEJwYm1jZ1kyOXVkR1Z1ZEZ4dUlDQWdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVMeW9xWEc0Z0tpQkJaR1J5WlhOeklHMWhjbWRwYmlCdWIzUWdjSEpsYzJWdWRDQnBiaUJKUlNBNEx6a2dZVzVrSUZOaFptRnlhUzVjYmlBcUwxeHVYRzVtYVdkMWNtVWdlMXh1SUNCdFlYSm5hVzQ2SURGbGJTQTBNSEI0TzF4dWZWeHVYRzR2S2lwY2JpQXFJRUZrWkhKbGMzTWdaR2xtWm1WeVpXNWpaWE1nWW1WMGQyVmxiaUJHYVhKbFptOTRJR0Z1WkNCdmRHaGxjaUJpY205M2MyVnljeTVjYmlBcUwxeHVYRzVvY2lCN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdOdmJuUmxiblF0WW05NE8xeHVJQ0JvWldsbmFIUTZJREE3WEc1OVhHNWNiaThxS2x4dUlDb2dRMjl1ZEdGcGJpQnZkbVZ5Wm14dmR5QnBiaUJoYkd3Z1luSnZkM05sY25NdVhHNGdLaTljYmx4dWNISmxJSHRjYmlBZ2IzWmxjbVpzYjNjNklHRjFkRzg3WEc1OVhHNWNiaThxS2x4dUlDb2dRV1JrY21WemN5QnZaR1FnWUdWdFlDMTFibWwwSUdadmJuUWdjMmw2WlNCeVpXNWtaWEpwYm1jZ2FXNGdZV3hzSUdKeWIzZHpaWEp6TGx4dUlDb3ZYRzVjYm1OdlpHVXNYRzVyWW1Rc1hHNXdjbVVzWEc1ellXMXdJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJRzF2Ym05emNHRmpaU3dnYlc5dWIzTndZV05sTzF4dUlDQm1iMjUwTFhOcGVtVTZJREZsYlR0Y2JuMWNibHh1THlvZ1JtOXliWE5jYmlBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JpOHFLbHh1SUNvZ1MyNXZkMjRnYkdsdGFYUmhkR2x2YmpvZ1lua2daR1ZtWVhWc2RDd2dRMmh5YjIxbElHRnVaQ0JUWVdaaGNta2diMjRnVDFNZ1dDQmhiR3h2ZHlCMlpYSjVJR3hwYldsMFpXUmNiaUFxSUhOMGVXeHBibWNnYjJZZ1lITmxiR1ZqZEdBc0lIVnViR1Z6Y3lCaElHQmliM0prWlhKZ0lIQnliM0JsY25SNUlHbHpJSE5sZEM1Y2JpQXFMMXh1WEc0dktpcGNiaUFxSURFdUlFTnZjbkpsWTNRZ1kyOXNiM0lnYm05MElHSmxhVzVuSUdsdWFHVnlhWFJsWkM1Y2JpQXFJQ0FnSUV0dWIzZHVJR2x6YzNWbE9pQmhabVpsWTNSeklHTnZiRzl5SUc5bUlHUnBjMkZpYkdWa0lHVnNaVzFsYm5SekxseHVJQ29nTWk0Z1EyOXljbVZqZENCbWIyNTBJSEJ5YjNCbGNuUnBaWE1nYm05MElHSmxhVzVuSUdsdWFHVnlhWFJsWkM1Y2JpQXFJRE11SUVGa1pISmxjM01nYldGeVoybHVjeUJ6WlhRZ1pHbG1abVZ5Wlc1MGJIa2dhVzRnUm1seVpXWnZlQ0EwS3l3Z1UyRm1ZWEpwTENCaGJtUWdRMmh5YjIxbExseHVJQ292WEc1Y2JtSjFkSFJ2Yml4Y2JtbHVjSFYwTEZ4dWIzQjBaM0p2ZFhBc1hHNXpaV3hsWTNRc1hHNTBaWGgwWVhKbFlTQjdYRzRnSUdOdmJHOXlPaUJwYm1obGNtbDBPeUF2S2lBeElDb3ZYRzRnSUdadmJuUTZJR2x1YUdWeWFYUTdJQzhxSURJZ0tpOWNiaUFnYldGeVoybHVPaUF3T3lBdktpQXpJQ292WEc1OVhHNWNiaThxS2x4dUlDb2dRV1JrY21WemN5QmdiM1psY21ac2IzZGdJSE5sZENCMGJ5QmdhR2xrWkdWdVlDQnBiaUJKUlNBNEx6a3ZNVEF2TVRFdVhHNGdLaTljYmx4dVluVjBkRzl1SUh0Y2JpQWdiM1psY21ac2IzYzZJSFpwYzJsaWJHVTdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1FXUmtjbVZ6Y3lCcGJtTnZibk5wYzNSbGJuUWdZSFJsZUhRdGRISmhibk5tYjNKdFlDQnBibWhsY21sMFlXNWpaU0JtYjNJZ1lHSjFkSFJ2Ym1BZ1lXNWtJR0J6Wld4bFkzUmdMbHh1SUNvZ1FXeHNJRzkwYUdWeUlHWnZjbTBnWTI5dWRISnZiQ0JsYkdWdFpXNTBjeUJrYnlCdWIzUWdhVzVvWlhKcGRDQmdkR1Y0ZEMxMGNtRnVjMlp2Y20xZ0lIWmhiSFZsY3k1Y2JpQXFJRU52Y25KbFkzUWdZR0oxZEhSdmJtQWdjM1I1YkdVZ2FXNW9aWEpwZEdGdVkyVWdhVzRnUm1seVpXWnZlQ3dnU1VVZ09DODVMekV3THpFeExDQmhibVFnVDNCbGNtRXVYRzRnS2lCRGIzSnlaV04wSUdCelpXeGxZM1JnSUhOMGVXeGxJR2x1YUdWeWFYUmhibU5sSUdsdUlFWnBjbVZtYjNndVhHNGdLaTljYmx4dVluVjBkRzl1TEZ4dWMyVnNaV04wSUh0Y2JpQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklHNXZibVU3WEc1OVhHNWNiaThxS2x4dUlDb2dNUzRnUVhadmFXUWdkR2hsSUZkbFlrdHBkQ0JpZFdjZ2FXNGdRVzVrY205cFpDQTBMakF1S2lCM2FHVnlaU0FvTWlrZ1pHVnpkSEp2ZVhNZ2JtRjBhWFpsSUdCaGRXUnBiMkJjYmlBcUlDQWdJR0Z1WkNCZ2RtbGtaVzlnSUdOdmJuUnliMnh6TGx4dUlDb2dNaTRnUTI5eWNtVmpkQ0JwYm1GaWFXeHBkSGtnZEc4Z2MzUjViR1VnWTJ4cFkydGhZbXhsSUdCcGJuQjFkR0FnZEhsd1pYTWdhVzRnYVU5VExseHVJQ29nTXk0Z1NXMXdjbTkyWlNCMWMyRmlhV3hwZEhrZ1lXNWtJR052Ym5OcGMzUmxibU41SUc5bUlHTjFjbk52Y2lCemRIbHNaU0JpWlhSM1pXVnVJR2x0WVdkbExYUjVjR1ZjYmlBcUlDQWdJR0JwYm5CMWRHQWdZVzVrSUc5MGFHVnljeTVjYmlBcUwxeHVYRzVpZFhSMGIyNHNYRzVvZEcxc0lHbHVjSFYwVzNSNWNHVTlYQ0ppZFhSMGIyNWNJbDBzSUM4cUlERWdLaTljYm1sdWNIVjBXM1I1Y0dVOVhDSnlaWE5sZEZ3aVhTeGNibWx1Y0hWMFczUjVjR1U5WENKemRXSnRhWFJjSWwwZ2UxeHVJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUdKMWRIUnZianNnTHlvZ01pQXFMMXh1SUNCamRYSnpiM0k2SUhCdmFXNTBaWEk3SUM4cUlETWdLaTljYm4xY2JseHVMeW9xWEc0Z0tpQlNaUzF6WlhRZ1pHVm1ZWFZzZENCamRYSnpiM0lnWm05eUlHUnBjMkZpYkdWa0lHVnNaVzFsYm5SekxseHVJQ292WEc1Y2JtSjFkSFJ2Ymx0a2FYTmhZbXhsWkYwc1hHNW9kRzFzSUdsdWNIVjBXMlJwYzJGaWJHVmtYU0I3WEc0Z0lHTjFjbk52Y2pvZ1pHVm1ZWFZzZER0Y2JuMWNibHh1THlvcVhHNGdLaUJTWlcxdmRtVWdhVzV1WlhJZ2NHRmtaR2x1WnlCaGJtUWdZbTl5WkdWeUlHbHVJRVpwY21WbWIzZ2dOQ3N1WEc0Z0tpOWNibHh1WW5WMGRHOXVPam90Ylc5NkxXWnZZM1Z6TFdsdWJtVnlMRnh1YVc1d2RYUTZPaTF0YjNvdFptOWpkWE10YVc1dVpYSWdlMXh1SUNCaWIzSmtaWEk2SURBN1hHNGdJSEJoWkdScGJtYzZJREE3WEc1OVhHNWNiaThxS2x4dUlDb2dRV1JrY21WemN5QkdhWEpsWm05NElEUXJJSE5sZEhScGJtY2dZR3hwYm1VdGFHVnBaMmgwWUNCdmJpQmdhVzV3ZFhSZ0lIVnphVzVuSUdBaGFXMXdiM0owWVc1MFlDQnBibHh1SUNvZ2RHaGxJRlZCSUhOMGVXeGxjMmhsWlhRdVhHNGdLaTljYmx4dWFXNXdkWFFnZTF4dUlDQnNhVzVsTFdobGFXZG9kRG9nYm05eWJXRnNPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFbDBKM01nY21WamIyMXRaVzVrWldRZ2RHaGhkQ0I1YjNVZ1pHOXVKM1FnWVhSMFpXMXdkQ0IwYnlCemRIbHNaU0IwYUdWelpTQmxiR1Z0Wlc1MGN5NWNiaUFxSUVacGNtVm1iM2duY3lCcGJYQnNaVzFsYm5SaGRHbHZiaUJrYjJWemJpZDBJSEpsYzNCbFkzUWdZbTk0TFhOcGVtbHVaeXdnY0dGa1pHbHVaeXdnYjNJZ2QybGtkR2d1WEc0Z0tseHVJQ29nTVM0Z1FXUmtjbVZ6Y3lCaWIzZ2djMmw2YVc1bklITmxkQ0IwYnlCZ1kyOXVkR1Z1ZEMxaWIzaGdJR2x1SUVsRklEZ3ZPUzh4TUM1Y2JpQXFJREl1SUZKbGJXOTJaU0JsZUdObGMzTWdjR0ZrWkdsdVp5QnBiaUJKUlNBNEx6a3ZNVEF1WEc0Z0tpOWNibHh1YVc1d2RYUmJkSGx3WlQxY0ltTm9aV05yWW05NFhDSmRMRnh1YVc1d2RYUmJkSGx3WlQxY0luSmhaR2x2WENKZElIdGNiaUFnWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEc2dMeW9nTVNBcUwxeHVJQ0J3WVdSa2FXNW5PaUF3T3lBdktpQXlJQ292WEc1OVhHNWNiaThxS2x4dUlDb2dSbWw0SUhSb1pTQmpkWEp6YjNJZ2MzUjViR1VnWm05eUlFTm9jbTl0WlNkeklHbHVZM0psYldWdWRDOWtaV055WlcxbGJuUWdZblYwZEc5dWN5NGdSbTl5SUdObGNuUmhhVzVjYmlBcUlHQm1iMjUwTFhOcGVtVmdJSFpoYkhWbGN5QnZaaUIwYUdVZ1lHbHVjSFYwWUN3Z2FYUWdZMkYxYzJWeklIUm9aU0JqZFhKemIzSWdjM1I1YkdVZ2IyWWdkR2hsWEc0Z0tpQmtaV055WlcxbGJuUWdZblYwZEc5dUlIUnZJR05vWVc1blpTQm1jbTl0SUdCa1pXWmhkV3gwWUNCMGJ5QmdkR1Y0ZEdBdVhHNGdLaTljYmx4dWFXNXdkWFJiZEhsd1pUMWNJbTUxYldKbGNsd2lYVG82TFhkbFltdHBkQzFwYm01bGNpMXpjR2x1TFdKMWRIUnZiaXhjYm1sdWNIVjBXM1I1Y0dVOVhDSnVkVzFpWlhKY0lsMDZPaTEzWldKcmFYUXRiM1YwWlhJdGMzQnBiaTFpZFhSMGIyNGdlMXh1SUNCb1pXbG5hSFE2SUdGMWRHODdYRzU5WEc1Y2JpOHFLbHh1SUNvZ01TNGdRV1JrY21WemN5QmdZWEJ3WldGeVlXNWpaV0FnYzJWMElIUnZJR0J6WldGeVkyaG1hV1ZzWkdBZ2FXNGdVMkZtWVhKcElHRnVaQ0JEYUhKdmJXVXVYRzRnS2lBeUxpQkJaR1J5WlhOeklHQmliM2d0YzJsNmFXNW5ZQ0J6WlhRZ2RHOGdZR0p2Y21SbGNpMWliM2hnSUdsdUlGTmhabUZ5YVNCaGJtUWdRMmh5YjIxbExseHVJQ292WEc1Y2JtbHVjSFYwVzNSNWNHVTlYQ0p6WldGeVkyaGNJbDBnZTF4dUlDQXRkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZJSFJsZUhSbWFXVnNaRHNnTHlvZ01TQXFMMXh1SUNCaWIzZ3RjMmw2YVc1bk9pQmpiMjUwWlc1MExXSnZlRHNnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCcGJtNWxjaUJ3WVdSa2FXNW5JR0Z1WkNCelpXRnlZMmdnWTJGdVkyVnNJR0oxZEhSdmJpQnBiaUJUWVdaaGNta2dZVzVrSUVOb2NtOXRaU0J2YmlCUFV5QllMbHh1SUNvZ1UyRm1ZWEpwSUNoaWRYUWdibTkwSUVOb2NtOXRaU2tnWTJ4cGNITWdkR2hsSUdOaGJtTmxiQ0JpZFhSMGIyNGdkMmhsYmlCMGFHVWdjMlZoY21Ob0lHbHVjSFYwSUdoaGMxeHVJQ29nY0dGa1pHbHVaeUFvWVc1a0lHQjBaWGgwWm1sbGJHUmdJR0Z3Y0dWaGNtRnVZMlVwTGx4dUlDb3ZYRzVjYm1sdWNIVjBXM1I1Y0dVOVhDSnpaV0Z5WTJoY0lsMDZPaTEzWldKcmFYUXRjMlZoY21Ob0xXTmhibU5sYkMxaWRYUjBiMjRzWEc1cGJuQjFkRnQwZVhCbFBWd2ljMlZoY21Ob1hDSmRPam90ZDJWaWEybDBMWE5sWVhKamFDMWtaV052Y21GMGFXOXVJSHRjYmlBZ0xYZGxZbXRwZEMxaGNIQmxZWEpoYm1ObE9pQnViMjVsTzF4dWZWeHVYRzR2S2lwY2JpQXFJRVJsWm1sdVpTQmpiMjV6YVhOMFpXNTBJR0p2Y21SbGNpd2diV0Z5WjJsdUxDQmhibVFnY0dGa1pHbHVaeTVjYmlBcUwxeHVYRzVtYVdWc1pITmxkQ0I3WEc0Z0lHSnZjbVJsY2pvZ01YQjRJSE52Ykdsa0lDTmpNR013WXpBN1hHNGdJRzFoY21kcGJqb2dNQ0F5Y0hnN1hHNGdJSEJoWkdScGJtYzZJREF1TXpWbGJTQXdMall5TldWdElEQXVOelZsYlR0Y2JuMWNibHh1THlvcVhHNGdLaUF4TGlCRGIzSnlaV04wSUdCamIyeHZjbUFnYm05MElHSmxhVzVuSUdsdWFHVnlhWFJsWkNCcGJpQkpSU0E0THprdk1UQXZNVEV1WEc0Z0tpQXlMaUJTWlcxdmRtVWdjR0ZrWkdsdVp5QnpieUJ3Wlc5d2JHVWdZWEpsYmlkMElHTmhkV2RvZENCdmRYUWdhV1lnZEdobGVTQjZaWEp2SUc5MWRDQm1hV1ZzWkhObGRITXVYRzRnS2k5Y2JseHViR1ZuWlc1a0lIdGNiaUFnWW05eVpHVnlPaUF3T3lBdktpQXhJQ292WEc0Z0lIQmhaR1JwYm1jNklEQTdJQzhxSURJZ0tpOWNibjFjYmx4dUx5b3FYRzRnS2lCU1pXMXZkbVVnWkdWbVlYVnNkQ0IyWlhKMGFXTmhiQ0J6WTNKdmJHeGlZWElnYVc0Z1NVVWdPQzg1THpFd0x6RXhMbHh1SUNvdlhHNWNiblJsZUhSaGNtVmhJSHRjYmlBZ2IzWmxjbVpzYjNjNklHRjFkRzg3WEc1OVhHNWNiaThxS2x4dUlDb2dSRzl1SjNRZ2FXNW9aWEpwZENCMGFHVWdZR1p2Ym5RdGQyVnBaMmgwWUNBb1lYQndiR2xsWkNCaWVTQmhJSEoxYkdVZ1lXSnZkbVVwTGx4dUlDb2dUazlVUlRvZ2RHaGxJR1JsWm1GMWJIUWdZMkZ1Ym05MElITmhabVZzZVNCaVpTQmphR0Z1WjJWa0lHbHVJRU5vY205dFpTQmhibVFnVTJGbVlYSnBJRzl1SUU5VElGZ3VYRzRnS2k5Y2JseHViM0IwWjNKdmRYQWdlMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dZbTlzWkR0Y2JuMWNibHh1THlvZ1ZHRmliR1Z6WEc0Z0lDQTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHZLaXBjYmlBcUlGSmxiVzkyWlNCdGIzTjBJSE53WVdOcGJtY2dZbVYwZDJWbGJpQjBZV0pzWlNCalpXeHNjeTVjYmlBcUwxeHVYRzUwWVdKc1pTQjdYRzRnSUdKdmNtUmxjaTFqYjJ4c1lYQnpaVG9nWTI5c2JHRndjMlU3WEc0Z0lHSnZjbVJsY2kxemNHRmphVzVuT2lBd08xeHVmVnh1WEc1MFpDeGNiblJvSUh0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYm4xY2JpSXNJa0JwYlhCdmNuUWdKMEJ5WldSemFXWjBMM1ZwTFhKekxXTnZjbVV2YzNKakwzTjBlV3hsY3k5aWNtRnVaQzVwYlhCdmNuUW5PMXh1UUdsdGNHOXlkQ0FuUUhKbFpITnBablF2ZFdrdGNuTXRZMjl5WlM5emNtTXZjM1I1YkdWekwyTnZiVzF2Ymk5aWNtVmhhM0J2YVc1MGN5NXBiWEJ2Y25Rbk8xeHVYRzV6WlhSMWNDMW9aWEp2S0NSamRYTjBiMjFUWlhSMGFXNW5jeUE5SUh0OUtTQjdYRzVjYmx4MEx5cGNiaUFnSUNvZ1JHVm1ZWFZzZENCelpYUjBhVzVuY3pwY2JpQWdJQ292WEc1Y2RDUmtaV1poZFd4MFUyVjBkR2x1WjNNZ1BTQjdYRzVjZEZ4MGNHRmtaR2x1WnpvZ01XVnRMRnh1WEhSY2RHaGxhV2RvZERvZ05UQXdjSGdzWEc1Y2RGeDBZMjl1ZEdWdWREb2dlMXh1WEhSY2RGeDBZbTl5WkdWeVYybGtkR2c2SURGd2VDeGNibHgwWEhSY2RHSnZjbVJsY2tOdmJHOXlPaUFrWW5KaGJtUkhjbVY1WEc1Y2RGeDBmVnh1WEhSOVhHNWNibHgwSkhObGRIUnBibWR6SUQwZ2JXVnlaMlVvSkdSbFptRjFiSFJUWlhSMGFXNW5jeXdnSkdOMWMzUnZiVk5sZEhScGJtZHpLVHRjYmx4dUlDQXZLbHh1SUNBZ0tpQkNjbVZoYTNCdmFXNTBJSE5sZEhWd09seHVJQ0FnS2k5Y2JseDBMbWhsY204Z2UxeHVYSFJjZEhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JseDBYSFI2TFdsdVpHVjRPaUF4TzF4dVhIUmNkR1JwYzNCc1lYazZJR1pzWlhnN1hHNWNkRngwWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqdGNibHgwWEhScWRYTjBhV1o1TFdOdmJuUmxiblE2SUdObGJuUmxjanRjYmx4MFhIUmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1WEc1Y2RGeDBiV2x1TFdobGFXZG9kRG9nSkhObGRIUnBibWR6TG1obGFXZG9kRHRjYmx4MFhIUjNhV1IwYURvZ01UQXdKVHRjYmx4dVhIUmNkR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SURVd0pTQTFNQ1U3WEc1Y2RGeDBZbUZqYTJkeWIzVnVaQzF5WlhCbFlYUTZJRzV2TFhKbGNHVmhkRHRjYmx4MFhIUmlZV05yWjNKdmRXNWtMWE5wZW1VNklHTnZkbVZ5TzF4dVhHNWNkRngwZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dVhIUjlYRzVjYmx4MExtaGxjbTh0YzNScFkydDVMV2hsWVdSbGNpeGNibHgwTG1obGNtOWZYMmhsWVdSbGNpQjdYRzVjZEZ4MGVpMXBibVJsZURvZ01UQXdPMXh1WEhSY2RIQmhaR1JwYm1jNklDUnpaWFIwYVc1bmN5NXdZV1JrYVc1bk8xeHVYSFJjZEdOdmJHOXlPaUFrWW5KaGJtUlhhR2wwWlR0Y2JseDBYSFJpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2JseHVYSFJjZEdneklIdGNibHgwWEhSY2RHWnZiblF0YzJsNlpUb2dNUzR4TWpWeVpXMDdYRzVjZEZ4MFhIUnZjR0ZqYVhSNU9pQXdMamM3WEc1Y2RGeDBYSFJ0WVhKbmFXNDZJREE3WEc1Y2RGeDBmVnh1WEhSOVhHNWNiaUFnTG1obGNtOHRjM1JwWTJ0NUxXaGxZV1JsY2lCN1hHNWNkRngwZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1TzF4dVhHNWNkRngwY0c5emFYUnBiMjQ2SUdacGVHVmtPMXh1WEhSY2RIUnZjRG9nTUR0Y2JseDBYSFJzWldaME9pQXdPMXh1WEhSY2RIZHBaSFJvT2lBeE1EQWxPMXh1WEc1Y2RGeDBZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nTlRBbElEVXdKVHRjYmx4MFhIUmlZV05yWjNKdmRXNWtMWEpsY0dWaGREb2dibTh0Y21Wd1pXRjBPMXh1WEhSY2RHSmhZMnRuY205MWJtUXRjMmw2WlRvZ1kyOTJaWEk3WEc1Y2RIMWNibHh1WEhRdWFHVnlieTF6ZEdsamEza3RhR1ZoWkdWeUlENGdLaUI3WEc1Y2RGeDBkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVPMXh1WEhSOVhHNWNibHgwTG1obGNtOHVMV1ZtWm1WamRDMWtZWEpyWlc0Nk9tSmxabTl5WlN4Y2JseDBMbWhsY204dUxXVm1abVZqZEMxc2FXZG9kR1Z1T2pwaVpXWnZjbVZjYmx4MElIdGNibHgwWEhSd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNWNkRngwZEc5d09pQXdPMXh1WEhSY2RISnBaMmgwT2lBd08xeHVYSFJjZEdKdmRIUnZiVG9nTUR0Y2JseDBYSFJzWldaME9pQXdPMXh1WEhSY2RIb3RhVzVrWlhnNklEQTdYRzVjZEZ4MFkyOXVkR1Z1ZERvZ1hDSWdYQ0k3WEc1Y2RGeDBiM0JoWTJsMGVUb2dNQzR5TzF4dVhIUjlYRzVjYmx4MExtaGxjbTh1TFdWbVptVmpkQzFrWVhKclpXNDZPbUpsWm05eVpTQjdYRzVjZEZ4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ1lteGhZMnM3WEc1Y2RIMWNibHh1WEhRdWFHVnlieTR0WldabVpXTjBMV3hwWjJoMFpXNDZPbUpsWm05eVpTQjdYRzVjZEZ4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2QyaHBkR1U3WEc1Y2RIMWNibHh1WEhRdWFHVnliMTlmYUdWaFpHVnlJSHRjYmx4MFhIUmhiR2xuYmkxelpXeG1PaUJtYkdWNExYTjBZWEowTzF4dVhIUjlYRzVjYmx4MExtaGxjbThnWTI5a1pTQjdYRzVjZEZ4MFptOXVkQzF6YVhwbE9pQXpaVzA3WEc1Y2RIMWNibHh1WEhRdWFHVnlieUJ3SUh0Y2JseDBYSFJtYjI1MExYTnBlbVU2SURFdU5XVnRPMXh1WEhSOVhHNWNibHgwTG1obGNtOWZYMk52Ym5SaGFXNWxjaUI3WEc1Y2RGeDBlaTFwYm1SbGVEb2dPVGs3WEc1Y2RGeDBaR2x6Y0d4aGVUb2dabXhsZUR0Y2JseDBYSFJtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHVYSFJjZEdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWTJWdWRHVnlPMXh1WEc1Y2RGeDBabXhsZURvZ01TQXdJR0YxZEc4N1hHNWNibHgwWEhSamIyeHZjam9nSTJVd1pUQmxNRHRjYmx4MGZWeHVYRzVjZEM1amIyNTBaVzUwSUh0Y2JseDBYSFJ3WVdSa2FXNW5PaUFrYzJWMGRHbHVaM011Y0dGa1pHbHVaenRjYmx4MGZWeHVYRzVjZEM1amIyNTBaVzUwTFMxamIyeHNZWEJ6WlNCN1hHNWNkQ0FnYldsdUxXaGxhV2RvZERvZ2FXNXBkR2xoYkR0Y2JseDBmVnh1WEc1Y2RDNWpiMjUwWlc1MFgxOWpiMjUwWVdsdVpYSXNYRzVjZEM1amIyNTBaVzUwWDE5amIyNTBZV2x1WlhJdExXVjRjR0Z1WkNCN1hHNWNkRngwWW05eVpHVnlPaUFrYzJWMGRHbHVaM011WTI5dWRHVnVkQzVpYjNKa1pYSlhhV1IwYUNCemIyeHBaQ0FrYzJWMGRHbHVaM011WTI5dWRHVnVkQzVpYjNKa1pYSkRiMnh2Y2p0Y2JseDBYSFJpYjNKa1pYSXRjbUZrYVhWek9pQXpjSGc3WEc1Y2RIMWNibHh1WEhRdVkyOXVkR1Z1ZEY5ZlkyOXVkR0ZwYm1WeUxTMWxlSEJoYm1RZ2UxeHVYSFJjZEcxcGJpMW9aV2xuYUhRNklDZ2tjMlYwZEdsdVozTXVhR1ZwWjJoMElDMGdNaW9rYzJWMGRHbHVaM011Y0dGa1pHbHVaeUF0SURJcUpITmxkSFJwYm1kekxtTnZiblJsYm5RdVltOXlaR1Z5VjJsa2RHZ3BPMXh1WEhSOVhHNWNibHgwTHlvZ2FWQm9iMjVsSUZ0d2IzSjBjbUZwZENBcklHeGhibVJ6WTJGd1pWMGdLaTljYmx4MEsyRmliM1psS0NkdGIySnBiR1V0YkdGdVpITmpZWEJsSnlrZ2UxeHVYSFJjZEM1b1pYSnZMWE4wYVdOcmVTMW9aV0ZrWlhJZ2UxeHVYSFJjZEZ4MGRtbHphV0pwYkdsMGVUb2dkbWx6YVdKc1pUdGNibHgwWEhSOVhHNWNibHgwWEhRdWFHVnlieTF6ZEdsamEza3RhR1ZoWkdWeUlENGdLaUI3WEc1Y2RGeDBYSFIyYVhOcFltbHNhWFI1T2lCMmFYTnBZbXhsTzF4dVhIUmNkSDFjYmx4MGZWeHVYRzVjZEM4cUlHbFFZV1FnVzNCdmNuUnlZV2wwSUNzZ2JHRnVaSE5qWVhCbFhTQXFMMXh1SUNBclltVjBkMlZsYmlnM05qaHdlQ3dnTVRBeU5IQjRLU0I3WEc1Y2RGeDBMbWhsY204Z2UxeHVYSFFnSUNBZ1ltRmphMmR5YjNWdVpDMWhkSFJoWTJodFpXNTBPaUJ6WTNKdmJHdzdYRzVjZEZ4MGZWeHVYRzVjZEZ4MExtaGxjbTh0YzNScFkydDVMV2hsWVdSbGNpQjdYRzVjZEZ4MFhIUjJhWE5wWW1sc2FYUjVPaUIyYVhOcFlteGxPMXh1WEhSY2RGeDBZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nTlRBbElERXdNQ1U3WEc1Y2RDQWdJQ0JpWVdOclozSnZkVzVrTFdGMGRHRmphRzFsYm5RNklITmpjbTlzYkR0Y2JseDBYSFI5WEc1Y2RIMWNibjFjYmlJc0lpOHFJU0J1YjNKdFlXeHBlbVV1WTNOeklIWXpMakF1TXlCOElFMUpWQ0JNYVdObGJuTmxJSHdnWjJsMGFIVmlMbU52YlM5dVpXTnZiR0Z6TDI1dmNtMWhiR2w2WlM1amMzTWdLaTljYmx4dUx5b3FYRzRnS2lBeExpQlRaWFFnWkdWbVlYVnNkQ0JtYjI1MElHWmhiV2xzZVNCMGJ5QnpZVzV6TFhObGNtbG1MbHh1SUNvZ01pNGdVSEpsZG1WdWRDQnBUMU1nWVc1a0lFbEZJSFJsZUhRZ2MybDZaU0JoWkdwMWMzUWdZV1owWlhJZ1pHVjJhV05sSUc5eWFXVnVkR0YwYVc5dUlHTm9ZVzVuWlN4Y2JpQXFJQ0FnSUhkcGRHaHZkWFFnWkdsellXSnNhVzVuSUhWelpYSWdlbTl2YlM1Y2JpQXFMMXh1WEc1b2RHMXNJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJSE5oYm5NdGMyVnlhV1k3SUM4cUlERWdLaTljYmlBZ0xXMXpMWFJsZUhRdGMybDZaUzFoWkdwMWMzUTZJREV3TUNVN0lDOHFJRElnS2k5Y2JpQWdMWGRsWW10cGRDMTBaWGgwTFhOcGVtVXRZV1JxZFhOME9pQXhNREFsT3lBdktpQXlJQ292WEc1OVhHNWNiaThxS2x4dUlDb2dVbVZ0YjNabElHUmxabUYxYkhRZ2JXRnlaMmx1TGx4dUlDb3ZYRzVjYm1KdlpIa2dlMXh1SUNCdFlYSm5hVzQ2SURBN1hHNTlYRzVjYmk4cUlFaFVUVXcxSUdScGMzQnNZWGtnWkdWbWFXNXBkR2x2Ym5OY2JpQWdJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNWNiaThxS2x4dUlDb2dRMjl5Y21WamRDQmdZbXh2WTJ0Z0lHUnBjM0JzWVhrZ2JtOTBJR1JsWm1sdVpXUWdabTl5SUdGdWVTQklWRTFNTlNCbGJHVnRaVzUwSUdsdUlFbEZJRGd2T1M1Y2JpQXFJRU52Y25KbFkzUWdZR0pzYjJOcllDQmthWE53YkdGNUlHNXZkQ0JrWldacGJtVmtJR1p2Y2lCZ1pHVjBZV2xzYzJBZ2IzSWdZSE4xYlcxaGNubGdJR2x1SUVsRklERXdMekV4WEc0Z0tpQmhibVFnUm1seVpXWnZlQzVjYmlBcUlFTnZjbkpsWTNRZ1lHSnNiMk5yWUNCa2FYTndiR0Y1SUc1dmRDQmtaV1pwYm1Wa0lHWnZjaUJnYldGcGJtQWdhVzRnU1VVZ01URXVYRzRnS2k5Y2JseHVZWEowYVdOc1pTeGNibUZ6YVdSbExGeHVaR1YwWVdsc2N5eGNibVpwWjJOaGNIUnBiMjRzWEc1bWFXZDFjbVVzWEc1bWIyOTBaWElzWEc1b1pXRmtaWElzWEc1b1ozSnZkWEFzWEc1dFlXbHVMRnh1YldWdWRTeGNibTVoZGl4Y2JuTmxZM1JwYjI0c1hHNXpkVzF0WVhKNUlIdGNiaUFnWkdsemNHeGhlVG9nWW14dlkyczdYRzU5WEc1Y2JpOHFLbHh1SUNvZ01TNGdRMjl5Y21WamRDQmdhVzVzYVc1bExXSnNiMk5yWUNCa2FYTndiR0Y1SUc1dmRDQmtaV1pwYm1Wa0lHbHVJRWxGSURndk9TNWNiaUFxSURJdUlFNXZjbTFoYkdsNlpTQjJaWEowYVdOaGJDQmhiR2xuYm0xbGJuUWdiMllnWUhCeWIyZHlaWE56WUNCcGJpQkRhSEp2YldVc0lFWnBjbVZtYjNnc0lHRnVaQ0JQY0dWeVlTNWNiaUFxTDF4dVhHNWhkV1JwYnl4Y2JtTmhiblpoY3l4Y2JuQnliMmR5WlhOekxGeHVkbWxrWlc4Z2UxeHVJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN0lDOHFJREVnS2k5Y2JpQWdkbVZ5ZEdsallXd3RZV3hwWjI0NklHSmhjMlZzYVc1bE95QXZLaUF5SUNvdlhHNTlYRzVjYmk4cUtseHVJQ29nVUhKbGRtVnVkQ0J0YjJSbGNtNGdZbkp2ZDNObGNuTWdabkp2YlNCa2FYTndiR0Y1YVc1bklHQmhkV1JwYjJBZ2QybDBhRzkxZENCamIyNTBjbTlzY3k1Y2JpQXFJRkpsYlc5MlpTQmxlR05sYzNNZ2FHVnBaMmgwSUdsdUlHbFBVeUExSUdSbGRtbGpaWE11WEc0Z0tpOWNibHh1WVhWa2FXODZibTkwS0Z0amIyNTBjbTlzYzEwcElIdGNiaUFnWkdsemNHeGhlVG9nYm05dVpUdGNiaUFnYUdWcFoyaDBPaUF3TzF4dWZWeHVYRzR2S2lwY2JpQXFJRUZrWkhKbGMzTWdZRnRvYVdSa1pXNWRZQ0J6ZEhsc2FXNW5JRzV2ZENCd2NtVnpaVzUwSUdsdUlFbEZJRGd2T1M4eE1DNWNiaUFxSUVocFpHVWdkR2hsSUdCMFpXMXdiR0YwWldBZ1pXeGxiV1Z1ZENCcGJpQkpSU0E0THprdk1UQXZNVEVzSUZOaFptRnlhU3dnWVc1a0lFWnBjbVZtYjNnZ1BDQXlNaTVjYmlBcUwxeHVYRzViYUdsa1pHVnVYU3hjYm5SbGJYQnNZWFJsSUh0Y2JpQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2JuMWNibHh1THlvZ1RHbHVhM05jYmlBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JpOHFLbHh1SUNvZ1VtVnRiM1psSUhSb1pTQm5jbUY1SUdKaFkydG5jbTkxYm1RZ1kyOXNiM0lnWm5KdmJTQmhZM1JwZG1VZ2JHbHVhM01nYVc0Z1NVVWdNVEF1WEc0Z0tpOWNibHh1WVNCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dWZWeHVYRzR2S2lwY2JpQXFJRWx0Y0hKdmRtVWdjbVZoWkdGaWFXeHBkSGtnYjJZZ1ptOWpkWE5sWkNCbGJHVnRaVzUwY3lCM2FHVnVJSFJvWlhrZ1lYSmxJR0ZzYzI4Z2FXNGdZVzVjYmlBcUlHRmpkR2wyWlM5b2IzWmxjaUJ6ZEdGMFpTNWNiaUFxTDF4dVhHNWhPbUZqZEdsMlpTeGNibUU2YUc5MlpYSWdlMXh1SUNCdmRYUnNhVzVsT2lBd08xeHVmVnh1WEc0dktpQlVaWGgwTFd4bGRtVnNJSE5sYldGdWRHbGpjMXh1SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUx5b3FYRzRnS2lCQlpHUnlaWE56SUhOMGVXeHBibWNnYm05MElIQnlaWE5sYm5RZ2FXNGdTVVVnT0M4NUx6RXdMekV4TENCVFlXWmhjbWtzSUdGdVpDQkRhSEp2YldVdVhHNGdLaTljYmx4dVlXSmljbHQwYVhSc1pWMGdlMXh1SUNCaWIzSmtaWEl0WW05MGRHOXRPaUF4Y0hnZ1pHOTBkR1ZrTzF4dWZWeHVYRzR2S2lwY2JpQXFJRUZrWkhKbGMzTWdjM1I1YkdVZ2MyVjBJSFJ2SUdCaWIyeGtaWEpnSUdsdUlFWnBjbVZtYjNnZ05Dc3NJRk5oWm1GeWFTd2dZVzVrSUVOb2NtOXRaUzVjYmlBcUwxeHVYRzVpTEZ4dWMzUnliMjVuSUh0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUTdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1FXUmtjbVZ6Y3lCemRIbHNhVzVuSUc1dmRDQndjbVZ6Wlc1MElHbHVJRk5oWm1GeWFTQmhibVFnUTJoeWIyMWxMbHh1SUNvdlhHNWNibVJtYmlCN1hHNGdJR1p2Ym5RdGMzUjViR1U2SUdsMFlXeHBZenRjYm4xY2JseHVMeW9xWEc0Z0tpQkJaR1J5WlhOeklIWmhjbWxoWW14bElHQm9NV0FnWm05dWRDMXphWHBsSUdGdVpDQnRZWEpuYVc0Z2QybDBhR2x1SUdCelpXTjBhVzl1WUNCaGJtUWdZR0Z5ZEdsamJHVmdYRzRnS2lCamIyNTBaWGgwY3lCcGJpQkdhWEpsWm05NElEUXJMQ0JUWVdaaGNta3NJR0Z1WkNCRGFISnZiV1V1WEc0Z0tpOWNibHh1YURFZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURKbGJUdGNiaUFnYldGeVoybHVPaUF3TGpZM1pXMGdNRHRjYm4xY2JseHVMeW9xWEc0Z0tpQkJaR1J5WlhOeklITjBlV3hwYm1jZ2JtOTBJSEJ5WlhObGJuUWdhVzRnU1VVZ09DODVMbHh1SUNvdlhHNWNibTFoY21zZ2UxeHVJQ0JpWVdOclozSnZkVzVrT2lBalptWXdPMXh1SUNCamIyeHZjam9nSXpBd01EdGNibjFjYmx4dUx5b3FYRzRnS2lCQlpHUnlaWE56SUdsdVkyOXVjMmx6ZEdWdWRDQmhibVFnZG1GeWFXRmliR1VnWm05dWRDQnphWHBsSUdsdUlHRnNiQ0JpY205M2MyVnljeTVjYmlBcUwxeHVYRzV6YldGc2JDQjdYRzRnSUdadmJuUXRjMmw2WlRvZ09EQWxPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlGQnlaWFpsYm5RZ1lITjFZbUFnWVc1a0lHQnpkWEJnSUdGbVptVmpkR2x1WnlCZ2JHbHVaUzFvWldsbmFIUmdJR2x1SUdGc2JDQmljbTkzYzJWeWN5NWNiaUFxTDF4dVhHNXpkV0lzWEc1emRYQWdlMXh1SUNCbWIyNTBMWE5wZW1VNklEYzFKVHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREE3WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnZG1WeWRHbGpZV3d0WVd4cFoyNDZJR0poYzJWc2FXNWxPMXh1ZlZ4dVhHNXpkWEFnZTF4dUlDQjBiM0E2SUMwd0xqVmxiVHRjYm4xY2JseHVjM1ZpSUh0Y2JpQWdZbTkwZEc5dE9pQXRNQzR5TldWdE8xeHVmVnh1WEc0dktpQkZiV0psWkdSbFpDQmpiMjUwWlc1MFhHNGdJQ0E5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzR2S2lwY2JpQXFJRkpsYlc5MlpTQmliM0prWlhJZ2QyaGxiaUJwYm5OcFpHVWdZR0ZnSUdWc1pXMWxiblFnYVc0Z1NVVWdPQzg1THpFd0xseHVJQ292WEc1Y2JtbHRaeUI3WEc0Z0lHSnZjbVJsY2pvZ01EdGNibjFjYmx4dUx5b3FYRzRnS2lCRGIzSnlaV04wSUc5MlpYSm1iRzkzSUc1dmRDQm9hV1JrWlc0Z2FXNGdTVVVnT1M4eE1DOHhNUzVjYmlBcUwxeHVYRzV6ZG1jNmJtOTBLRHB5YjI5MEtTQjdYRzRnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc1OVhHNWNiaThxSUVkeWIzVndhVzVuSUdOdmJuUmxiblJjYmlBZ0lEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JpOHFLbHh1SUNvZ1FXUmtjbVZ6Y3lCdFlYSm5hVzRnYm05MElIQnlaWE5sYm5RZ2FXNGdTVVVnT0M4NUlHRnVaQ0JUWVdaaGNta3VYRzRnS2k5Y2JseHVabWxuZFhKbElIdGNiaUFnYldGeVoybHVPaUF4WlcwZ05EQndlRHRjYm4xY2JseHVMeW9xWEc0Z0tpQkJaR1J5WlhOeklHUnBabVpsY21WdVkyVnpJR0psZEhkbFpXNGdSbWx5WldadmVDQmhibVFnYjNSb1pYSWdZbkp2ZDNObGNuTXVYRzRnS2k5Y2JseHVhSElnZTF4dUlDQmliM2d0YzJsNmFXNW5PaUJqYjI1MFpXNTBMV0p2ZUR0Y2JpQWdhR1ZwWjJoME9pQXdPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFTnZiblJoYVc0Z2IzWmxjbVpzYjNjZ2FXNGdZV3hzSUdKeWIzZHpaWEp6TGx4dUlDb3ZYRzVjYm5CeVpTQjdYRzRnSUc5MlpYSm1iRzkzT2lCaGRYUnZPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFRmtaSEpsYzNNZ2IyUmtJR0JsYldBdGRXNXBkQ0JtYjI1MElITnBlbVVnY21WdVpHVnlhVzVuSUdsdUlHRnNiQ0JpY205M2MyVnljeTVjYmlBcUwxeHVYRzVqYjJSbExGeHVhMkprTEZ4dWNISmxMRnh1YzJGdGNDQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQnRiMjV2YzNCaFkyVXNJRzF2Ym05emNHRmpaVHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhaVzA3WEc1OVhHNWNiaThxSUVadmNtMXpYRzRnSUNBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1WEc0dktpcGNiaUFxSUV0dWIzZHVJR3hwYldsMFlYUnBiMjQ2SUdKNUlHUmxabUYxYkhRc0lFTm9jbTl0WlNCaGJtUWdVMkZtWVhKcElHOXVJRTlUSUZnZ1lXeHNiM2NnZG1WeWVTQnNhVzFwZEdWa1hHNGdLaUJ6ZEhsc2FXNW5JRzltSUdCelpXeGxZM1JnTENCMWJteGxjM01nWVNCZ1ltOXlaR1Z5WUNCd2NtOXdaWEowZVNCcGN5QnpaWFF1WEc0Z0tpOWNibHh1THlvcVhHNGdLaUF4TGlCRGIzSnlaV04wSUdOdmJHOXlJRzV2ZENCaVpXbHVaeUJwYm1obGNtbDBaV1F1WEc0Z0tpQWdJQ0JMYm05M2JpQnBjM04xWlRvZ1lXWm1aV04wY3lCamIyeHZjaUJ2WmlCa2FYTmhZbXhsWkNCbGJHVnRaVzUwY3k1Y2JpQXFJREl1SUVOdmNuSmxZM1FnWm05dWRDQndjbTl3WlhKMGFXVnpJRzV2ZENCaVpXbHVaeUJwYm1obGNtbDBaV1F1WEc0Z0tpQXpMaUJCWkdSeVpYTnpJRzFoY21kcGJuTWdjMlYwSUdScFptWmxjbVZ1ZEd4NUlHbHVJRVpwY21WbWIzZ2dOQ3NzSUZOaFptRnlhU3dnWVc1a0lFTm9jbTl0WlM1Y2JpQXFMMXh1WEc1aWRYUjBiMjRzWEc1cGJuQjFkQ3hjYm05d2RHZHliM1Z3TEZ4dWMyVnNaV04wTEZ4dWRHVjRkR0Z5WldFZ2UxeHVJQ0JqYjJ4dmNqb2dhVzVvWlhKcGREc2dMeW9nTVNBcUwxeHVJQ0JtYjI1ME9pQnBibWhsY21sME95QXZLaUF5SUNvdlhHNGdJRzFoY21kcGJqb2dNRHNnTHlvZ015QXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFRmtaSEpsYzNNZ1lHOTJaWEptYkc5M1lDQnpaWFFnZEc4Z1lHaHBaR1JsYm1BZ2FXNGdTVVVnT0M4NUx6RXdMekV4TGx4dUlDb3ZYRzVjYm1KMWRIUnZiaUI3WEc0Z0lHOTJaWEptYkc5M09pQjJhWE5wWW14bE8xeHVmVnh1WEc0dktpcGNiaUFxSUVGa1pISmxjM01nYVc1amIyNXphWE4wWlc1MElHQjBaWGgwTFhSeVlXNXpabTl5YldBZ2FXNW9aWEpwZEdGdVkyVWdabTl5SUdCaWRYUjBiMjVnSUdGdVpDQmdjMlZzWldOMFlDNWNiaUFxSUVGc2JDQnZkR2hsY2lCbWIzSnRJR052Ym5SeWIyd2daV3hsYldWdWRITWdaRzhnYm05MElHbHVhR1Z5YVhRZ1lIUmxlSFF0ZEhKaGJuTm1iM0p0WUNCMllXeDFaWE11WEc0Z0tpQkRiM0p5WldOMElHQmlkWFIwYjI1Z0lITjBlV3hsSUdsdWFHVnlhWFJoYm1ObElHbHVJRVpwY21WbWIzZ3NJRWxGSURndk9TOHhNQzh4TVN3Z1lXNWtJRTl3WlhKaExseHVJQ29nUTI5eWNtVmpkQ0JnYzJWc1pXTjBZQ0J6ZEhsc1pTQnBibWhsY21sMFlXNWpaU0JwYmlCR2FYSmxabTk0TGx4dUlDb3ZYRzVjYm1KMWRIUnZiaXhjYm5ObGJHVmpkQ0I3WEc0Z0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCdWIyNWxPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlERXVJRUYyYjJsa0lIUm9aU0JYWldKTGFYUWdZblZuSUdsdUlFRnVaSEp2YVdRZ05DNHdMaW9nZDJobGNtVWdLRElwSUdSbGMzUnliM2x6SUc1aGRHbDJaU0JnWVhWa2FXOWdYRzRnS2lBZ0lDQmhibVFnWUhacFpHVnZZQ0JqYjI1MGNtOXNjeTVjYmlBcUlESXVJRU52Y25KbFkzUWdhVzVoWW1sc2FYUjVJSFJ2SUhOMGVXeGxJR05zYVdOcllXSnNaU0JnYVc1d2RYUmdJSFI1Y0dWeklHbHVJR2xQVXk1Y2JpQXFJRE11SUVsdGNISnZkbVVnZFhOaFltbHNhWFI1SUdGdVpDQmpiMjV6YVhOMFpXNWplU0J2WmlCamRYSnpiM0lnYzNSNWJHVWdZbVYwZDJWbGJpQnBiV0ZuWlMxMGVYQmxYRzRnS2lBZ0lDQmdhVzV3ZFhSZ0lHRnVaQ0J2ZEdobGNuTXVYRzRnS2k5Y2JseHVZblYwZEc5dUxGeHVhSFJ0YkNCcGJuQjFkRnQwZVhCbFBWd2lZblYwZEc5dVhDSmRMQ0F2S2lBeElDb3ZYRzVwYm5CMWRGdDBlWEJsUFZ3aWNtVnpaWFJjSWwwc1hHNXBibkIxZEZ0MGVYQmxQVndpYzNWaWJXbDBYQ0pkSUh0Y2JpQWdMWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPaUJpZFhSMGIyNDdJQzhxSURJZ0tpOWNiaUFnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPeUF2S2lBeklDb3ZYRzU5WEc1Y2JpOHFLbHh1SUNvZ1VtVXRjMlYwSUdSbFptRjFiSFFnWTNWeWMyOXlJR1p2Y2lCa2FYTmhZbXhsWkNCbGJHVnRaVzUwY3k1Y2JpQXFMMXh1WEc1aWRYUjBiMjViWkdsellXSnNaV1JkTEZ4dWFIUnRiQ0JwYm5CMWRGdGthWE5oWW14bFpGMGdlMXh1SUNCamRYSnpiM0k2SUdSbFptRjFiSFE3WEc1OVhHNWNiaThxS2x4dUlDb2dVbVZ0YjNabElHbHVibVZ5SUhCaFpHUnBibWNnWVc1a0lHSnZjbVJsY2lCcGJpQkdhWEpsWm05NElEUXJMbHh1SUNvdlhHNWNibUoxZEhSdmJqbzZMVzF2ZWkxbWIyTjFjeTFwYm01bGNpeGNibWx1Y0hWME9qb3RiVzk2TFdadlkzVnpMV2x1Ym1WeUlIdGNiaUFnWW05eVpHVnlPaUF3TzF4dUlDQndZV1JrYVc1bk9pQXdPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFRmtaSEpsYzNNZ1JtbHlaV1p2ZUNBMEt5QnpaWFIwYVc1bklHQnNhVzVsTFdobGFXZG9kR0FnYjI0Z1lHbHVjSFYwWUNCMWMybHVaeUJnSVdsdGNHOXlkR0Z1ZEdBZ2FXNWNiaUFxSUhSb1pTQlZRU0J6ZEhsc1pYTm9aV1YwTGx4dUlDb3ZYRzVjYm1sdWNIVjBJSHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJRzV2Y20xaGJEdGNibjFjYmx4dUx5b3FYRzRnS2lCSmRDZHpJSEpsWTI5dGJXVnVaR1ZrSUhSb1lYUWdlVzkxSUdSdmJpZDBJR0YwZEdWdGNIUWdkRzhnYzNSNWJHVWdkR2hsYzJVZ1pXeGxiV1Z1ZEhNdVhHNGdLaUJHYVhKbFptOTRKM01nYVcxd2JHVnRaVzUwWVhScGIyNGdaRzlsYzI0bmRDQnlaWE53WldOMElHSnZlQzF6YVhwcGJtY3NJSEJoWkdScGJtY3NJRzl5SUhkcFpIUm9MbHh1SUNwY2JpQXFJREV1SUVGa1pISmxjM01nWW05NElITnBlbWx1WnlCelpYUWdkRzhnWUdOdmJuUmxiblF0WW05NFlDQnBiaUJKUlNBNEx6a3ZNVEF1WEc0Z0tpQXlMaUJTWlcxdmRtVWdaWGhqWlhOeklIQmhaR1JwYm1jZ2FXNGdTVVVnT0M4NUx6RXdMbHh1SUNvdlhHNWNibWx1Y0hWMFczUjVjR1U5WENKamFHVmphMkp2ZUZ3aVhTeGNibWx1Y0hWMFczUjVjR1U5WENKeVlXUnBiMXdpWFNCN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN0lDOHFJREVnS2k5Y2JpQWdjR0ZrWkdsdVp6b2dNRHNnTHlvZ01pQXFMMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFWnBlQ0IwYUdVZ1kzVnljMjl5SUhOMGVXeGxJR1p2Y2lCRGFISnZiV1VuY3lCcGJtTnlaVzFsYm5RdlpHVmpjbVZ0Wlc1MElHSjFkSFJ2Ym5NdUlFWnZjaUJqWlhKMFlXbHVYRzRnS2lCZ1ptOXVkQzF6YVhwbFlDQjJZV3gxWlhNZ2IyWWdkR2hsSUdCcGJuQjFkR0FzSUdsMElHTmhkWE5sY3lCMGFHVWdZM1Z5YzI5eUlITjBlV3hsSUc5bUlIUm9aVnh1SUNvZ1pHVmpjbVZ0Wlc1MElHSjFkSFJ2YmlCMGJ5QmphR0Z1WjJVZ1puSnZiU0JnWkdWbVlYVnNkR0FnZEc4Z1lIUmxlSFJnTGx4dUlDb3ZYRzVjYm1sdWNIVjBXM1I1Y0dVOVhDSnVkVzFpWlhKY0lsMDZPaTEzWldKcmFYUXRhVzV1WlhJdGMzQnBiaTFpZFhSMGIyNHNYRzVwYm5CMWRGdDBlWEJsUFZ3aWJuVnRZbVZ5WENKZE9qb3RkMlZpYTJsMExXOTFkR1Z5TFhOd2FXNHRZblYwZEc5dUlIdGNiaUFnYUdWcFoyaDBPaUJoZFhSdk8xeHVmVnh1WEc0dktpcGNiaUFxSURFdUlFRmtaSEpsYzNNZ1lHRndjR1ZoY21GdVkyVmdJSE5sZENCMGJ5QmdjMlZoY21Ob1ptbGxiR1JnSUdsdUlGTmhabUZ5YVNCaGJtUWdRMmh5YjIxbExseHVJQ29nTWk0Z1FXUmtjbVZ6Y3lCZ1ltOTRMWE5wZW1sdVoyQWdjMlYwSUhSdklHQmliM0prWlhJdFltOTRZQ0JwYmlCVFlXWmhjbWtnWVc1a0lFTm9jbTl0WlM1Y2JpQXFMMXh1WEc1cGJuQjFkRnQwZVhCbFBWd2ljMlZoY21Ob1hDSmRJSHRjYmlBZ0xYZGxZbXRwZEMxaGNIQmxZWEpoYm1ObE9pQjBaWGgwWm1sbGJHUTdJQzhxSURFZ0tpOWNiaUFnWW05NExYTnBlbWx1WnpvZ1kyOXVkR1Z1ZEMxaWIzZzdJQzhxSURJZ0tpOWNibjFjYmx4dUx5b3FYRzRnS2lCU1pXMXZkbVVnYVc1dVpYSWdjR0ZrWkdsdVp5QmhibVFnYzJWaGNtTm9JR05oYm1ObGJDQmlkWFIwYjI0Z2FXNGdVMkZtWVhKcElHRnVaQ0JEYUhKdmJXVWdiMjRnVDFNZ1dDNWNiaUFxSUZOaFptRnlhU0FvWW5WMElHNXZkQ0JEYUhKdmJXVXBJR05zYVhCeklIUm9aU0JqWVc1alpXd2dZblYwZEc5dUlIZG9aVzRnZEdobElITmxZWEpqYUNCcGJuQjFkQ0JvWVhOY2JpQXFJSEJoWkdScGJtY2dLR0Z1WkNCZ2RHVjRkR1pwWld4a1lDQmhjSEJsWVhKaGJtTmxLUzVjYmlBcUwxeHVYRzVwYm5CMWRGdDBlWEJsUFZ3aWMyVmhjbU5vWENKZE9qb3RkMlZpYTJsMExYTmxZWEpqYUMxallXNWpaV3d0WW5WMGRHOXVMRnh1YVc1d2RYUmJkSGx3WlQxY0luTmxZWEpqYUZ3aVhUbzZMWGRsWW10cGRDMXpaV0Z5WTJndFpHVmpiM0poZEdsdmJpQjdYRzRnSUMxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRvZ2JtOXVaVHRjYm4xY2JseHVMeW9xWEc0Z0tpQkVaV1pwYm1VZ1kyOXVjMmx6ZEdWdWRDQmliM0prWlhJc0lHMWhjbWRwYml3Z1lXNWtJSEJoWkdScGJtY3VYRzRnS2k5Y2JseHVabWxsYkdSelpYUWdlMXh1SUNCaWIzSmtaWEk2SURGd2VDQnpiMnhwWkNBall6QmpNR013TzF4dUlDQnRZWEpuYVc0NklEQWdNbkI0TzF4dUlDQndZV1JrYVc1bk9pQXdMak0xWlcwZ01DNDJNalZsYlNBd0xqYzFaVzA3WEc1OVhHNWNiaThxS2x4dUlDb2dNUzRnUTI5eWNtVmpkQ0JnWTI5c2IzSmdJRzV2ZENCaVpXbHVaeUJwYm1obGNtbDBaV1FnYVc0Z1NVVWdPQzg1THpFd0x6RXhMbHh1SUNvZ01pNGdVbVZ0YjNabElIQmhaR1JwYm1jZ2MyOGdjR1Z2Y0d4bElHRnlaVzRuZENCallYVm5hSFFnYjNWMElHbG1JSFJvWlhrZ2VtVnlieUJ2ZFhRZ1ptbGxiR1J6WlhSekxseHVJQ292WEc1Y2JteGxaMlZ1WkNCN1hHNGdJR0p2Y21SbGNqb2dNRHNnTHlvZ01TQXFMMXh1SUNCd1lXUmthVzVuT2lBd095QXZLaUF5SUNvdlhHNTlYRzVjYmk4cUtseHVJQ29nVW1WdGIzWmxJR1JsWm1GMWJIUWdkbVZ5ZEdsallXd2djMk55YjJ4c1ltRnlJR2x1SUVsRklEZ3ZPUzh4TUM4eE1TNWNiaUFxTDF4dVhHNTBaWGgwWVhKbFlTQjdYRzRnSUc5MlpYSm1iRzkzT2lCaGRYUnZPMXh1ZlZ4dVhHNHZLaXBjYmlBcUlFUnZiaWQwSUdsdWFHVnlhWFFnZEdobElHQm1iMjUwTFhkbGFXZG9kR0FnS0dGd2NHeHBaV1FnWW5rZ1lTQnlkV3hsSUdGaWIzWmxLUzVjYmlBcUlFNVBWRVU2SUhSb1pTQmtaV1poZFd4MElHTmhibTV2ZENCellXWmxiSGtnWW1VZ1kyaGhibWRsWkNCcGJpQkRhSEp2YldVZ1lXNWtJRk5oWm1GeWFTQnZiaUJQVXlCWUxseHVJQ292WEc1Y2JtOXdkR2R5YjNWd0lIdGNiaUFnWm05dWRDMTNaV2xuYUhRNklHSnZiR1E3WEc1OVhHNWNiaThxSUZSaFlteGxjMXh1SUNBZ1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUx5b3FYRzRnS2lCU1pXMXZkbVVnYlc5emRDQnpjR0ZqYVc1bklHSmxkSGRsWlc0Z2RHRmliR1VnWTJWc2JITXVYRzRnS2k5Y2JseHVkR0ZpYkdVZ2UxeHVJQ0JpYjNKa1pYSXRZMjlzYkdGd2MyVTZJR052Ykd4aGNITmxPMXh1SUNCaWIzSmtaWEl0YzNCaFkybHVaem9nTUR0Y2JuMWNibHh1ZEdRc1hHNTBhQ0I3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzU5WEc1Y2JpOHFYRzRnSUNBcUlFUmxabUYxYkhRZ2MyVjBkR2x1WjNNNlhHNGdJQ0FxTDF4dUx5cGNiaUFnSUNvZ1FuSmxZV3R3YjJsdWRDQnpaWFIxY0RwY2JpQWdJQ292WEc0dWFHVnlieUI3WEc0Z0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNiaUFnZWkxcGJtUmxlRG9nTVR0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2JpQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQmpaVzUwWlhJN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lHMXBiaTFvWldsbmFIUTZJRFV3TUhCNE8xeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdZbUZqYTJkeWIzVnVaQzF3YjNOcGRHbHZiam9nTlRBbElEVXdKVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXlaWEJsWVhRNklHNXZMWEpsY0dWaGREdGNiaUFnWW1GamEyZHliM1Z1WkMxemFYcGxPaUJqYjNabGNqdGNiaUFnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dWZWeHVMbWhsY204dGMzUnBZMnQ1TFdobFlXUmxjaXhjYmk1b1pYSnZYMTlvWldGa1pYSWdlMXh1SUNCNkxXbHVaR1Y0T2lBeE1EQTdYRzRnSUhCaFpHUnBibWM2SURGbGJUdGNiaUFnWTI5c2IzSTZJQ05tWm1ZN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dWZWeHVMbWhsY204dGMzUnBZMnQ1TFdobFlXUmxjaUJvTXl4Y2JpNW9aWEp2WDE5b1pXRmtaWElnYURNZ2UxeHVJQ0JtYjI1MExYTnBlbVU2SURFdU1USTFjbVZ0TzF4dUlDQnZjR0ZqYVhSNU9pQXdMamM3WEc0Z0lHMWhjbWRwYmpvZ01EdGNibjFjYmk1b1pYSnZMWE4wYVdOcmVTMW9aV0ZrWlhJZ2UxeHVJQ0IyYVhOcFltbHNhWFI1T2lCb2FXUmtaVzQ3WEc0Z0lIQnZjMmwwYVc5dU9pQm1hWGhsWkR0Y2JpQWdkRzl3T2lBd08xeHVJQ0JzWldaME9pQXdPMXh1SUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ05UQWxJRFV3SlR0Y2JpQWdZbUZqYTJkeWIzVnVaQzF5WlhCbFlYUTZJRzV2TFhKbGNHVmhkRHRjYmlBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lCamIzWmxjanRjYm4xY2JpNW9aWEp2TFhOMGFXTnJlUzFvWldGa1pYSWdQaUFxSUh0Y2JpQWdkbWx6YVdKcGJHbDBlVG9nYUdsa1pHVnVPMXh1ZlZ4dUxtaGxjbTh1TFdWbVptVmpkQzFrWVhKclpXNDZPbUpsWm05eVpTeGNiaTVvWlhKdkxpMWxabVpsWTNRdGJHbG5hSFJsYmpvNlltVm1iM0psSUh0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCMGIzQTZJREE3WEc0Z0lISnBaMmgwT2lBd08xeHVJQ0JpYjNSMGIyMDZJREE3WEc0Z0lHeGxablE2SURBN1hHNGdJSG90YVc1a1pYZzZJREE3WEc0Z0lHTnZiblJsYm5RNklGd2lJRndpTzF4dUlDQnZjR0ZqYVhSNU9pQXdMakk3WEc1OVhHNHVhR1Z5Ynk0dFpXWm1aV04wTFdSaGNtdGxiam82WW1WbWIzSmxJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6QXdNRHRjYm4xY2JpNW9aWEp2TGkxbFptWmxZM1F0YkdsbmFIUmxiam82WW1WbWIzSmxJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0kyWm1aanRjYm4xY2JpNW9aWEp2WDE5b1pXRmtaWElnZTF4dUlDQmhiR2xuYmkxelpXeG1PaUJtYkdWNExYTjBZWEowTzF4dWZWeHVMbWhsY204Z1kyOWtaU0I3WEc0Z0lHWnZiblF0YzJsNlpUb2dNMlZ0TzF4dWZWeHVMbWhsY204Z2NDQjdYRzRnSUdadmJuUXRjMmw2WlRvZ01TNDFaVzA3WEc1OVhHNHVhR1Z5YjE5ZlkyOXVkR0ZwYm1WeUlIdGNiaUFnZWkxcGJtUmxlRG9nT1RrN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hHNGdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2dZMlZ1ZEdWeU8xeHVJQ0JtYkdWNE9pQXhJREFnWVhWMGJ6dGNiaUFnWTI5c2IzSTZJQ05sTUdVd1pUQTdYRzU5WEc0dVkyOXVkR1Z1ZENCN1hHNGdJSEJoWkdScGJtYzZJREZsYlR0Y2JuMWNiaTVqYjI1MFpXNTBMUzFqYjJ4c1lYQnpaU0I3WEc0Z0lHMXBiaTFvWldsbmFIUTZJR2x1YVhScFlXdzdYRzU5WEc0dVkyOXVkR1Z1ZEY5ZlkyOXVkR0ZwYm1WeUxGeHVMbU52Ym5SbGJuUmZYMk52Ym5SaGFXNWxjaTB0Wlhod1lXNWtJSHRjYmlBZ1ltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0kyVXdaVEJsTUR0Y2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ00zQjRPMXh1ZlZ4dUxtTnZiblJsYm5SZlgyTnZiblJoYVc1bGNpMHRaWGh3WVc1a0lIdGNiaUFnYldsdUxXaGxhV2RvZERvZ05EazJjSGc3WEc1OVhHNHZLaUJwVUdodmJtVWdXM0J2Y25SeVlXbDBJQ3NnYkdGdVpITmpZWEJsWFNBcUwxeHVRRzFsWkdsaElHOXViSGtnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQXpNR1Z0S1NCN1hHNGdJQzVvWlhKdkxYTjBhV05yZVMxb1pXRmtaWElnZTF4dUlDQWdJSFpwYzJsaWFXeHBkSGs2SUhacGMybGliR1U3WEc0Z0lIMWNiaUFnTG1obGNtOHRjM1JwWTJ0NUxXaGxZV1JsY2lBK0lDb2dlMXh1SUNBZ0lIWnBjMmxpYVd4cGRIazZJSFpwYzJsaWJHVTdYRzRnSUgxY2JuMWNiaThxSUdsUVlXUWdXM0J2Y25SeVlXbDBJQ3NnYkdGdVpITmpZWEJsWFNBcUwxeHVRRzFsWkdsaElHOXViSGtnYzJOeVpXVnVJR0Z1WkNBb2JXbHVMWGRwWkhSb09pQTBPR1Z0S1NCaGJtUWdLRzFoZUMxM2FXUjBhRG9nTmpSbGJTa2dlMXh1SUNBdWFHVnlieUI3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFoZEhSaFkyaHRaVzUwT2lCelkzSnZiR3c3WEc0Z0lIMWNiaUFnTG1obGNtOHRjM1JwWTJ0NUxXaGxZV1JsY2lCN1hHNGdJQ0FnZG1semFXSnBiR2wwZVRvZ2RtbHphV0pzWlR0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2lBMU1DVWdNVEF3SlR0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdGMGRHRmphRzFsYm5RNklITmpjbTlzYkR0Y2JpQWdmVnh1ZlZ4dUlpd2lMeW9nZG1WeWMybHZiam9nTUM0MkxqRWdLaTljYmx4dVltRnpaUzFtYjI1MExYTnBlbVVnUHowZ01UWndlRnh1Y21GemRHVnlhWE5sTFcxbFpHbGhMWEYxWlhKcFpYTWdQejBnWm1Gc2MyVmNibHh1Y25Wd2RIVnlaU0E5SUh0Y2JpQWdjbUZ6ZEdWeWFYTmxMVzFsWkdsaExYRjFaWEpwWlhNNklISmhjM1JsY21selpTMXRaV1JwWVMxeGRXVnlhV1Z6WEc0Z0lHMXZZbWxzWlMxamRYUnZabVk2SURRd01IQjRYRzRnSUdSbGMydDBiM0F0WTNWMGIyWm1PaUF4TURVd2NIaGNiaUFnYUdRdFkzVjBiMlptT2lBeE9EQXdjSGhjYmlBZ1pXNWhZbXhsTFdWdExXSnlaV0ZyY0c5cGJuUnpPaUJtWVd4elpWeHVJQ0JpWVhObExXWnZiblF0YzJsNlpUb2dZbUZ6WlMxbWIyNTBMWE5wZW1WY2JpQWdZVzUwYVMxdmRtVnliR0Z3T2lCbVlXeHpaVnh1SUNCa1pXNXphWFI1TFhGMVpYSnBaWE02SUNka2NIQjRKeUFuZDJWaWEybDBKeUFuYlc5Nkp5QW5aSEJwSjF4dUlDQnlaWFJwYm1FdFpHVnVjMmwwZVRvZ01TNDFYRzRnSUhWelpTMWtaWFpwWTJVdGQybGtkR2c2SUdaaGJITmxYRzU5WEc1eWRYQjBkWEpsTG5OallXeGxJRDBnTUNBb2NuVndkSFZ5WlM1dGIySnBiR1V0WTNWMGIyWm1LU0EyTURCd2VDQTRNREJ3ZUNBb2NuVndkSFZ5WlM1a1pYTnJkRzl3TFdOMWRHOW1aaWtnS0hKMWNIUjFjbVV1YUdRdFkzVjBiMlptS1Z4dWNuVndkSFZ5WlM1elkyRnNaUzF1WVcxbGN5QTlJQ2Q0Y3ljZ0ozTW5JQ2R0SnlBbmJDY2dKM2hzSnlBbmFHUW5YRzVjYmkxcGN5MXpkSEpwYm1jb2RtRnNLVnh1SUNCcFppQjBlWEJsYjJZb2RtRnNLU0JwY3lCdWIzUWdKM1Z1YVhRblhHNGdJQ0FnYVdZZ2RtRnNJR2x6SUdFZ0ozTjBjbWx1WnljZ2IzSWdkbUZzSUdseklHRWdKMmxrWlc1MEoxeHVJQ0FnSUNBZ2RISjFaVnh1SUNBZ0lHVnNjMlZjYmlBZ0lDQWdJR1poYkhObFhHNGdJR1ZzYzJWY2JpQWdJQ0JtWVd4elpWeHVYRzR0WjJWMExYTmpZV3hsTFc1MWJXSmxjaWh6WTJGc1pTMXVZVzFsS1Z4dUlDQm1iM0lnYkdsemRDMXBkR1Z0TENCcElHbHVJSEoxY0hSMWNtVXVjMk5oYkdVdGJtRnRaWE5jYmlBZ0lDQnBaaUJzYVhOMExXbDBaVzBnYVhNZ2MyTmhiR1V0Ym1GdFpWeHVJQ0FnSUNBZ2NtVjBkWEp1SUdrZ0t5QXhYRzRnSUhKbGRIVnliaUJtWVd4elpWeHVYRzR0WTI5dWRtVnlkQzEwYnloMGJ5MTFibWwwTENCMllXeDFaU3dnWTI5dWRHVjRkQ0E5SUhKMWNIUjFjbVV1WW1GelpTMW1iMjUwTFhOcGVtVXBYRzRnSUdaeWIyMHRkVzVwZENBOUlIVnVhWFFvZG1Gc2RXVXBYRzRnSUhKbGRIVnliaUIyWVd4MVpTQnBaaUIwYnkxMWJtbDBJR2x6SUdaeWIyMHRkVzVwZEZ4dUlDQnBaaUIwYnkxMWJtbDBJR2x1SUNnblpXMG5JQ2R5WlcwbktWeHVJQ0FnSUhKbGRIVnliaUIyWVd4MVpTQnBaaUJtY205dExYVnVhWFFnYVc0Z0tDZGxiU2NnSjNKbGJTY3BYRzRnSUNBZ2NtVjBkWEp1SUhWdWFYUW9LSFpoYkhWbElDOGdZMjl1ZEdWNGRDa3NJSFJ2TFhWdWFYUXBYRzRnSUdsbUlIUnZMWFZ1YVhRZ2FYTWdKM0I0SjF4dUlDQWdJSEpsZEhWeWJpQjFibWwwS0NoMllXeDFaU0FxSUdOdmJuUmxlSFFwTENBbmNIZ25LVnh1WEc0dGIyNHRjMk5oYkdVb2JpbGNiaUFnY21WMGRYSnVJSFZ1YVhRb2Jpa2dhWE1nSnlkY2JseHVMV3hoY21kbGNpMTBhR0Z1TFhOallXeGxLRzRwWEc0Z0lISmxkSFZ5YmlBb2JpQStJQ2hzWlc1bmRHZ29jblZ3ZEhWeVpTNXpZMkZzWlNrZ0xTQXhLU2tnWVc1a0lDMXZiaTF6WTJGc1pTaHVLVnh1WEc0dGFYTXRlbVZ5YnlodUtWeHVJQ0J5WlhSMWNtNGdiaUJwY3lBd1hHNWNiaTF2ZG1WeWJHRndMWE5vYVdaMEtHRnVkR2t0YjNabGNteGhjQ3dnYmlsY2JpQWdjMmhwWm5RdGRXNXBkQ0E5SUhWdWFYUW9iaWxjYmlBZ1lXNTBhUzF2ZG1WeWJHRndJRDBnTUhCNElIVnViR1Z6Y3lCaGJuUnBMVzkyWlhKc1lYQmNiaUFnWVc1MGFTMXZkbVZ5YkdGd0lEMGdNWEI0SUdsbUlHRnVkR2t0YjNabGNteGhjQ0JwY3lCMGNuVmxYRzRnSUdsbUlHeGxibWQwYUNoaGJuUnBMVzkyWlhKc1lYQXBJR2x6SURGY2JpQWdJQ0J5WlhSMWNtNGdMV052Ym5abGNuUXRkRzhvYzJocFpuUXRkVzVwZEN3Z1lXNTBhUzF2ZG1WeWJHRndLVnh1SUNCbWIzSWdkbUZzSUdsdUlHRnVkR2t0YjNabGNteGhjRnh1SUNBZ0lISmxkSFZ5YmlCMllXd2dhV1lnZFc1cGRDaDJZV3dwSUdseklITm9hV1owTFhWdWFYUmNibHh1TFdGa2FuVnpkQzF2ZG1WeWJHRndLR0Z1ZEdrdGIzWmxjbXhoY0N3Z2Jpd2djMmxrWlNBOUlDZHRhVzRuS1Z4dUlDQXRjMmhwWm5RZ1BTQXRiM1psY214aGNDMXphR2xtZENoaGJuUnBMVzkyWlhKc1lYQXNJRzRwWEc0Z0lHbG1JQ2h6YVdSbElHbHpJQ2R0YVc0bklHRnVaQ0F0YzJocFpuUWdQaUF3S1NCdmNpQW9jMmxrWlNCcGN5QW5iV0Y0SnlCaGJtUWdMWE5vYVdaMElEd2dNQ2xjYmlBZ0lDQnVJRDBnYmlBcklDMXphR2xtZEZ4dUlDQnlaWFIxY200Z2JseHVYRzR0YVhNdGNHOXphWFJwZG1Vb2JpbGNiaUFnY21WMGRYSnVJRzRnUGowZ01GeHVYRzR0WkdWdWMybDBlUzF4ZFdWeWFXVnpLR1JsYm5OcGRIa3BYRzRnSUdsbUlIUjVjR1Z2Wmloa1pXNXphWFI1S1NCcGN5QnViM1FnSjNWdWFYUW5YRzRnSUNBZ2FXWWdibTkwSUMxcGN5MXpkSEpwYm1jb1pHVnVjMmwwZVNsY2JpQWdJQ0FnSUdSbGJuTnBkSGtnUFNBbkpYTW5JQ1VnWkdWdWMybDBlVnh1SUNCa1pXNXphWFI1SUQwZ2NuVndkSFZ5WlM1eVpYUnBibUV0WkdWdWMybDBlU0JwWmlCa1pXNXphWFI1SUdseklDZHlaWFJwYm1FblhHNGdJSEYxWlhKcFpYTWdQU0FvS1Z4dUlDQm1iM0lnY1hWbGNua2dhVzRnY25Wd2RIVnlaUzVrWlc1emFYUjVMWEYxWlhKcFpYTmNiaUFnSUNCcFppQnhkV1Z5ZVNCcGN5QW5kMlZpYTJsMEoxeHVJQ0FnSUNBZ2NIVnphQ2h4ZFdWeWFXVnpMQ0FuS0MxM1pXSnJhWFF0YldsdUxXUmxkbWxqWlMxd2FYaGxiQzF5WVhScGJ6b2dKWE1wSnlBbElDaGtaVzV6YVhSNUtTbGNiaUFnSUNCbGJITmxJR2xtSUhGMVpYSjVJR2x6SUNkdGIzb25YRzRnSUNBZ0lDQndkWE5vS0hGMVpYSnBaWE1zSUNjb2JXbHVMUzF0YjNvdFpHVjJhV05sTFhCcGVHVnNMWEpoZEdsdk9pQWxjeWtuSUNVZ0tHUmxibk5wZEhrcEtWeHVJQ0FnSUdWc2MyVWdhV1lnY1hWbGNua2dhWE1nSjI4blhHNGdJQ0FnSUNCd2RYTm9LSEYxWlhKcFpYTXNJQ2NvTFc4dGJXbHVMV1JsZG1salpTMXdhWGhsYkMxeVlYUnBiem9nSlhNdk1Ta25JQ1VnS0dSbGJuTnBkSGtwS1Z4dUlDQWdJR1ZzYzJVZ2FXWWdjWFZsY25rZ2FYTWdKM0poZEdsdkoxeHVJQ0FnSUNBZ2NIVnphQ2h4ZFdWeWFXVnpMQ0FuS0cxcGJpMWtaWFpwWTJVdGNHbDRaV3d0Y21GMGFXODZJQ1Z6S1NjZ0pTQW9aR1Z1YzJsMGVTa3BYRzRnSUNBZ1pXeHpaU0JwWmlCeGRXVnllU0JwY3lBblpIQnBKMXh1SUNBZ0lDQWdhV1lnTFdsekxYTjBjbWx1Wnloa1pXNXphWFI1S1Z4dUlDQWdJQ0FnSUNCa1pXNXphWFI1UFdOdmJuWmxjblFvWkdWdWMybDBlU2xjYmlBZ0lDQWdJSEIxYzJnb2NYVmxjbWxsY3l3Z0p5aHRhVzR0Y21WemIyeDFkR2x2YmpvZ0pYTmtjR2twSnlBbElDaHliM1Z1WkNoa1pXNXphWFI1SUNvZ09UWXNJREVwS1NsY2JpQWdJQ0JsYkhObElHbG1JSEYxWlhKNUlHbHpJQ2RrY0hCNEoxeHVJQ0FnSUNBZ2NIVnphQ2h4ZFdWeWFXVnpMQ0FuS0cxcGJpMXlaWE52YkhWMGFXOXVPaUFsYzJSd2NIZ3BKeUFsSUNoa1pXNXphWFI1S1NsY2JpQWdjbVYwZFhKdUlIRjFaWEpwWlhOY2JseHVZM0psWVhSbExXWmhiR3hpWVdOckxXTnNZWE56S0hObGJHVmpkR1ZrTENCamJHRnpjeWxjYmlBZ0wzc25KeUFySUdOc1lYTnpJQ3NnSnlBbklDc2djMlZzWldOMFpXUjlYRzRnSUNBZ2UySnNiMk5yZlZ4dVhHNHZMeUFyWW1WMGQyVmxiaWh0YVc0c0lHMWhlQ2xjYmk4dklIVnpZV2RsSUNoelkyRnNaU0JqWVc0Z1ltVWdiV2w0WldRZ2QybDBhQ0JqZFhOMGIyMGdkbUZzZFdWektUcGNiaTh2SUNBZ0xTQXJZbVYwZDJWbGJpZ3hMQ0F6S1NCelkyRnNaVHB6WTJGc1pWeHVMeThnSUNBdElDdGlaWFIzWldWdUtEQXNJRE1wSURBZ2QybGtkR2c2YzJOaGJHVmNiaTh2SUNBZ0xTQXJZbVYwZDJWbGJpZ3lNREJ3ZUN3Z05UQXdjSGdwSUdOMWMzUnZiVHBqZFhOMGIyMWNiaTh2SUNBZ0xTQXJZbVYwZDJWbGJpZ3dMQ0F6TURCd2VDa2dNQ0IzYVdSMGFEcGpkWE4wYjIxY2JpOHZJQ0FnTFNBclltVjBkMlZsYmlneExDQXpNREJ3ZUNrZ2MyTmhiR1U2WTNWemRHOXRYRzR2THlBZ0lDMGdLMkpsZEhkbFpXNG9NakF3Y0hnc0lEUXBJR04xYzNSdmJUcHpZMkZzWlZ4dVhHNWlaWFIzWldWdUtHMXBiaXdnYldGNExDQmhiblJwTFc5MlpYSnNZWEFnUFNCeWRYQjBkWEpsTG1GdWRHa3RiM1psY214aGNDd2daR1Z1YzJsMGVTQTlJRzUxYkd3c0lHOXlhV1Z1ZEdGMGFXOXVJRDBnYm5Wc2JDd2dkWE5sTFdSbGRtbGpaUzEzYVdSMGFDQTlJSEoxY0hSMWNtVXVkWE5sTFdSbGRtbGpaUzEzYVdSMGFDd2dabUZzYkdKaFkyc3RZMnhoYzNNZ1BTQnVkV3hzS1Z4dUlDQnpaV3hsWTNSbFpDQTlJSE5sYkdWamRHOXlLQ2xjYmx4dUlDQnBaaUF0YVhNdGMzUnlhVzVuS0c5eWFXVnVkR0YwYVc5dUtWeHVJQ0FnSUc5eWFXVnVkR0YwYVc5dUlEMGdZMjl1ZG1WeWRDaHZjbWxsYm5SaGRHbHZiaWxjYmlBZ2FXWWdMV2x6TFhOMGNtbHVaeWhrWlc1emFYUjVLVnh1SUNBZ0lHUmxibk5wZEhrZ1BTQmpiMjUyWlhKMEtHUmxibk5wZEhrcFhHNGdJR2xtSUMxcGN5MXpkSEpwYm1jb2JXbHVLVnh1SUNBZ0lHMXBiaUE5SUMxblpYUXRjMk5oYkdVdGJuVnRZbVZ5S0cxcGJpbGNiaUFnYVdZZ0xXbHpMWE4wY21sdVp5aHRZWGdwWEc0Z0lDQWdiV0Y0SUQwZ0xXZGxkQzF6WTJGc1pTMXVkVzFpWlhJb2JXRjRLVnh1WEc0Z0lDMXRhVzRnUFNCeWRYQjBkWEpsTG5OallXeGxXMjFwYmlBdElERmRJSFZ1YkdWemN5QXRhWE10ZW1WeWJ5aHRhVzRwSUc5eUlDaHViM1FnTFc5dUxYTmpZV3hsS0cxcGJpa3BYRzRnSUMxdFlYZ2dQU0J5ZFhCMGRYSmxMbk5qWVd4bFcyMWhlRjBnZFc1c1pYTnpJRzV2ZENBdGIyNHRjMk5oYkdVb2JXRjRLVnh1SUNBdGJXbHVJRDg5SUcxcGJseHVJQ0F0YldGNElEODlJRzFoZUZ4dVhHNGdJR2xtSUNoeWRYQjBkWEpsTG5KaGMzUmxjbWx6WlMxdFpXUnBZUzF4ZFdWeWFXVnpLVnh1SUNBZ0lHbG1JRzV2ZENBb1pHVnVjMmwwZVNCdmNpQXRiV0Y0SUc5eUlHOXlhV1Z1ZEdGMGFXOXVLVnh1SUNBZ0lDQWdlMkpzYjJOcmZWeHVJQ0JsYkhObFhHNGdJQ0FnWTI5dVpHbDBhVzl1SUQwZ0oyOXViSGtnYzJOeVpXVnVKMXh1SUNBZ0lIVnpaUzFrWlhacFkyVXRkMmxrZEdnZ1BTQjFjMlV0WkdWMmFXTmxMWGRwWkhSb0lEOGdKMlJsZG1salpTMG5JRG9nSnlkY2JpQWdJQ0IxYm14bGMzTWdMVzFwYmlCcGN5QXdYRzRnSUNBZ0lDQXRiV2x1SUQwZ0xXTnZiblpsY25RdGRHOG9KMlZ0Snl3Z0xXMXBiaWtnYVdZZ2NuVndkSFZ5WlM1bGJtRmliR1V0WlcwdFluSmxZV3R3YjJsdWRITmNiaUFnSUNBZ0lDMXRhVzRnUFNBdFlXUnFkWE4wTFc5MlpYSnNZWEFvWVc1MGFTMXZkbVZ5YkdGd0xDQXRiV2x1TENCemFXUmxPaUFuYldsdUp5bGNiaUFnSUNBZ0lHTnZibVJwZEdsdmJpQTlJR052Ym1ScGRHbHZiaUFySUNjZ1lXNWtJQ2h0YVc0dEp5QXJJSFZ6WlMxa1pYWnBZMlV0ZDJsa2RHZ2dLeUFuZDJsa2RHZzZJQ1Z6S1NjZ0pTQW9MVzFwYmlsY2JpQWdJQ0IxYm14bGMzTWdMV3hoY21kbGNpMTBhR0Z1TFhOallXeGxLRzFoZUNsY2JpQWdJQ0FnSUMxdFlYZ2dQU0F0WTI5dWRtVnlkQzEwYnlnblpXMG5MQ0F0YldGNEtTQnBaaUJ5ZFhCMGRYSmxMbVZ1WVdKc1pTMWxiUzFpY21WaGEzQnZhVzUwYzF4dUlDQWdJQ0FnTFcxaGVDQTlJQzFoWkdwMWMzUXRiM1psY214aGNDaGhiblJwTFc5MlpYSnNZWEFzSUMxdFlYZ3NJSE5wWkdVNklDZHRZWGduS1Z4dUlDQWdJQ0FnWTI5dVpHbDBhVzl1SUQwZ1kyOXVaR2wwYVc5dUlDc2dKeUJoYm1RZ0tHMWhlQzBuSUNzZ2RYTmxMV1JsZG1salpTMTNhV1IwYUNBcklDZDNhV1IwYURvZ0pYTXBKeUFsSUNndGJXRjRLVnh1SUNBZ0lHbG1JRzl5YVdWdWRHRjBhVzl1WEc0Z0lDQWdJQ0JqYjI1a2FYUnBiMjRnUFNCamIyNWthWFJwYjI0Z0t5QW5JR0Z1WkNBb2IzSnBaVzUwWVhScGIyNDZJQ1Z6S1NjZ0pTQW9iM0pwWlc1MFlYUnBiMjRwWEc0Z0lDQWdhV1lnWkdWdWMybDBlVnh1SUNBZ0lDQWdZMjl1WkdsMGFXOXVjeUE5SUNncFhHNGdJQ0FnSUNCbWIzSWdjWFZsY25rZ2FXNGdMV1JsYm5OcGRIa3RjWFZsY21sbGN5aGtaVzV6YVhSNUtWeHVJQ0FnSUNBZ0lDQndkWE5vS0dOdmJtUnBkR2x2Ym5Nc0lHTnZibVJwZEdsdmJpQXJJQ2NnWVc1a0lDVnpKeUFsSUNoeGRXVnllU2twWEc0Z0lDQWdJQ0JqYjI1a2FYUnBiMjRnUFNCcWIybHVLQ2NzSUNjc0lHTnZibVJwZEdsdmJuTXBYRzRnSUNBZ1FHMWxaR2xoSUdOdmJtUnBkR2x2Ymx4dUlDQWdJQ0FnZTJKc2IyTnJmVnh1SUNCcFppQm1ZV3hzWW1GamF5MWpiR0Z6YzF4dUlDQWdJQ3RqY21WaGRHVXRabUZzYkdKaFkyc3RZMnhoYzNNb2MyVnNaV04wWldRc0lHWmhiR3hpWVdOckxXTnNZWE56S1Z4dUlDQWdJQ0FnZTJKc2IyTnJmVnh1WEc1aGRDaHpZMkZzWlMxd2IybHVkQ3dnWVc1MGFTMXZkbVZ5YkdGd0lEMGdjblZ3ZEhWeVpTNWhiblJwTFc5MlpYSnNZWEFzSUdSbGJuTnBkSGtnUFNCdWRXeHNMQ0J2Y21sbGJuUmhkR2x2YmlBOUlHNTFiR3dzSUhWelpTMWtaWFpwWTJVdGQybGtkR2dnUFNCeWRYQjBkWEpsTG5WelpTMWtaWFpwWTJVdGQybGtkR2dzSUdaaGJHeGlZV05yTFdOc1lYTnpJRDBnYm5Wc2JDbGNiaUFnYVdZZ0xXbHpMWE4wY21sdVp5aHZjbWxsYm5SaGRHbHZiaWxjYmlBZ0lDQnZjbWxsYm5SaGRHbHZiaUE5SUdOdmJuWmxjblFvYjNKcFpXNTBZWFJwYjI0cFhHNGdJR2xtSUMxcGN5MXpkSEpwYm1jb1pHVnVjMmwwZVNsY2JpQWdJQ0JrWlc1emFYUjVJRDBnWTI5dWRtVnlkQ2hrWlc1emFYUjVLVnh1SUNBclltVjBkMlZsYmloelkyRnNaUzF3YjJsdWRDd2djMk5oYkdVdGNHOXBiblFzSUdGdWRHa3RiM1psY214aGNDd2daR1Z1YzJsMGVTd2diM0pwWlc1MFlYUnBiMjRzSUhWelpTMWtaWFpwWTJVdGQybGtkR2dzSUdaaGJHeGlZV05yTFdOc1lYTnpLVnh1SUNBZ0lIdGliRzlqYTMxY2JseHVabkp2YlMxM2FXUjBhQ2h6WTJGc1pTMXdiMmx1ZEN3Z1lXNTBhUzF2ZG1WeWJHRndJRDBnY25Wd2RIVnlaUzVoYm5ScExXOTJaWEpzWVhBc0lHUmxibk5wZEhrZ1BTQnVkV3hzTENCdmNtbGxiblJoZEdsdmJpQTlJRzUxYkd3c0lIVnpaUzFrWlhacFkyVXRkMmxrZEdnZ1BTQnlkWEIwZFhKbExuVnpaUzFrWlhacFkyVXRkMmxrZEdnc0lHWmhiR3hpWVdOckxXTnNZWE56SUQwZ2JuVnNiQ2xjYmlBZ2FXWWdMV2x6TFhOMGNtbHVaeWh2Y21sbGJuUmhkR2x2YmlsY2JpQWdJQ0J2Y21sbGJuUmhkR2x2YmlBOUlHTnZiblpsY25Rb2IzSnBaVzUwWVhScGIyNHBYRzRnSUdsbUlDMXBjeTF6ZEhKcGJtY29aR1Z1YzJsMGVTbGNiaUFnSUNCa1pXNXphWFI1SUQwZ1kyOXVkbVZ5ZENoa1pXNXphWFI1S1Z4dUlDQXJZbVYwZDJWbGJpaHpZMkZzWlMxd2IybHVkQ3dnYkdWdVozUm9LSEoxY0hSMWNtVXVjMk5oYkdVcExDQmhiblJwTFc5MlpYSnNZWEFzSUdSbGJuTnBkSGtzSUc5eWFXVnVkR0YwYVc5dUxDQjFjMlV0WkdWMmFXTmxMWGRwWkhSb0xDQm1ZV3hzWW1GamF5MWpiR0Z6Y3lsY2JpQWdJQ0I3WW14dlkydDlYRzVjYm1GaWIzWmxJRDBnWm5KdmJTMTNhV1IwYUZ4dVhHNTBieTEzYVdSMGFDaHpZMkZzWlMxd2IybHVkQ3dnWVc1MGFTMXZkbVZ5YkdGd0lEMGdjblZ3ZEhWeVpTNWhiblJwTFc5MlpYSnNZWEFzSUdSbGJuTnBkSGtnUFNCdWRXeHNMQ0J2Y21sbGJuUmhkR2x2YmlBOUlHNTFiR3dzSUhWelpTMWtaWFpwWTJVdGQybGtkR2dnUFNCeWRYQjBkWEpsTG5WelpTMWtaWFpwWTJVdGQybGtkR2dzSUdaaGJHeGlZV05yTFdOc1lYTnpJRDBnYm5Wc2JDbGNiaUFnYVdZZ0xXbHpMWE4wY21sdVp5aHZjbWxsYm5SaGRHbHZiaWxjYmlBZ0lDQnZjbWxsYm5SaGRHbHZiaUE5SUdOdmJuWmxjblFvYjNKcFpXNTBZWFJwYjI0cFhHNGdJR2xtSUMxcGN5MXpkSEpwYm1jb1pHVnVjMmwwZVNsY2JpQWdJQ0JrWlc1emFYUjVJRDBnWTI5dWRtVnlkQ2hrWlc1emFYUjVLVnh1SUNBclltVjBkMlZsYmlneExDQnpZMkZzWlMxd2IybHVkQ3dnWVc1MGFTMXZkbVZ5YkdGd0xDQmtaVzV6YVhSNUxDQnZjbWxsYm5SaGRHbHZiaXdnZFhObExXUmxkbWxqWlMxM2FXUjBhQ3dnWm1Gc2JHSmhZMnN0WTJ4aGMzTXBYRzRnSUNBZ2UySnNiMk5yZlZ4dVhHNWlaV3h2ZHlBOUlIUnZMWGRwWkhSb1hHNWNibTF2WW1sc1pTaGhiblJwTFc5MlpYSnNZWEFnUFNCeWRYQjBkWEpsTG1GdWRHa3RiM1psY214aGNDd2daR1Z1YzJsMGVTQTlJRzUxYkd3c0lHOXlhV1Z1ZEdGMGFXOXVJRDBnYm5Wc2JDd2dkWE5sTFdSbGRtbGpaUzEzYVdSMGFDQTlJSEoxY0hSMWNtVXVkWE5sTFdSbGRtbGpaUzEzYVdSMGFDd2dabUZzYkdKaFkyc3RZMnhoYzNNZ1BTQnVkV3hzS1Z4dUlDQnBaaUF0YVhNdGMzUnlhVzVuS0c5eWFXVnVkR0YwYVc5dUtWeHVJQ0FnSUc5eWFXVnVkR0YwYVc5dUlEMGdZMjl1ZG1WeWRDaHZjbWxsYm5SaGRHbHZiaWxjYmlBZ2FXWWdMV2x6TFhOMGNtbHVaeWhrWlc1emFYUjVLVnh1SUNBZ0lHUmxibk5wZEhrZ1BTQmpiMjUyWlhKMEtHUmxibk5wZEhrcFhHNGdJQ3RpWld4dmR5aHlkWEIwZFhKbExtMXZZbWxzWlMxamRYUnZabVlzSUdGdWRHa3RiM1psY214aGNDd2daR1Z1YzJsMGVTd2diM0pwWlc1MFlYUnBiMjRzSUhWelpTMWtaWFpwWTJVdGQybGtkR2dzSUdaaGJHeGlZV05yTFdOc1lYTnpLVnh1SUNBZ0lIdGliRzlqYTMxY2JseHVkR0ZpYkdWMEtHRnVkR2t0YjNabGNteGhjQ0E5SUhKMWNIUjFjbVV1WVc1MGFTMXZkbVZ5YkdGd0xDQmtaVzV6YVhSNUlEMGdiblZzYkN3Z2IzSnBaVzUwWVhScGIyNGdQU0J1ZFd4c0xDQjFjMlV0WkdWMmFXTmxMWGRwWkhSb0lEMGdjblZ3ZEhWeVpTNTFjMlV0WkdWMmFXTmxMWGRwWkhSb0xDQm1ZV3hzWW1GamF5MWpiR0Z6Y3lBOUlHNTFiR3dwWEc0Z0lHbG1JQzFwY3kxemRISnBibWNvYjNKcFpXNTBZWFJwYjI0cFhHNGdJQ0FnYjNKcFpXNTBZWFJwYjI0Z1BTQmpiMjUyWlhKMEtHOXlhV1Z1ZEdGMGFXOXVLVnh1SUNCcFppQXRhWE10YzNSeWFXNW5LR1JsYm5OcGRIa3BYRzRnSUNBZ1pHVnVjMmwwZVNBOUlHTnZiblpsY25Rb1pHVnVjMmwwZVNsY2JpQWdLMkpsZEhkbFpXNG9jblZ3ZEhWeVpTNXRiMkpwYkdVdFkzVjBiMlptTENCeWRYQjBkWEpsTG1SbGMydDBiM0F0WTNWMGIyWm1MQ0JoYm5ScExXOTJaWEpzWVhBc0lHUmxibk5wZEhrc0lHOXlhV1Z1ZEdGMGFXOXVMQ0IxYzJVdFpHVjJhV05sTFhkcFpIUm9MQ0JtWVd4c1ltRmpheTFqYkdGemN5bGNiaUFnSUNCN1lteHZZMnQ5WEc1Y2JtUmxjMnQwYjNBb1lXNTBhUzF2ZG1WeWJHRndJRDBnY25Wd2RIVnlaUzVoYm5ScExXOTJaWEpzWVhBc0lHUmxibk5wZEhrZ1BTQnVkV3hzTENCdmNtbGxiblJoZEdsdmJpQTlJRzUxYkd3c0lIVnpaUzFrWlhacFkyVXRkMmxrZEdnZ1BTQnlkWEIwZFhKbExuVnpaUzFrWlhacFkyVXRkMmxrZEdnc0lHWmhiR3hpWVdOckxXTnNZWE56SUQwZ2JuVnNiQ2xjYmlBZ2FXWWdMV2x6TFhOMGNtbHVaeWh2Y21sbGJuUmhkR2x2YmlsY2JpQWdJQ0J2Y21sbGJuUmhkR2x2YmlBOUlHTnZiblpsY25Rb2IzSnBaVzUwWVhScGIyNHBYRzRnSUdsbUlDMXBjeTF6ZEhKcGJtY29aR1Z1YzJsMGVTbGNiaUFnSUNCa1pXNXphWFI1SUQwZ1kyOXVkbVZ5ZENoa1pXNXphWFI1S1Z4dUlDQXJZV0p2ZG1Vb2NuVndkSFZ5WlM1a1pYTnJkRzl3TFdOMWRHOW1aaXdnWVc1MGFTMXZkbVZ5YkdGd0xDQmtaVzV6YVhSNUxDQnZjbWxsYm5SaGRHbHZiaXdnZFhObExXUmxkbWxqWlMxM2FXUjBhQ3dnWm1Gc2JHSmhZMnN0WTJ4aGMzTXBYRzRnSUNBZ2UySnNiMk5yZlZ4dVhHNW9aQ2hoYm5ScExXOTJaWEpzWVhBZ1BTQnlkWEIwZFhKbExtRnVkR2t0YjNabGNteGhjQ3dnWkdWdWMybDBlU0E5SUc1MWJHd3NJRzl5YVdWdWRHRjBhVzl1SUQwZ2JuVnNiQ3dnZFhObExXUmxkbWxqWlMxM2FXUjBhQ0E5SUhKMWNIUjFjbVV1ZFhObExXUmxkbWxqWlMxM2FXUjBhQ3dnWm1Gc2JHSmhZMnN0WTJ4aGMzTWdQU0J1ZFd4c0tWeHVJQ0JwWmlBdGFYTXRjM1J5YVc1bktHOXlhV1Z1ZEdGMGFXOXVLVnh1SUNBZ0lHOXlhV1Z1ZEdGMGFXOXVJRDBnWTI5dWRtVnlkQ2h2Y21sbGJuUmhkR2x2YmlsY2JpQWdhV1lnTFdsekxYTjBjbWx1Wnloa1pXNXphWFI1S1Z4dUlDQWdJR1JsYm5OcGRIa2dQU0JqYjI1MlpYSjBLR1JsYm5OcGRIa3BYRzRnSUN0aFltOTJaU2h5ZFhCMGRYSmxMbWhrTFdOMWRHOW1aaXdnWVc1MGFTMXZkbVZ5YkdGd0xDQmtaVzV6YVhSNUxDQnZjbWxsYm5SaGRHbHZiaXdnZFhObExXUmxkbWxqWlMxM2FXUjBhQ3dnWm1Gc2JHSmhZMnN0WTJ4aGMzTXBYRzRnSUNBZ2UySnNiMk5yZlZ4dVhHNWtaVzV6YVhSNUtHUmxibk5wZEhrc0lHOXlhV1Z1ZEdGMGFXOXVJRDBnYm5Wc2JDd2dabUZzYkdKaFkyc3RZMnhoYzNNZ1BTQnVkV3hzS1Z4dUlDQnpaV3hsWTNSbFpDQTlJSE5sYkdWamRHOXlLQ2xjYmlBZ2FXWWdibTkwSUNoeWRYQjBkWEpsTG5KaGMzUmxjbWx6WlMxdFpXUnBZUzF4ZFdWeWFXVnpLVnh1SUNBZ0lHTnZibVJwZEdsdmJuTWdQU0FvS1Z4dUlDQWdJR1p2Y2lCeGRXVnllU0JwYmlBdFpHVnVjMmwwZVMxeGRXVnlhV1Z6S0dSbGJuTnBkSGtwWEc0Z0lDQWdJQ0JqYjI1a2FYUnBiMjRnUFNBbmIyNXNlU0J6WTNKbFpXNGdZVzVrSUNWekp5QWxJQ2h4ZFdWeWVTbGNiaUFnSUNBZ0lHbG1JRzl5YVdWdWRHRjBhVzl1WEc0Z0lDQWdJQ0FnSUdOdmJtUnBkR2x2YmlBOUlHTnZibVJwZEdsdmJpQXJJQ2NnWVc1a0lDaHZjbWxsYm5SaGRHbHZiam9nSlhNcEp5QWxJQ2h2Y21sbGJuUmhkR2x2YmlsY2JpQWdJQ0FnSUhCMWMyZ29ZMjl1WkdsMGFXOXVjeXdnWTI5dVpHbDBhVzl1S1Z4dUlDQWdJR052Ym1ScGRHbHZiaUE5SUdwdmFXNG9KeXdnSnl3Z1kyOXVaR2wwYVc5dWN5bGNiaUFnSUNCQWJXVmthV0VnWTI5dVpHbDBhVzl1WEc0Z0lDQWdJQ0I3WW14dlkydDlYRzRnSUNBZ2FXWWdabUZzYkdKaFkyc3RZMnhoYzNOY2JpQWdJQ0FnSUN0amNtVmhkR1V0Wm1Gc2JHSmhZMnN0WTJ4aGMzTW9jMlZzWldOMFpXUXNJR1poYkd4aVlXTnJMV05zWVhOektWeHVJQ0FnSUNBZ0lDQjdZbXh2WTJ0OVhHNWNibkJwZUdWc0xYSmhkR2x2SUQwZ1pHVnVjMmwwZVZ4dVhHNXlaWFJwYm1Fb2IzSnBaVzUwWVhScGIyNGdQU0J1ZFd4c0xDQm1ZV3hzWW1GamF5MWpiR0Z6Y3lBOUlHNTFiR3dwWEc0Z0lDdGtaVzV6YVhSNUtDZHlaWFJwYm1FbkxDQnZjbWxsYm5SaGRHbHZiaXdnWm1Gc2JHSmhZMnN0WTJ4aGMzTXBYRzRnSUNBZ2UySnNiMk5yZlZ4dVhHNXNZVzVrYzJOaGNHVW9aR1Z1YzJsMGVTQTlJRzUxYkd3c0lHWmhiR3hpWVdOckxXTnNZWE56SUQwZ2JuVnNiQ2xjYmlBZ2MyVnNaV04wWldRZ1BTQnpaV3hsWTNSdmNpZ3BYRzRnSUdsbUlHNXZkQ0FvY25Wd2RIVnlaUzV5WVhOMFpYSnBjMlV0YldWa2FXRXRjWFZsY21sbGN5bGNiaUFnSUNCcFppQXRhWE10YzNSeWFXNW5LR1JsYm5OcGRIa3BYRzRnSUNBZ0lDQmtaVzV6YVhSNUlEMGdZMjl1ZG1WeWRDaGtaVzV6YVhSNUtWeHVJQ0FnSUdsbUlHUmxibk5wZEhsY2JpQWdJQ0FnSUN0d2FYaGxiQzF5WVhScGJ5aGtaVzV6YVhSNUxDQnZjbWxsYm5SaGRHbHZiam9nYkdGdVpITmpZWEJsTENCbVlXeHNZbUZqYXkxamJHRnpjeWxjYmlBZ0lDQWdJQ0FnZTJKc2IyTnJmVnh1SUNBZ0lHVnNjMlZjYmlBZ0lDQWdJRUJ0WldScFlTQnZibXg1SUhOamNtVmxiaUJoYm1RZ0tHOXlhV1Z1ZEdGMGFXOXVPaUJzWVc1a2MyTmhjR1VwWEc0Z0lDQWdJQ0FnSUh0aWJHOWphMzFjYmlBZ0lDQWdJR2xtSUdaaGJHeGlZV05yTFdOc1lYTnpYRzRnSUNBZ0lDQWdJQ3RqY21WaGRHVXRabUZzYkdKaFkyc3RZMnhoYzNNb2MyVnNaV04wWldRc0lHWmhiR3hpWVdOckxXTnNZWE56S1Z4dUlDQWdJQ0FnSUNBZ0lIdGliRzlqYTMxY2JseHVjRzl5ZEhKaGFYUW9aR1Z1YzJsMGVTQTlJRzUxYkd3c0lHWmhiR3hpWVdOckxXTnNZWE56SUQwZ2JuVnNiQ2xjYmlBZ2MyVnNaV04wWldRZ1BTQnpaV3hsWTNSdmNpZ3BYRzRnSUdsbUlHNXZkQ0FvY25Wd2RIVnlaUzV5WVhOMFpYSnBjMlV0YldWa2FXRXRjWFZsY21sbGN5bGNiaUFnSUNCcFppQXRhWE10YzNSeWFXNW5LR1JsYm5OcGRIa3BYRzRnSUNBZ0lDQmtaVzV6YVhSNUlEMGdZMjl1ZG1WeWRDaGtaVzV6YVhSNUtWeHVJQ0FnSUdsbUlHUmxibk5wZEhsY2JpQWdJQ0FnSUN0d2FYaGxiQzF5WVhScGJ5aGtaVzV6YVhSNUxDQnZjbWxsYm5SaGRHbHZiam9nY0c5eWRISmhhWFFzSUdaaGJHeGlZV05yTFdOc1lYTnpLVnh1SUNBZ0lDQWdJQ0I3WW14dlkydDlYRzRnSUNBZ1pXeHpaVnh1SUNBZ0lDQWdRRzFsWkdsaElHOXViSGtnYzJOeVpXVnVJR0Z1WkNBb2IzSnBaVzUwWVhScGIyNDZJSEJ2Y25SeVlXbDBLVnh1SUNBZ0lDQWdJQ0I3WW14dlkydDlYRzRnSUNBZ0lDQnBaaUJtWVd4c1ltRmpheTFqYkdGemMxeHVJQ0FnSUNBZ0lDQXJZM0psWVhSbExXWmhiR3hpWVdOckxXTnNZWE56S0hObGJHVmpkR1ZrTENCbVlXeHNZbUZqYXkxamJHRnpjeWxjYmlBZ0lDQWdJQ0FnSUNCN1lteHZZMnQ5WEc0aVhTd2ljMjkxY21ObFVtOXZkQ0k2SWk5emIzVnlZMlV2SW4wPSAqL1xuIiwiQGltcG9ydCBcIkByZWRzaWZ0L3VpLXJzLWNvcmUvZGlzdC9jc3MvdWktcnMtY29yZS5jc3NcIlxuQGltcG9ydCBcIkByZWRzaWZ0L3VpLXJzLWhlcm8vZGlzdC9jc3MvdWktcnMtaGVyby5jc3NcIlxuXG5cbipcbiAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmVcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApXG5cblxuLi1iZy1waXhlbHRyYWNrZXItaGVyb1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9hc3NldHMvY2N0di5qcGdcIilcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQyLCAyNCwgMjIpXG5cblxuLmhlcm8tc3RpY2t5LWhlYWRlci0tYWN0aXZlXG4gIGJveC1zaGFkb3c6IDBweCAwcHggMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTUpXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uLy4uL2Fzc2V0cy9jY3R2LmpwZ1wiKVxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDIsIDI0LCAyMilcbiIsIi8qISBub3JtYWxpemUuY3NzIHY0LjEuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAzLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIElFIGFuZCBpT1MuXG4gKi9cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAyICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAzICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMyAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLCAvKiAxICovXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbiwgLyogMiAqL1xubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHsgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSwgLyogMSAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG5cbi8qXG4gKiBTdHlsZSBzZXR1cCBmb3IgcmVkc2lmdC11aSBiYXNlZCBzaWZ0cy5cbiAqXG4gKiAtIFByb3ZpZGVzOlxuICogICAuIHJlYWR5LXRvLXVzZSBVSSBjb21wb25lbnRzXG4gKiAgIC4gcmVzcG9uc2l2ZSB0eXBlIHN5c3RlbVxuICogICAuIGJyZWFrcG9pbnQgc2V0dXAgKHZpYSAncnVwdHVyZScpXG4gKiAgIC4gY29tbW9uIGZ1bmN0aW9uYWxpdHkgbGlrZSByZXNldCwgcGF0dGVybnMgYW5kIGZvbnRzXG4gKlxuICogLSBVc2VkIGJ5OlxuICogICAuIHJlZHNpZnQtbGlnaHRcbiAqICAgLiByZWRzaWZ0LWRhcmtcbiAqXG4gKiAtIEZvbGRlciBzdHJ1Y3R1cmU6XG4gKlxuICogICAuL2xpYiAgICAgICAgLT4gbWl4aW4gYW5kIGZ1bmN0aW9uIGxpYnJhcnlcbiAqICAgLi9jb21tb24gICAgIC0+IENTUyBzZXR1cCBhbmQgY29tbW9uIGNsYXNzZXNcbiAqICAgLi9jb21wb25lbnRzIC0+IFVJIGNvbXBvbmVudHNcbiAqL1xuLypcbiAqIENvbmZpZ3VyYXRpb24gdmlhIG9iamVjdCAnJHVpLXJzLWNvcmUnXG4gKi9cbi8qXG4gKiBNaXhpbi9mdW5jdGlvbnMgbGlicmFyeVxuICpcbiAqIENvbW1vbiBtaXhpbnMgYW5kIGZ1bmN0aW9ucyB1c2VkIGJ5IHJlZHNpZnQtdWkuXG4gKi9cbi8qXG4gKiBCYXNlIGNvbmZpZ3VyYXRpb24gYW5kIGNvbW1vbiBjbGFzc2VzOlxuICpcbiAqIENTUyBiYXNlIHNldHVwIGFuZCBjb21tb24gQ1NTIGNsYXNzZXMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG59XG4uLXBhdHRlcm4tZG93bi1hcnJvdy1ncmVlbiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pY29ucy9kb3duLWFycm93LWdyZWVuLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiAxMnB4IDdweDtcbn1cbi4tcGF0dGVybi1yZWRzaWZ0LWxvZ28ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIvaWNvbnMvcmVkc2lmdC1sb2dvLXJlZC04LjEuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IDdweCA3cHg7XG59XG4uYW5pbWF0ZS1vcGFjaXR5IHtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSBlYXNlLWluIDQwMG1zO1xufVxuLmZhZGUtaW4ge1xuICBhbmltYXRpb246IGZhZGVpbiA0MDBtcyBlYXNlLWluIDBzIDEgbm9ybWFsIGJvdGg7XG59XG4uZGVsYXkge1xuICBhbmltYXRpb24tZGVsYXk6IDQwMG1zO1xufVxuQGtleWZyYW1lcyBmYWRlaW4ge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG4uaGlkZGVuIHtcbiAgb3BhY2l0eTogMDtcbn1cbi5oYXNoIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogcmVwZWF0aW5nLWxpbmVhci1ncmFkaWVudCgxMjVkZWcsIHRyYW5zcGFyZW50LCB0cmFuc3BhcmVudCAycHgsIHJnYmEoMCwwLDAsMC4yKSAycHgsIHJnYmEoMCwwLDAsMC4yKSAzcHgsIHRyYW5zcGFyZW50IDNweCwgdHJhbnNwYXJlbnQgNXB4LCByZ2JhKDAsMCwwLDAuMikgNXB4KTtcbn1cbi4tcnMtaWNvbi1yZWRzaWZ0LXJlZCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vc3RhdGljLnJlZHNpZnQuaW8vYXNzZXRzL3VpLXJzLWNvcmUvaWNvbnMvLXJzLWljb24tcmVkc2lmdC1yZWQuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDMwcHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4ucnMtaWNvbi1yZWRzaWZ0LWNsb3VkIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pY29ucy8tcnMtaWNvbi1yZWRzaWZ0LWNsb3VkLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAzMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLi1ycy1pY29uLXJlZHNpZnQtd2hpdGUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3N0YXRpYy5yZWRzaWZ0LmlvL2Fzc2V0cy91aS1ycy1jb3JlL2ljb25zLy1ycy1pY29uLXJlZHNpZnQtd2hpdGUuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDMwcHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4uLXJzLWljb24tZ2l0aHViIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pbWFnZXMvaWNvbi1naXRodWIuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDMwcHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4uLXJzLWljb24tZ29vZ2xlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pbWFnZXMvaWNvbi1nb29nbGUuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDMwcHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4uLXJzLWljb24tc2xhY2sge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3N0YXRpYy5yZWRzaWZ0LmlvL2Fzc2V0cy91aS1ycy1jb3JlL2ltYWdlcy9pY29uLXNsYWNrLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAzMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLi1ycy1pY29uLXR3aXR0ZXIge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3N0YXRpYy5yZWRzaWZ0LmlvL2Fzc2V0cy91aS1ycy1jb3JlL2ltYWdlcy9pY29uLXR3aXR0ZXIuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDMwcHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4uLXJzLWljb24tc2V0dGluZ3Mge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3N0YXRpYy5yZWRzaWZ0LmlvL2Fzc2V0cy91aS1ycy1jb3JlL2ltYWdlcy9pY29uLXNldHRpbmdzLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAzMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLi1ycy1pY29uLWV4aXQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3N0YXRpYy5yZWRzaWZ0LmlvL2Fzc2V0cy91aS1ycy1jb3JlL2ltYWdlcy9pY29uLWV4aXQuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDMwcHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4uLXJzLWljb24tcHJvZmlsZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vc3RhdGljLnJlZHNpZnQuaW8vYXNzZXRzL3VpLXJzLWNvcmUvaW1hZ2VzL2ljb24tcHJvZmlsZS5zdmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtc2l6ZTogMzBweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbi4tcnMtaWNvbi1kb3duLWFycm93LWdyZWVuIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pbWFnZXMvaWNvbi1kb3duLWFycm93LWdyZWVuLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAzMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLi1ycy1pY29uLWxvZ291dCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHBzOi8vc3RhdGljLnJlZHNpZnQuaW8vYXNzZXRzL3VpLXJzLWNvcmUvaWNvbnMvLXJzLWljb24tbG9nb3V0LnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAzMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLi1ycy1pY29uLXByb2ZpbGUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3N0YXRpYy5yZWRzaWZ0LmlvL2Fzc2V0cy91aS1ycy1jb3JlL2ljb25zLy1ycy1pY29uLXByb2ZpbGUuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDMwcHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4uLXJzLWljb24tZGFzaGJvYXJkIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pY29ucy8tcnMtaWNvbi1kYXNoYm9hcmQuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDI0cHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4uLXJzLWljb24tY2F0YWxvZ3VlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pY29ucy8tcnMtaWNvbi1jYXRhbG9ndWUuc3ZnXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXNpemU6IDI0cHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4uLXJzLWljb24td29ya3Nob3Age1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3N0YXRpYy5yZWRzaWZ0LmlvL2Fzc2V0cy91aS1ycy1jb3JlL2ljb25zLy1ycy1pY29uLXdvcmtzaG9wLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAyNHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLi1ycy1pY29uLXdpcmVmcmFtZS1ibHVlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pY29ucy8tcnMtaWNvbi13aXJlZnJhbWUtYmx1ZS5zdmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtc2l6ZTogMzBweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbi4tcnMtaWNvbi1leHBhbmQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3N0YXRpYy5yZWRzaWZ0LmlvL2Fzc2V0cy91aS1ycy1jb3JlL2ljb25zLy1ycy1pY29uLWV4cGFuZC5zdmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtc2l6ZTogMzBweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbi4tcnMtaWNvbi1leHBhbmQtc3BsaXQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3N0YXRpYy5yZWRzaWZ0LmlvL2Fzc2V0cy91aS1ycy1jb3JlL2ljb25zLy1ycy1pY29uLWV4cGFuZC1zcGxpdC5zdmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtc2l6ZTogMzBweDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbi4tcnMtaWNvbi1leGl0IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly9zdGF0aWMucmVkc2lmdC5pby9hc3NldHMvdWktcnMtY29yZS9pY29ucy8tcnMtaWNvbi1leGl0LnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiAzMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xufVxuLyogSGVhZGluZyBmb250IEBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVJhbGV3YXk6MjAwXCIpOyAqL1xuLyogbGF0aW4gKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JhbGV3YXknO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIHNyYzogbG9jYWwoJ1JhbGV3YXkgRXh0cmFMaWdodCcpLCBsb2NhbCgnUmFsZXdheS1FeHRyYUxpZ2h0JyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9yYWxld2F5L3YxMS84S2haZDNWUUJ0WFRBem52S2p3LWs3M2hwdzNwZ3kyZ0FpLUlwN1dQTWkwLndvZmZcIikgZm9ybWF0KCd3b2ZmJyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9yYWxld2F5L3YxMS84S2haZDNWUUJ0WFRBem52S2p3LWt5M1VTQm5TdnBrb3BRYVVSLTJyN2lVLnR0ZlwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdSYWxld2F5JztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogMjAwO1xuICBzcmM6IGxvY2FsKCdSYWxld2F5IEV4dHJhTGlnaHQnKSwgbG9jYWwoJ1JhbGV3YXktRXh0cmFMaWdodCcpLCB1cmwoXCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3MvcmFsZXdheS92MTEvOEtoWmQzVlFCdFhUQXpudktqdy1rd3p5RE1YaGREOHNBajZPQUpURnNCSS53b2ZmMlwiKSBmb3JtYXQoJ3dvZmYyJyk7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDAwMC0wMEZGLCBVKzAxMzEsIFUrMDE1Mi0wMTUzLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjIxMiwgVSsyMjE1LCBVK0UwRkYsIFUrRUZGRCwgVStGMDAwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnRWxlY3Ryb2xpemUnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHNyYzogbG9jYWwoJ0VsZWN0cm9saXplJyksIGxvY2FsKCdFbGVjdHJvbGl6ZS1SZWd1bGFyJyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9lbGVjdHJvbGl6ZS92NS9ERHk5c2dVMlU3UzR4QXdINXRobko3cklhLTdhY01BZURCVnVjbHNpNkdjLndvZmZcIikgZm9ybWF0KCd3b2ZmJyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9lbGVjdHJvbGl6ZS92NS9ERHk5c2dVMlU3UzR4QXdINXRobkp5d2xpZEhKZ0FnbVRqT0VFend1MUw4LnR0ZlwiKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG59XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdFbGVjdHJvbGl6ZSc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgc3JjOiBsb2NhbCgnRWxlY3Ryb2xpemUnKSwgbG9jYWwoJ0VsZWN0cm9saXplLVJlZ3VsYXInKSwgdXJsKFwiaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL2VsZWN0cm9saXplL3Y1L0REeTlzZ1UyVTdTNHhBd0g1dGhuSjRncDlROGdiWXJocUdsUmF2X0lYZmsud29mZjJcIikgZm9ybWF0KCd3b2ZmMicpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkM2LCBVKzAyREEsIFUrMDJEQywgVSsyMDAwLTIwNkYsIFUrMjA3NCwgVSsyMEFDLCBVKzIyMTIsIFUrMjIxNSwgVStFMEZGLCBVK0VGRkQsIFUrRjAwMDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1NvdXJjZSBDb2RlIFBybyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgc3JjOiBsb2NhbCgnU291cmNlIENvZGUgUHJvIExpZ2h0JyksIGxvY2FsKCdTb3VyY2VDb2RlUHJvLUxpZ2h0JyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9zb3VyY2Vjb2RlcHJvL3Y2L2xlcXYzdi15VHNKTkM3bkZ6blNNcWNWTnRvbTRRbEVETkphcXFxenFkU3Mud29mZlwiKSBmb3JtYXQoJ3dvZmYnKSwgdXJsKFwiaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL3NvdXJjZWNvZGVwcm8vdjYvbGVxdjN2LXlUc0pOQzduRnpuU01xZlM0MndLenJlMGN4bU81bTVHeVRzWS50dGZcIikgZm9ybWF0KCd0cnVldHlwZScpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnU291cmNlIENvZGUgUHJvJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBzcmM6IGxvY2FsKCdTb3VyY2UgQ29kZSBQcm8nKSwgbG9jYWwoJ1NvdXJjZUNvZGVQcm8tUmVndWxhcicpLCB1cmwoXCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvc291cmNlY29kZXByby92Ni9tcmw4amtNMThPbE9RTjhKTGdhc0Q5SHEtRkZnb0ROVjNHVEtwSHd1dnRJLndvZmZcIikgZm9ybWF0KCd3b2ZmJyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9zb3VyY2Vjb2RlcHJvL3Y2L21ybDhqa00xOE9sT1FOOEpMZ2FzRDBZNkZ1MzlUdDlYa210U29zYU1vRUEudHRmXCIpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1NvdXJjZSBDb2RlIFBybyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgc3JjOiBsb2NhbCgnU291cmNlIENvZGUgUHJvIEJvbGQnKSwgbG9jYWwoJ1NvdXJjZUNvZGVQcm8tQm9sZCcpLCB1cmwoXCJodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvc291cmNlY29kZXByby92Ni9sZXF2M3YteVRzSk5DN25Gem5TTXFZcWpHWUpVeU9YY0J3VVFiUmFOSDZjLndvZmZcIikgZm9ybWF0KCd3b2ZmJyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9zb3VyY2Vjb2RlcHJvL3Y2L2xlcXYzdi15VHNKTkM3bkZ6blNNcWJsY01yTnJzbkw5ZGdBRG5YZ1lKanMudHRmXCIpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcbn1cbi8qIGxhdGluLWV4dCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnU291cmNlIENvZGUgUHJvJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogMzAwO1xuICBzcmM6IGxvY2FsKCdTb3VyY2UgQ29kZSBQcm8gTGlnaHQnKSwgbG9jYWwoJ1NvdXJjZUNvZGVQcm8tTGlnaHQnKSwgdXJsKFwiaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL3NvdXJjZWNvZGVwcm8vdjYvbGVxdjN2LXlUc0pOQzduRnpuU01xVE9GbkpOeWdJa3JIY2lDOEJXemJDejNyR1Z0c1RrUHNiRGFqdU81dWVRdy53b2ZmMlwiKSBmb3JtYXQoJ3dvZmYyJyk7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMC0wMjRGLCBVKzFFMDAtMUVGRiwgVSsyMEEwLTIwQUIsIFUrMjBBRC0yMENGLCBVKzJDNjAtMkM3RiwgVStBNzIwLUE3RkY7XG59XG4vKiBsYXRpbiAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnU291cmNlIENvZGUgUHJvJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogMzAwO1xuICBzcmM6IGxvY2FsKCdTb3VyY2UgQ29kZSBQcm8gTGlnaHQnKSwgbG9jYWwoJ1NvdXJjZUNvZGVQcm8tTGlnaHQnKSwgdXJsKFwiaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL3NvdXJjZWNvZGVwcm8vdjYvbGVxdjN2LXlUc0pOQzduRnpuU01xU1AyTEVrNmxNellzUnFyM2RIRkltQS53b2ZmMlwiKSBmb3JtYXQoJ3dvZmYyJyk7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDAwMC0wMEZGLCBVKzAxMzEsIFUrMDE1Mi0wMTUzLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjIxMiwgVSsyMjE1LCBVK0UwRkYsIFUrRUZGRCwgVStGMDAwO1xufVxuLyogbGF0aW4tZXh0ICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdTb3VyY2UgQ29kZSBQcm8nO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHNyYzogbG9jYWwoJ1NvdXJjZSBDb2RlIFBybycpLCBsb2NhbCgnU291cmNlQ29kZVByby1SZWd1bGFyJyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9zb3VyY2Vjb2RlcHJvL3Y2L21ybDhqa00xOE9sT1FOOEpMZ2FzRDRhMVlEdG9hcnp3U1h4VEhnZ0VYTXcud29mZjJcIikgZm9ybWF0KCd3b2ZmMicpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAxMDAtMDI0RiwgVSsxRTAwLTFFRkYsIFUrMjBBMC0yMEFCLCBVKzIwQUQtMjBDRiwgVSsyQzYwLTJDN0YsIFUrQTcyMC1BN0ZGO1xufVxuLyogbGF0aW4gKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1NvdXJjZSBDb2RlIFBybyc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgc3JjOiBsb2NhbCgnU291cmNlIENvZGUgUHJvJyksIGxvY2FsKCdTb3VyY2VDb2RlUHJvLVJlZ3VsYXInKSwgdXJsKFwiaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL3NvdXJjZWNvZGVwcm8vdjYvbXJsOGprTTE4T2xPUU44SkxnYXNENWJQRmR1SVl0b0x6d1NUNjh1aHpfWS53b2ZmMlwiKSBmb3JtYXQoJ3dvZmYyJyk7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDAwMC0wMEZGLCBVKzAxMzEsIFUrMDE1Mi0wMTUzLCBVKzAyQzYsIFUrMDJEQSwgVSswMkRDLCBVKzIwMDAtMjA2RiwgVSsyMDc0LCBVKzIwQUMsIFUrMjIxMiwgVSsyMjE1LCBVK0UwRkYsIFUrRUZGRCwgVStGMDAwO1xufVxuLyogbGF0aW4tZXh0ICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdTb3VyY2UgQ29kZSBQcm8nO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHNyYzogbG9jYWwoJ1NvdXJjZSBDb2RlIFBybyBCb2xkJyksIGxvY2FsKCdTb3VyY2VDb2RlUHJvLUJvbGQnKSwgdXJsKFwiaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9zL3NvdXJjZWNvZGVwcm8vdjYvbGVxdjN2LXlUc0pOQzduRnpuU01xZTRzMVV4NFB1SW1XUGs1ZlNyNkhQTDNyR1Z0c1RrUHNiRGFqdU81dWVRdy53b2ZmMlwiKSBmb3JtYXQoJ3dvZmYyJyk7XG4gIHVuaWNvZGUtcmFuZ2U6IFUrMDEwMC0wMjRGLCBVKzFFMDAtMUVGRiwgVSsyMEEwLTIwQUIsIFUrMjBBRC0yMENGLCBVKzJDNjAtMkM3RiwgVStBNzIwLUE3RkY7XG59XG4vKiBsYXRpbiAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnU291cmNlIENvZGUgUHJvJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBzcmM6IGxvY2FsKCdTb3VyY2UgQ29kZSBQcm8gQm9sZCcpLCBsb2NhbCgnU291cmNlQ29kZVByby1Cb2xkJyksIHVybChcImh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9zb3VyY2Vjb2RlcHJvL3Y2L2xlcXYzdi15VHNKTkM3bkZ6blNNcVprRjhIOHllNDd3c2ZwV3l3ZGE4b2cud29mZjJcIikgZm9ybWF0KCd3b2ZmMicpO1xuICB1bmljb2RlLXJhbmdlOiBVKzAwMDAtMDBGRiwgVSswMTMxLCBVKzAxNTItMDE1MywgVSswMkM2LCBVKzAyREEsIFUrMDJEQywgVSsyMDAwLTIwNkYsIFUrMjA3NCwgVSsyMEFDLCBVKzIyMTIsIFUrMjIxNSwgVStFMEZGLCBVK0VGRkQsIFUrRjAwMDtcbn1cbmRpdi5jYXJkcyB7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIC1tcy1mbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xufVxuZGl2LmNhcmRzID5kaXYge1xuICAtbXMtZmxleC1wb3NpdGl2ZTogMDtcbiAgZmxleC1ncm93OiAwO1xuICAtbXMtZmxleC1uZWdhdGl2ZTogMDtcbiAgZmxleC1zaHJpbms6IDA7XG4gIC1tcy1mbGV4LXByZWZlcnJlZC1zaXplOiBhdXRvO1xuICBmbGV4LWJhc2lzOiBhdXRvO1xufVxuLypcbiAgICogRGVmYXVsdCBzZXR0aW5nczpcbiAgICovXG4vKiBOT1RFOiBJdCdzIG5lY2Vzc2FyeSB0byB1c2UgZS5nLiB0aGUgJGZvbnROb3JtYWwgdmFyaWFibGUgaGVyZS4gRGVmaW5pbmdcbiAgICogbXVsdGlwbGUgZm9udHMgZGlyZWN0bHkgaW4gaGVyZSB5aWVsZHMgYSBzdHlsdXMgY29tcGlsZXIgZXJyb3IuXG4gICAqL1xuLypcbiAgICogQnJlYWtwb2ludCBzZXR1cDpcbiAgICovXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xuICBmb250LXdlaWdodDogMzAwO1xufVxuYnV0dG9uIHtcbiAgZm9udC1mYW1pbHk6ICdFbGVjdHJvbGl6ZScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG4ub3ZlcmxheWVkIHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbmNvZGUge1xuICBmb250LWZhbWlseTogJ1NvdXJjZSBDb2RlIFBybycsIG1vbm9zcGFjZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbnByZSBjb2RlIHtcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xufVxucCBjb2RlIHtcbiAgcGFkZGluZzogMDtcbiAgcGFkZGluZy10b3A6IDAuMmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMC4yZW07XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbn1cbnAgY29kZTo6YmVmb3JlLFxucCBjb2RlOjphZnRlciB7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4yZW07XG4gIGNvbnRlbnQ6IFwiXFwwMGEwXCI7XG59XG5wcmUge1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIHBhZGRpbmc6IDFlbTtcbn1cbmgxIHtcbiAgZm9udC1mYW1pbHk6ICdFbGVjdHJvbGl6ZScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgbWFyZ2luLXRvcDogMC4xZW07XG4gIG1hcmdpbi1ib3R0b206IDAuMWVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuaDIge1xuICBmb250LWZhbWlseTogJ0VsZWN0cm9saXplJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIG1hcmdpbi10b3A6IDEuMjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuaDMge1xuICBmb250LWZhbWlseTogJ0VsZWN0cm9saXplJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDAuNjI1cmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuaDQge1xuICBmb250LWZhbWlseTogJ0VsZWN0cm9saXplJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBtYXJnaW4tdG9wOiAwLjdlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC43ZW07XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjNDI0MjQyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5oNSB7XG4gIGZvbnQtZmFtaWx5OiAnRWxlY3Ryb2xpemUnLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDAuOXJlbTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIG1hcmdpbi10b3A6IDAuNzVlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC43NWVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxucCB7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuODc1cmVtO1xuICBmb250LXdlaWdodDogMjAwO1xufVxuYSB7XG4gIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuODc1cmVtO1xuICBmb250LXdlaWdodDogMjAwO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OGVtKSB7XG4gIGgxIHtcbiAgICBmb250LWZhbWlseTogJ0VsZWN0cm9saXplJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDMuOHJlbTtcbiAgICBsaW5lLWhlaWdodDogMS4yO1xuICAgIG1hcmdpbi10b3A6IDAuMWVtO1xuICAgIG1hcmdpbi1ib3R0b206IDAuMWVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgfVxuICBoMiB7XG4gICAgZm9udC1mYW1pbHk6ICdFbGVjdHJvbGl6ZScsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAyLjM3NXJlbTtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIG1hcmdpbi10b3A6IDEuMjVyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB9XG4gIGgzIHtcbiAgICBmb250LWZhbWlseTogJ0VsZWN0cm9saXplJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDEuODc1cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAyLjc1cmVtO1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMC42MjVyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB9XG4gIGg0IHtcbiAgICBmb250LWZhbWlseTogJ0VsZWN0cm9saXplJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICBtYXJnaW4tdG9wOiAwLjdlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjdlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM0MjQyNDI7XG4gIH1cbiAgaDUge1xuICAgIGZvbnQtZmFtaWx5OiAnRWxlY3Ryb2xpemUnLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIG1hcmdpbi10b3A6IDAuNzVlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjc1ZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB9XG4gIHAge1xuICAgIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjg3NXJlbTtcbiAgICBmb250LXdlaWdodDogMjAwO1xuICB9XG4gIGEge1xuICAgIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjg3NXJlbTtcbiAgICBmb250LXdlaWdodDogMjAwO1xuICB9XG59XG4vKlxuICAgKiBEZWZhdWx0IHNldHRpbmdzOlxuICAgKi9cbi8qXG4gICAqIEJyZWFrcG9pbnQgc2V0dXA6XG4gICAqL1xuYm9keSB7XG4gIGNvbG9yOiAjMzMzO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxuOjotbW96LXNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICNlMTEwMTA7XG4gIGNvbG9yOiAjZmZmO1xuICBmaWxsOiAjZmZmO1xufVxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjZTExMDEwO1xuICBjb2xvcjogI2ZmZjtcbiAgZmlsbDogI2ZmZjtcbn1cbmEge1xuICBjb2xvcjogIzMzMztcbn1cbmE6dmlzaXRlZCB7XG4gIGNvbG9yOiAjMzMzO1xufVxuYTpob3ZlcixcbmE6dmlzaXRlZDpob3ZlciB7XG4gIGNvbG9yOiAjZTExMDEwO1xufVxuYTphY3RpdmUge1xuICBjb2xvcjogIzZhMDAwMDtcbn1cbmE6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xuICBjb2xvcjogI2UxMTAxMDtcbn1cbnAgY29kZSB7XG4gIGNvbG9yOiAjMzMzO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y3O1xufVxucHJlIHtcbiAgY29sb3I6ICMzMzM7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmN2Y3Zjc7XG59XG4uY29udGVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmN2Y3Zjc7XG59XG4uY29udGVudF9fY29udGFpbmVyLFxuLmNvbnRlbnRfX2NvbnRhaW5lci0tZXhwYW5kIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cbi5pbmZvcm1hdGlvbmFsIHtcbiAgY29sb3I6ICNiYmI7XG59XG4vKiBJbWFnZXMgc28gYXNzdW1lIHdoaXRlIHRleHQgaXMgcmVxdWlyZWQgKi9cbi5oZXJvIGgxLFxuLmhlcm8gaDIsXG4uaGVybyBoMyxcbi5oZXJvIGg0LFxuLmhlcm8gaDUsXG4uaGVybyBwLFxuLmhlcm8gY29kZSB7XG4gIGNvbG9yOiAjZmZmO1xufVxuLypcbiAqIFVJIGNvbXBvbmVudHM6XG4gKlxuICogRWFjaCBVSSBjb21wb25lbnQgaXMgZW5jYXBzdWxhdGVkIHdpdGhpbiBhIHNldHVwIGZ1bmN0aW9uIHdoaWNoIHRha2VzIGFuXG4gKiBvcGl0aW9uYWwgc2V0dGluZ3MgaGFzaC4gSWYgb21pdHRlZCB0aGUgZGVmYXVsdCBzZXR0aW5ncyBhdmFpbGFibGUgaW4gdGhlXG4gKiByZXNwZWN0aXZlIGNvbXBvbmVudCBmaWxlIGFyZSB1c2VkLiBUaGlzIGFsbG93cyBhICh0aGVtZSkgZGV2ZWxvcGVyIHRvXG4gKiBjdXN0b21pemUgY29tcG9uZW50cyBmb3IgdGhlaXIgb3duIHNpZnRzIGFuZCBwcm9qZWN0cy5cbiAqL1xuLmFuaW1hdGUtb3BhY2l0eSB7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgZWFzZS1pbiA0MDBtcztcbn1cbi5mYWRlLWluIHtcbiAgYW5pbWF0aW9uOiBmYWRlaW4gNDAwbXMgZWFzZS1pbiAwcyAxIG5vcm1hbCBib3RoO1xufVxuLmRlbGF5IHtcbiAgYW5pbWF0aW9uLWRlbGF5OiA0MDBtcztcbn1cbkBrZXlmcmFtZXMgZmFkZWluIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuLyogRklYWE1FOiByZWZhY3RvciBpbnRvIGNvbXBvbmVudHMhICovXG4uc3ZnLWNlbnRlci14IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgcGFkZGluZy1sZWZ0OiA1MCU7XG59XG4uc3ZnLXBhZGRpbmctdG9wIHtcbiAgcGFkZGluZy10b3A6IDFlbTtcbn1cbi5zdmctcGFkZGluZy1sZWZ0IHtcbiAgcGFkZGluZy1sZWZ0OiAxZW07XG59XG4ucmV1c2FibGUgcGF0aCB7XG4gIGZpbGw6IG5vbmU7XG4gIHN0cm9rZTogIzAwMDtcbiAgc3Ryb2tlLXdpZHRoOiAxLjVweDtcbiAgc3Ryb2tlLWxpbmVjYXA6IHJvdW5kO1xuICBzdHJva2UtbGluZWpvaW46IHJvdW5kO1xufVxuLnJldXNhYmxlIHBhdGguYmdzdHJva2Uge1xuICBzdHJva2U6ICNmZmY7XG4gIHN0cm9rZS13aWR0aDogM3B4O1xufVxuLypcbiAgICogRGVmYXVsdCBzZXR0aW5nczpcbiAgICovXG5pbnB1dFt0eXBlPVwidGV4dFwiXSxcbmlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSxcbmlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbmlucHV0W3R5cGU9XCJudW1iZXJcIl0sXG5pbnB1dFt0eXBlPVwidGVsXCJdLFxuaW5wdXRbdHlwZT1cInVybFwiXSxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgbWluLWhlaWdodDogMi43NWVtO1xuICBwYWRkaW5nLXRvcDogMC41ZW07XG4gIHBhZGRpbmctYm90dG9tOiAwLjVlbTtcbiAgcGFkZGluZy1sZWZ0OiAwLjVlbTtcbiAgcGFkZGluZy1yaWdodDogMC41ZW07XG4gIGNvbG9yOiAjMzMzO1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBib3JkZXI6IDFweCBzb2xpZCAjZDhkOGQ4O1xuICBvdXRsaW5lOiBub25lO1xuICBmb250LXNpemU6IDFyZW07XG59XG5pbnB1dFt0eXBlPVwidGV4dFwiXTpkaXNhYmxlZCxcbmlucHV0W3R5cGU9XCJwYXNzd29yZFwiXTpkaXNhYmxlZCxcbmlucHV0W3R5cGU9XCJlbWFpbFwiXTpkaXNhYmxlZCxcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06ZGlzYWJsZWQsXG5pbnB1dFt0eXBlPVwidGVsXCJdOmRpc2FibGVkLFxuaW5wdXRbdHlwZT1cInVybFwiXTpkaXNhYmxlZCxcbnNlbGVjdDpkaXNhYmxlZCxcbnRleHRhcmVhOmRpc2FibGVkIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogcmVwZWF0aW5nLWxpbmVhci1ncmFkaWVudCgxMjVkZWcsIHRyYW5zcGFyZW50LCB0cmFuc3BhcmVudCAycHgsICNmMWYxZjEgMnB4LCAjZjFmMWYxIDNweCwgdHJhbnNwYXJlbnQgM3B4LCB0cmFuc3BhcmVudCA1cHgsICNmMWYxZjEgNXB4KTtcbn1cbi8qXG4gICAqIERlZmF1bHQgc2V0dGluZ3M6XG4gICAqL1xuYnV0dG9uIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuYnV0dG9uIHtcbiAgcGFkZGluZy10b3A6IDAuNzVlbTtcbiAgcGFkZGluZy1ib3R0b206IDAuNzVlbTtcbiAgcGFkZGluZy1sZWZ0OiAxLjkzNzVlbTtcbiAgcGFkZGluZy1yaWdodDogMS45Mzc1ZW07XG4gIGNvbG9yOiAjZTExMDEwO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2UxMTAxMDtcbiAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuYnV0dG9uOmhvdmVyIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICNlMTEwMTA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMTEwMTA7XG59XG5idXR0b246YWN0aXZlIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICM2YTAwMDA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM2YTAwMDA7XG59XG5idXR0b246ZGlzYWJsZWQge1xuICBjb2xvcjogIzdmN2Y3ZjtcbiAgYmFja2dyb3VuZDogI2NhY2FjYTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NhY2FjYTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuYnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cbmJ1dHRvbi5ycy1idG4tLXNtYWxsIHtcbiAgcGFkZGluZy10b3A6IDAuNWVtO1xuICBwYWRkaW5nLWJvdHRvbTogMC41ZW07XG4gIHBhZGRpbmctbGVmdDogMC41ZW07XG4gIHBhZGRpbmctcmlnaHQ6IDAuNWVtO1xufVxuYnV0dG9uLnJzLWJ0bi0tc2VsZWN0ZWQge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogI2UxMTAxMDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2UxMTAxMDtcbn1cbmJ1dHRvbi5ycy1idG4tLXNlbGVjdGVkOmhvdmVyIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICM2YTAwMDA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM2YTAwMDA7XG59XG5idXR0b24ucnMtYnRuLS1zZWxlY3RlZDphY3RpdmUge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogI2UxMTAxMDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2UxMTAxMDtcbn1cbmJ1dHRvbi5ycy1idG4tLXNlbGVjdGVkOmhvdmVyOmRpc2FibGVkIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICNlMTEwMTA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMTEwMTA7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cbi8qIFN0eWxpbmcgdGhlIGJhc2UgYnV0dG9uIHdpbGwgaXMgaW1wbGljaXRseSBhcHBseWluZyB0aGUgc3R5bGVzIHRvIHRoZSAnYmVtJyBidXR0b25zICovXG5wIGJ1dHRvbiB7XG4gIG1hcmdpbjogMC42MjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxucCBidXR0b24ucnMtYnRuLS1zbWFsbCB7XG4gIG1hcmdpbjogMC4zNzVyZW07XG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4ZW0pIHtcbiAgcCBidXR0b24ge1xuICAgIG1hcmdpbjogMC42MjVyZW07XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gIH1cbiAgcCBidXR0b24ucnMtYnRuLS1zbWFsbCB7XG4gICAgbWFyZ2luOiAwLjM3NXJlbTtcbiAgfVxufVxuLnJzLWJ0bi0tcmVkIHtcbiAgcGFkZGluZy10b3A6IDAuNzVlbTtcbiAgcGFkZGluZy1ib3R0b206IDAuNzVlbTtcbiAgcGFkZGluZy1sZWZ0OiAxLjkzNzVlbTtcbiAgcGFkZGluZy1yaWdodDogMS45Mzc1ZW07XG4gIGNvbG9yOiAjZTExMDEwO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2UxMTAxMDtcbiAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuLnJzLWJ0bi0tcmVkOmhvdmVyIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICNlMTEwMTA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMTEwMTA7XG59XG4ucnMtYnRuLS1yZWQ6YWN0aXZlIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICM2YTAwMDA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM2YTAwMDA7XG59XG4ucnMtYnRuLS1yZWQ6ZGlzYWJsZWQge1xuICBjb2xvcjogIzdmN2Y3ZjtcbiAgYmFja2dyb3VuZDogI2NhY2FjYTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NhY2FjYTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuLnJzLWJ0bi0tcmVkOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cbi5ycy1idG4tLXJlZC5ycy1idG4tLXNlbGVjdGVkIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICNlMTEwMTA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMTEwMTA7XG59XG4ucnMtYnRuLS1yZWQucnMtYnRuLS1zZWxlY3RlZDpob3ZlciB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjNmEwMDAwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjNmEwMDAwO1xufVxuLnJzLWJ0bi0tcmVkLnJzLWJ0bi0tc2VsZWN0ZWQ6YWN0aXZlIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICNlMTEwMTA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMTEwMTA7XG59XG4ucnMtYnRuLS1yZWQucnMtYnRuLS1zZWxlY3RlZDpob3ZlcjpkaXNhYmxlZCB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjZTExMDEwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTExMDEwO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG4ucnMtYnRuLS1zbWFsbCB7XG4gIHBhZGRpbmctdG9wOiAwLjVlbTtcbiAgcGFkZGluZy1ib3R0b206IDAuNWVtO1xuICBwYWRkaW5nLWxlZnQ6IDAuNWVtO1xuICBwYWRkaW5nLXJpZ2h0OiAwLjVlbTtcbn1cbi5ycy1idG4tLWdyZWVuIHtcbiAgcGFkZGluZy10b3A6IDAuNzVlbTtcbiAgcGFkZGluZy1ib3R0b206IDAuNzVlbTtcbiAgcGFkZGluZy1sZWZ0OiAxLjkzNzVlbTtcbiAgcGFkZGluZy1yaWdodDogMS45Mzc1ZW07XG4gIGNvbG9yOiAjMGFiOTNhO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzBhYjkzYTtcbiAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuLnJzLWJ0bi0tZ3JlZW46aG92ZXIge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzBhYjkzYTtcbiAgYm9yZGVyOiAxcHggc29saWQgIzBhYjkzYTtcbn1cbi5ycy1idG4tLWdyZWVuOmFjdGl2ZSB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMDg3OTI3O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDg3OTI3O1xufVxuLnJzLWJ0bi0tZ3JlZW46ZGlzYWJsZWQge1xuICBjb2xvcjogIzdmN2Y3ZjtcbiAgYmFja2dyb3VuZDogI2NhY2FjYTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NhY2FjYTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuLnJzLWJ0bi0tZ3JlZW46Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuLnJzLWJ0bi0tZ3JlZW4ucnMtYnRuLS1zZWxlY3RlZCB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMGFiOTNhO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMGFiOTNhO1xufVxuLnJzLWJ0bi0tZ3JlZW4ucnMtYnRuLS1zZWxlY3RlZDpob3ZlciB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMDg3OTI3O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDg3OTI3O1xufVxuLnJzLWJ0bi0tZ3JlZW4ucnMtYnRuLS1zZWxlY3RlZDphY3RpdmUge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzBhYjkzYTtcbiAgYm9yZGVyOiAxcHggc29saWQgIzBhYjkzYTtcbn1cbi5ycy1idG4tLWdyZWVuLnJzLWJ0bi0tc2VsZWN0ZWQ6aG92ZXI6ZGlzYWJsZWQge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzBhYjkzYTtcbiAgYm9yZGVyOiAxcHggc29saWQgIzBhYjkzYTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuLnJzLWJ0bi0tc21hbGwge1xuICBwYWRkaW5nLXRvcDogMC41ZW07XG4gIHBhZGRpbmctYm90dG9tOiAwLjVlbTtcbiAgcGFkZGluZy1sZWZ0OiAwLjVlbTtcbiAgcGFkZGluZy1yaWdodDogMC41ZW07XG59XG4ucnMtYnRuLS1ibHVlIHtcbiAgcGFkZGluZy10b3A6IDAuNzVlbTtcbiAgcGFkZGluZy1ib3R0b206IDAuNzVlbTtcbiAgcGFkZGluZy1sZWZ0OiAxLjkzNzVlbTtcbiAgcGFkZGluZy1yaWdodDogMS45Mzc1ZW07XG4gIGNvbG9yOiAjMTY3MWY0O1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzE2NzFmNDtcbiAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuLnJzLWJ0bi0tYmx1ZTpob3ZlciB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMTY3MWY0O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMTY3MWY0O1xufVxuLnJzLWJ0bi0tYmx1ZTphY3RpdmUge1xuICBvdXRsaW5lOiBub25lO1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzBiNDlhMjtcbiAgYm9yZGVyOiAxcHggc29saWQgIzBiNDlhMjtcbn1cbi5ycy1idG4tLWJsdWU6ZGlzYWJsZWQge1xuICBjb2xvcjogIzdmN2Y3ZjtcbiAgYmFja2dyb3VuZDogI2NhY2FjYTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NhY2FjYTtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuLnJzLWJ0bi0tYmx1ZTpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG4ucnMtYnRuLS1ibHVlLnJzLWJ0bi0tc2VsZWN0ZWQge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzE2NzFmNDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzE2NzFmNDtcbn1cbi5ycy1idG4tLWJsdWUucnMtYnRuLS1zZWxlY3RlZDpob3ZlciB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMGI0OWEyO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMGI0OWEyO1xufVxuLnJzLWJ0bi0tYmx1ZS5ycy1idG4tLXNlbGVjdGVkOmFjdGl2ZSB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMTY3MWY0O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMTY3MWY0O1xufVxuLnJzLWJ0bi0tYmx1ZS5ycy1idG4tLXNlbGVjdGVkOmhvdmVyOmRpc2FibGVkIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMxNjcxZjQ7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMxNjcxZjQ7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cbi5ycy1idG4tLXNtYWxsIHtcbiAgcGFkZGluZy10b3A6IDAuNWVtO1xuICBwYWRkaW5nLWJvdHRvbTogMC41ZW07XG4gIHBhZGRpbmctbGVmdDogMC41ZW07XG4gIHBhZGRpbmctcmlnaHQ6IDAuNWVtO1xufVxuLnJzLWJ0bi0tYmxhY2sge1xuICBwYWRkaW5nLXRvcDogMC43NWVtO1xuICBwYWRkaW5nLWJvdHRvbTogMC43NWVtO1xuICBwYWRkaW5nLWxlZnQ6IDEuOTM3NWVtO1xuICBwYWRkaW5nLXJpZ2h0OiAxLjkzNzVlbTtcbiAgY29sb3I6ICMwMDA7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDAwO1xuICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDFyZW07XG59XG4ucnMtYnRuLS1ibGFjazpob3ZlciB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMGFiOTNhO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMGFiOTNhO1xufVxuLnJzLWJ0bi0tYmxhY2s6YWN0aXZlIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMwODc5Mjc7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwODc5Mjc7XG59XG4ucnMtYnRuLS1ibGFjazpkaXNhYmxlZCB7XG4gIGNvbG9yOiAjN2Y3ZjdmO1xuICBiYWNrZ3JvdW5kOiAjY2FjYWNhO1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2FjYWNhO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG4ucnMtYnRuLS1ibGFjazpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG4ucnMtYnRuLS1ibGFjay5ycy1idG4tLXNlbGVjdGVkIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMwYWI5M2E7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwYWI5M2E7XG59XG4ucnMtYnRuLS1ibGFjay5ycy1idG4tLXNlbGVjdGVkOmhvdmVyIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMwODc5Mjc7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwODc5Mjc7XG59XG4ucnMtYnRuLS1ibGFjay5ycy1idG4tLXNlbGVjdGVkOmFjdGl2ZSB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMGFiOTNhO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMGFiOTNhO1xufVxuLnJzLWJ0bi0tYmxhY2sucnMtYnRuLS1zZWxlY3RlZDpob3ZlcjpkaXNhYmxlZCB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMGFiOTNhO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMGFiOTNhO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG4ucnMtYnRuLS1zbWFsbCB7XG4gIHBhZGRpbmctdG9wOiAwLjVlbTtcbiAgcGFkZGluZy1ib3R0b206IDAuNWVtO1xuICBwYWRkaW5nLWxlZnQ6IDAuNWVtO1xuICBwYWRkaW5nLXJpZ2h0OiAwLjVlbTtcbn1cbi5oZXJvIGJ1dHRvbi5kYW5nZXIsXG5idXR0b24uZGFuZ2VyIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMTEwMTA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMTEwMTA7XG59XG4uaGVybyBidXR0b24uZGFuZ2VyOmhvdmVyLFxuYnV0dG9uLmRhbmdlcjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMTEwMTA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMTEwMTA7XG59XG4uaGVybyBidXR0b24uZGFuZ2VyOmFjdGl2ZSxcbmJ1dHRvbi5kYW5nZXI6YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzZhMDAwMDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzZhMDAwMDtcbn1cbi5oZXJvIGJ1dHRvbi5kYW5nZXI6ZGlzYWJsZWQsXG5idXR0b24uZGFuZ2VyOmRpc2FibGVkIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogcmVwZWF0aW5nLWxpbmVhci1ncmFkaWVudCgxMjVkZWcsIHRyYW5zcGFyZW50LCB0cmFuc3BhcmVudCAycHgsIHJnYmEoMCwwLDAsMC4yKSAycHgsIHJnYmEoMCwwLDAsMC4yKSAzcHgsIHRyYW5zcGFyZW50IDNweCwgdHJhbnNwYXJlbnQgNXB4LCByZ2JhKDAsMCwwLDAuMikgNXB4KTtcbn1cbi5oZXJvIGJ1dHRvbi5kYW5nZXI6ZGlzYWJsZWQ6aG92ZXIsXG5idXR0b24uZGFuZ2VyOmRpc2FibGVkOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UxMTAxMDtcbiAgYmFja2dyb3VuZC1pbWFnZTogcmVwZWF0aW5nLWxpbmVhci1ncmFkaWVudCgxMjVkZWcsIHRyYW5zcGFyZW50LCB0cmFuc3BhcmVudCAycHgsIHJnYmEoMCwwLDAsMC4yKSAycHgsIHJnYmEoMCwwLDAsMC4yKSAzcHgsIHRyYW5zcGFyZW50IDNweCwgdHJhbnNwYXJlbnQgNXB4LCByZ2JhKDAsMCwwLDAuMikgNXB4KTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2UxMTAxMDtcbn1cbi5oZXJvIGJ1dHRvbi5kYW5nZXI6Zm9jdXMsXG5idXR0b24uZGFuZ2VyOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cbi5oZXJvIGJ1dHRvbiB7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDEuMmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm94LXNoYWRvdzogMCAwIDAgMXB4ICNmZmY7XG59XG4uaGVybyBidXR0b246Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xuICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2UxMTAxMDtcbn1cbi5oZXJvIGJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMCk7XG59XG4uaGVybyBidXR0b246ZGlzYWJsZWQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiByZXBlYXRpbmctbGluZWFyLWdyYWRpZW50KDEyNWRlZywgdHJhbnNwYXJlbnQsIHRyYW5zcGFyZW50IDJweCwgcmdiYSgyNTUsMjU1LDI1NSwwLjMpIDJweCwgcmdiYSgyNTUsMjU1LDI1NSwwLjMpIDNweCwgdHJhbnNwYXJlbnQgM3B4LCB0cmFuc3BhcmVudCA1cHgsIHJnYmEoMjU1LDI1NSwyNTUsMC4zKSA1cHgpO1xufVxuLmhlcm8gYnV0dG9uOmRpc2FibGVkOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnQoMTI1ZGVnLCB0cmFuc3BhcmVudCwgdHJhbnNwYXJlbnQgMnB4LCByZ2JhKDI1NSwyNTUsMjU1LDAuMykgMnB4LCByZ2JhKDI1NSwyNTUsMjU1LDAuMykgM3B4LCB0cmFuc3BhcmVudCAzcHgsIHRyYW5zcGFyZW50IDVweCwgcmdiYSgyNTUsMjU1LDI1NSwwLjMpIDVweCk7XG59XG4uaGVybyBidXR0b246Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuLnJzLWljb24tYnRuIHtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC1tcy1mbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAtbXMtZmxleDogMCBhdXRvO1xuICBmbGV4OiAwIGF1dG87XG4gIG1pbi13aWR0aDogMTgwcHg7XG4gIGNvbG9yOiAjMDAwO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuLnJzLWljb24tYnRuOmhvdmVyIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMwYWI5M2E7XG59XG4ucnMtaWNvbi1idG46YWN0aXZlIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMwODc5Mjc7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwODc5Mjc7XG59XG4ucnMtaWNvbi1idG46ZGlzYWJsZWQge1xuICBjb2xvcjogIzdmN2Y3ZjtcbiAgYmFja2dyb3VuZDogI2NhY2FjYTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NhY2FjYTtcbn1cbi5ycy1pY29uLWJ0bjpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG4ucnMtaWNvbi1idG5fX2ljb24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEuODc1ZW07XG4gIGhlaWdodDogMS44NzVlbTtcbiAgLW1zLWZsZXg6IDAgMCA1MHB4O1xuICBmbGV4OiAwIDAgNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cbi5ycy1pY29uLWJ0bl9fbGFiZWwge1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgcGFkZGluZy1sZWZ0OiAxZW07XG4gIC1tcy1mbGV4LXBhY2s6IHN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tcy1mbGV4OiAxO1xuICBmbGV4OiAxO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAyMDBtcyBlYXNlO1xufVxuLnJzLWljb24tYnRuX19sYWJlbDpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICMwYWI5M2E7XG59XG4ucnMtaWNvbi1idG5fX2ljb25fX3dyYXBwZXIge1xuICB3aWR0aDogMi41ZW07XG4gIGhlaWdodDogMi41ZW07XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICMwMDA7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxuLnJzLWRhbmdlci1idG4ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDIyMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xuICBwYWRkaW5nLWxlZnQ6IDMwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlMTEwMTA7XG4gIGZvbnQtZmFtaWx5OiBFbGVjdHJvbGl6ZSwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICNmZmY7XG4gIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlO1xufVxuLnJzLWRhbmdlci1idG46aG92ZXIsXG4ucnMtZGFuZ2VyLWJ0bjp2aXNpdGVkLFxuLnJzLWRhbmdlci1idG46dmlzaXRlZDpob3ZlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWEwYzBjO1xuICBjb2xvcjogI2ZmZjtcbn1cbi8qXG4gICAqIERlZmF1bHQgc2V0dGluZ3M6XG4gICAqL1xuLypcbiAgICogQnJlYWtwb2ludCBzZXR1cDpcbiAgICovXG5pbnB1dFt0eXBlPSdyYW5nZSddIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlcjogc29saWQgMC41ZW0gdHJhbnNwYXJlbnQ7XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiAxNWVtO1xuICBoZWlnaHQ6IDJlbTtcbiAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgZm9udC1zaXplOiAxZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbmlucHV0W3R5cGU9J3JhbmdlJ10sXG5pbnB1dFt0eXBlPSdyYW5nZSddOjotd2Via2l0LXNsaWRlci1ydW5uYWJsZS10cmFjayxcbmlucHV0W3R5cGU9J3JhbmdlJ106Oi13ZWJraXQtc2xpZGVyLXRodW1iIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuaW5wdXRbdHlwZT0ncmFuZ2UnXTo6LW1zLXRyYWNrIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiB0cmFuc3BhcmVudDtcbn1cbmlucHV0W3R5cGU9J3JhbmdlJ106Oi13ZWJraXQtc2xpZGVyLXJ1bm5hYmxlLXRyYWNrIHtcbiAgd2lkdGg6IDE1ZW07XG4gIGhlaWdodDogMC41ZW07XG4gIGJvcmRlci1yYWRpdXM6IDAuMjVlbTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNlMTEwMTAsICNlMTEwMTApIG5vLXJlcGVhdCAjY2FjYWNhO1xuICBiYWNrZ3JvdW5kLXNpemU6IDAlIDEwMCU7XG59XG5pbnB1dFt0eXBlPSdyYW5nZSddOjotd2Via2l0LXNsaWRlci10aHVtYiB7XG4gIG1hcmdpbi10b3A6IC0wLjI1ZW07XG4gIGJvcmRlcjogbm9uZTtcbiAgd2lkdGg6IDFlbTtcbiAgaGVpZ2h0OiAxZW07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm94LXNoYWRvdzogMCAwIDAuMTI1ZW0gIzMzMztcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cbmlucHV0W3R5cGU9J3JhbmdlJ106Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xuICBib3gtc2hhZG93OiAwIDAgMXB4ICNlMTEwMTA7XG59XG5pbnB1dFt0eXBlPSdyYW5nZSddLnByb2dyZXNzIHtcbiAgY3Vyc29yOiBpbml0aWFsO1xufVxuaW5wdXRbdHlwZT0ncmFuZ2UnXS5wcm9ncmVzczo6LXdlYmtpdC1zbGlkZXItdGh1bWIge1xuICBkaXNwbGF5OiBub25lO1xufVxuaW5wdXRbdHlwZT0ncmFuZ2UnXS5wcm9ncmVzczpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG59XG5pbnB1dFt0eXBlPSdyYW5nZSddLmFuaW1hdGVkOjotd2Via2l0LXNsaWRlci1ydW5uYWJsZS10cmFjayB7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtc2l6ZSA0MDBtcyBlYXNlLWluO1xufVxuLypcbiAgICogRGVmYXVsdCBzZXR0aW5nczpcbiAgICovXG4vKlxuICAgKiBCcmVha3BvaW50IHNldHVwOlxuICAgKi9cbi5kb3duLWFycm93IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIHBhZGRpbmc6IDFlbTtcbiAgZmxvYXQ6IG5vbmU7XG4gIGNsZWFyOiBub25lO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwczovL3N0YXRpYy5yZWRzaWZ0LmlvL2Fzc2V0cy9pY29ucy9kb3duLWFycm93LXdoaXRlLTEuMC5zdmdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtc2l6ZTogMzBweCAyMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBvcGFjaXR5OiAwLjY7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzM1LCAxLjE1NSkgNDAwbXM7XG59XG4uZG93bi1hcnJvdzpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG59XG4vKlxuICAgKiBEZWZhdWx0IHNldHRpbmdzOlxuICAgKi9cbi8qXG4gICAqIEJyZWFrcG9pbnQgc2V0dXA6XG4gICAqL1xuLnN0eWxlLXN3aXRjaGVyIHtcbiAgei1pbmRleDogMTAwMDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC1tcy1mbGV4LXBhY2s6IGVuZDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICByaWdodDogMDtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICBwYWRkaW5nOiAwLjhlbTtcbiAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwwLjkpO1xufVxuLnN0eWxlLXN3aXRjaGVyIGJ1dHRvbiB7XG4gIG1hcmdpbi1yaWdodDogMWVtO1xufVxuXG5cblxuLyohIG5vcm1hbGl6ZS5jc3MgdjMuMC4zIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyBhbmQgSUUgdGV4dCBzaXplIGFkanVzdCBhZnRlciBkZXZpY2Ugb3JpZW50YXRpb24gY2hhbmdlLFxuICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYW55IEhUTUw1IGVsZW1lbnQgaW4gSUUgOC85LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAgaW4gSUUgMTAvMTFcbiAqIGFuZCBGaXJlZm94LlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGBtYWluYCBpbiBJRSAxMS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgOC85LlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IG1vZGVybiBicm93c2VycyBmcm9tIGRpc3BsYXlpbmcgYGF1ZGlvYCB3aXRob3V0IGNvbnRyb2xzLlxuICogUmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDUgZGV2aWNlcy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSBvZiBmb2N1c2VkIGVsZW1lbnRzIHdoZW4gdGhleSBhcmUgYWxzbyBpbiBhblxuICogYWN0aXZlL2hvdmVyIHN0YXRlLlxuICovXG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbiAgbWFyZ2luOiAwOyAvKiAzICovXG59XG5cbi8qKlxuICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cblxuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cbiAqIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOC85LzEwLzExLCBhbmQgT3BlcmEuXG4gKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiAqICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiAqICAgIGBpbnB1dGAgYW5kIG90aGVycy5cbiAqL1xuXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cblxuaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xufVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cblxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm9yZGVyOiAwOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDtcbn1cblxuLypcbiAgICogRGVmYXVsdCBzZXR0aW5nczpcbiAgICovXG4vKlxuICAgKiBCcmVha3BvaW50IHNldHVwOlxuICAgKi9cbi5oZXJvIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1pbi1oZWlnaHQ6IDUwMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmhlcm8tc3RpY2t5LWhlYWRlcixcbi5oZXJvX19oZWFkZXIge1xuICB6LWluZGV4OiAxMDA7XG4gIHBhZGRpbmc6IDFlbTtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuLmhlcm8tc3RpY2t5LWhlYWRlciBoMyxcbi5oZXJvX19oZWFkZXIgaDMge1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xuICBvcGFjaXR5OiAwLjc7XG4gIG1hcmdpbjogMDtcbn1cbi5oZXJvLXN0aWNreS1oZWFkZXIge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cbi5oZXJvLXN0aWNreS1oZWFkZXIgPiAqIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuLmhlcm8uLWVmZmVjdC1kYXJrZW46OmJlZm9yZSxcbi5oZXJvLi1lZmZlY3QtbGlnaHRlbjo6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHotaW5kZXg6IDA7XG4gIGNvbnRlbnQ6IFwiIFwiO1xuICBvcGFjaXR5OiAwLjI7XG59XG4uaGVyby4tZWZmZWN0LWRhcmtlbjo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbn1cbi5oZXJvLi1lZmZlY3QtbGlnaHRlbjo6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cbi5oZXJvX19oZWFkZXIge1xuICAtbXMtZmxleC1pdGVtLWFsaWduOiBzdGFydDtcbiAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcbn1cbi5oZXJvIGNvZGUge1xuICBmb250LXNpemU6IDNlbTtcbn1cbi5oZXJvIHAge1xuICBmb250LXNpemU6IDEuNWVtO1xufVxuLmhlcm9fX2NvbnRhaW5lciB7XG4gIHotaW5kZXg6IDk5O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC1tcy1mbGV4OiAxIDAgYXV0bztcbiAgZmxleDogMSAwIGF1dG87XG4gIGNvbG9yOiAjZTBlMGUwO1xufVxuLmNvbnRlbnQge1xuICBwYWRkaW5nOiAxZW07XG59XG4uY29udGVudC0tY29sbGFwc2Uge1xuICBtaW4taGVpZ2h0OiBpbml0aWFsO1xufVxuLmNvbnRlbnRfX2NvbnRhaW5lcixcbi5jb250ZW50X19jb250YWluZXItLWV4cGFuZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMGUwZTA7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbn1cbi5jb250ZW50X19jb250YWluZXItLWV4cGFuZCB7XG4gIG1pbi1oZWlnaHQ6IDQ5NnB4O1xufVxuLyogaVBob25lIFtwb3J0cmFpdCArIGxhbmRzY2FwZV0gKi9cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuaGVyby1zdGlja3ktaGVhZGVyIHtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICB9XG4gIC5oZXJvLXN0aWNreS1oZWFkZXIgPiAqIHtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICB9XG59XG4vKiBpUGFkIFtwb3J0cmFpdCArIGxhbmRzY2FwZV0gKi9cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSkgYW5kIChtYXgtd2lkdGg6IDY0ZW0pIHtcbiAgLmhlcm8ge1xuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsO1xuICB9XG4gIC5oZXJvLXN0aWNreS1oZWFkZXIge1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDEwMCU7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XG4gIH1cbn1cblxuXG5cbioge1xuICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogcmdiYSgwLDAsMCwwKTtcbn1cbi4tYmctcGl4ZWx0cmFja2VyLWhlcm8ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9hc3NldHMvY2N0di5qcGdcIik7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyYTE4MTY7XG59XG4uaGVyby1zdGlja3ktaGVhZGVyLS1hY3RpdmUge1xuICBib3gtc2hhZG93OiAwcHggMHB4IDJweCAycHggcmdiYSgwLDAsMCwwLjE1KTtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vYXNzZXRzL2NjdHYuanBnXCIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmExODE2O1xufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
